(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1039680,      20574]
NotebookOptionsPosition[   1022537,      20028]
NotebookOutlinePosition[   1023904,      20071]
CellTagsIndexPosition[   1023635,      20062]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Logistic regression", "Title",
 CellChangeTimes->{{3.560338647035289*^9, 3.560338686618744*^9}, {
   3.560344837145239*^9, 3.560344840943543*^9}, 3.560388246890539*^9, 
   3.5604319710724707`*^9, {3.560461619800582*^9, 3.5604616220698433`*^9}, {
   3.560461671147038*^9, 3.5604616713341017`*^9}}],

Cell[CellGroupData[{

Cell["Sigmoid function", "Section",
 CellChangeTimes->{{3.560338740508828*^9, 3.560338743155175*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sigmoid", "[", "z_", "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "z"}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.56033857348628*^9, 3.560338657231276*^9}, 
   3.5603390973292503`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"#", ",", 
      RowBox[{"N", "@", 
       RowBox[{"Sigmoid", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5"}], "]"}]}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.5603399609110327`*^9, 3.560339996738554*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "5"}], "0.0066928509242848554`"},
    {
     RowBox[{"-", "4"}], "0.01798620996209156`"},
    {
     RowBox[{"-", "3"}], "0.04742587317756678`"},
    {
     RowBox[{"-", "2"}], "0.11920292202211755`"},
    {
     RowBox[{"-", "1"}], "0.2689414213699951`"},
    {"0", "0.5`"},
    {"1", "0.7310585786300049`"},
    {"2", "0.8807970779778823`"},
    {"3", "0.9525741268224334`"},
    {"4", "0.9820137900379085`"},
    {"5", "0.9933071490757153`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5604603535387278`*^9, 3.56046370332172*^9, 
  3.5604704925116043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sigmoid", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560338744944003*^9, 3.560338757426649*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
8P//X4Kyfm5u/Z//D7Z+qtI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {0., 0.9999546021127688}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560460353843522*^9, 3.5604637033599*^9, 
  3.56047049284134*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"range", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.5603422718903*^9, 3.560342276184804*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$opts", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"Join", "[", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{"Gray", ",", "Dashed"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "range"}], ",", 
              RowBox[{"+", "range"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{"Gray", ",", "Dashed"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "]"}]}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"Directive", "[", "Red", "]"}]}], "}"}], "}"}]}], "}"}], 
        ",", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ColorFunction", "\[Rule]", " ", 
      RowBox[{"ColorData", "[", "\"\<DarkRainbow\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", " ", "600"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560342263788253*^9, 3.5603422959688187`*^9}, {
   3.560342422894657*^9, 3.560342500124065*^9}, {3.560343060057725*^9, 
   3.560343064845256*^9}, {3.560343155676038*^9, 3.560343160158169*^9}, {
   3.560343952328373*^9, 3.560343980826507*^9}, {3.560344137820901*^9, 
   3.560344216378551*^9}, 3.560344259526682*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Sigmoid", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Large"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Re[z]\>\"", ",", "\"\<Im[z]\>\"", ",", 
        "\"\<Abs[Sigmoid[z]]\>\""}], "}"}]}], ")"}]}], ",", 
   RowBox[{"Evaluate", "[", "$opts", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560338786630227*^9, 3.56033886585752*^9}, {
   3.560339124396987*^9, 3.560339166207136*^9}, {3.560339198516012*^9, 
   3.560339202784257*^9}, {3.560339304335087*^9, 3.560339308839451*^9}, {
   3.5603395992363997`*^9, 3.560339599538151*^9}, {3.560339788689764*^9, 
   3.560339830817932*^9}, {3.560342047788066*^9, 3.5603421185490217`*^9}, {
   3.560342168977251*^9, 3.560342262829768*^9}, {3.560342297010894*^9, 
   3.5603423022191143`*^9}, {3.560342408411234*^9, 3.5603424325631037`*^9}, {
   3.560342504065671*^9, 3.560342538061858*^9}, {3.560344121968442*^9, 
   3.5603441573816423`*^9}, {3.560344261150683*^9, 3.5603443029052134`*^9}, 
   3.560344591961533*^9, 3.5603539861751223`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnHVcVcn7xw8mYF3sxkCxu9bgjN26uliIYjfG2oVgomJgJ2sHGFgIityj
2ImISqiEYFD30iAqP5c7n5k9I/f1e335Y+9r3zs788xnnnnmmTlzTu0Jc4ZO
LiRJkkdRSSr867etpyYoL6+cgt/YtK7k6OblstKndK0dVhaMZzfxe+NSzk3e
87xSVJ8dJRl3Syv+ataWQ/K5EuWcHSOKMX6y8cSBfWPPyXfy6zFhvOOdG5v7
xvnLF/PLZ2rB470eXVlZ/ql8NZ9/Ynxiysdif8wJk6X8vxB/8LVDc4deyv4o
HzGUl1n9x4db//Xtq3zSUD/jvqf6h3/tlyTfMthDwL+2r/hz16Nk+YzBfsbt
a/0d9GGuTt5h6C/j7eOnS739dXKAQR/GXaPqu8yJ1KE9xqe9nPO2tZ5xBbqe
iu3oFHWO64xfn4XlbqeP5DqDV56e6P9PzcNMZ/CHGZe7li5/gekM7jqk3d+b
x2qZzuBNvg1b0NMtiOkMHnnr3VTL+tFMZ/DSj/YXKrU1iekM/vbWceuva1KY
zuD2a4Mt2nZPYTqD5+2906y+j57pDD63RveNvmP0TGemz/jzESHN9Exn8Lgy
fn3qVtIzncGb1rBqP64E4wr0e3bZfMvdu1xn8MkVajR03sx1xm/ahND6lpu5
zuB35vacmFL4ItMZ3O7WtNNBDxWmM3hI1MubJ+a/YjqDN4t2XtTDKZ7pDF7L
ZUhJp9uFCHQGt/5rVUqDMrlMZ9avfVe6X+iXznRm/vLg0TPLmBSmM/iX4B79
5SiuM/iaUSUCa83kOoO3WhUU9qo11xk8NyUj6Y8qXGfo5FBlZLdOD7jO4IVf
JcwN2M51Bs87f2j/2j1cZ/xmvKtwO6QG1xk8Yc7YCg2+cp3BxzZ0r18ulOsM
buO+5OznA4lMZ/Av/Qc8b9GuCNMZ/Jr5+y8j2/9gOoN/KvVJ//cVrjO45UeT
PruLpDKd2bycW2rUsGSuM/jNL6erLprHdQY/cikp4Fk7rjP4jIf9dp6uynWG
Hm6x9rtNrnCdwZMCtM0iJ3OdwfcXPaOv0ZHrDN5u3zpz7WAeN/Brf2dYuS+x
PG6AN19U8cPaxi+ZzuB/tRrc8tK+GKYz+NcV3efduKpncQN8wq1r+yf/TGU6
g892DE6z/crjBuMWrRbe+MHjBvjEIxElWztxncEvb5jXo7oN1xm8uPZmqSU1
uc7gWdFHo5JKc53R7yF759mM3sF1Bn+zPPrh0tpcZ/C1I7yP9Pbk6yB4mb/3
HWpqeZ71E3zKy3PxP0fdYjrj16m5yVG3eL4Ogl9venb8movhTGfwCRcPz6jT
NI7pDH65zrgWC7smMJ3B9ed0Tdo3SmY6s/ZnzJ+e3FPHdAZPr+n8V4Y3XwfB
gz5v6DPqHV8Hwfs7XDTpr+PrIPj+eR/nS9l8HUT/OjiemT9lIdcZPNzP4vux
uM1MZ/DgWyW2fWjOdQYvOqteeMlGPN8AH/BHm5Wl191k/QcfkbjJIzfgEdMZ
v9oaw3tF93jDdAZ3nnUv6X25aKYzuH5m+YNeAZ+YzuCVA8eOPRARz3QGd+i1
0aXf0CSmM/jWGxnPW59KZjqD91l/824/W64z+LyfRW/Ye3GdwbdknV3p+Ibr
jH58KeUTmDWd6wz+NT6wRIfnXGdw+x5frj6VuM7gZR1OrEp77sV0Bv8Z1Pvb
kOgbTGdw107PF9wOeMh0Af/WUPfwhOlrpjN+v+f9+xfJdAbPm+F68PzyOKYz
eLV5T48NDvrKdAb/UPS68vp4ItMZvMyNog813bnO4O9vjTyQY8l1BrfVB1k+
2M51Bo/buUTT5BHXGfaK/gweIfgz+EvBn8FFfwbvK/gzuOjP4AGCP4M7Cf6M
3yTBn8ErCf4MPkbwZ3A3wZ/BRX8GF/0ZXPRn2DVIiM/gYnwGXy/EZ3CNEJ/B
JwrxGXyZEJ/BLwnxGdxeiM8svxDiM34ThfgM7inEZ3AxPoOL8RlcjM/gYnxG
+5uFfAM8Ucg3wMV8A7y9kG+AjxLyDfCmQr4BPkDIN8AjhXwD3E7IN8BnCvkG
fh2FfANczDfALwn5BngxId8AF/MNtDNOyJ/Biwr5M7iYP4NnCfkzuJg/g48R
8mfw9kL+DC7mz+AXhPwZPE7In8HF/JntC4X8GVzMn1m8EfJncDF/Rn1Phf0g
+CRhPwgu7gfBA4X9ILi9sB8Efy3sB9m5grAfZFzYD4I3F/aD4M+F/SDbTwv7
QXBxP4hfcT8ILu4HwcX9IP6/08L5Bvh14XwDXDzfAH8knG+AbxTON8CbCecb
4LHC+QZ4FeF8A/ydcL4B7iCcb7B8YZ/6fAN8nnC+AS6eb+BXPN8AF8838N+N
nNcRI+d1xMh5HTFyXkeMnNcRI+d1xMh5HTFyXkeMnNcRI+d1xMh5HTFyXkeM
nNcRI+d1BOd1Afn1v9EuW1omu8+OssrP2YWy1+fEyHfz60nRlmhRdbuPYxnl
5Oq6D//ZGMHKg5fefK/s/UM6eY+By+BNXV7/7Lo3U75hqIfxxYP7/OlYJZ3V
U9uxQosIHzNlyeqqXSf0KERQDzjiMOxpn29/YaXNlKlmQWXfs3rAHyf5NbCZ
l8rsAY+Sq6U/Gv2N2QM+bUGZb9M6ZLB6DuTr+l3bqtbH/kFrYll58PeLvNM6
d9az8tsNXG4klAcPp+VhfytDu6SJYD/4LcF+8GeC/eATBftrGHQjToKe4KKe
xQ3jQryE8QWvLowveAdhfMGX0/GFP+F3oc2DRTX917B5Df62g+XoqYeWM33A
3YPCXCJavmYc8/7og3eLzpqEMjvB68bV8Cuz+DOzE/WM9+g0Z0fNBMZRfqTm
puXdu3qUIyjvFPFs65ZCPC6BLx+aMu6ViZ75Afy58jCb9Y61HrK4AV50fqc+
0ysGs7gBPti/49Zu1nEsboDHLx+U6PSezwvEs+6LCxVpY5LN4gnKn50b9zL1
QAbrF8rXC59hvcLahGBcMI+6fu897W2fbGY/+PUuafVr33vEdAbv8KnrqnvH
opj94CtiyY6jG5NZecTXu6WkA+kNo1i/xPmLfqH80m+3Og7r+oPZL55bYv6g
nnoZFmuLtUtj/obydew6dVy2L4u1i3mdHr/zo25sDtMN/Oj+BR3dfLJYu9Bj
9x6/ylV/7e/QLsrn9v9wp659KmsX60axTQ1tQtemsnZRj0mXDtX9Vn9l9UMn
rdO5wKn341g94NYWWQnfD8ezccd/H3A70H7tkg+MY90Y3mjaocBO0ez/h73B
R4f3t7d5w8YLXOdSrX9AxAdWHuvMmoh5b/90CGP1s/3Lst0rxjaOZ/ajns1U
H+gJfsPmbb/Va3VMR8SlvUFlVocf4fMC3DalS84xbz4vwKd+MD+wo/1npif4
ezqOsBPr4STqP7CHtSuMr5jPQ1/Ew27CvAD3FeYF+B/CvABfJcwLrM+JlRd9
2tY4kvVLjMPoF8oPFeY7yhdvG+50okUe6xfLk+l8x3igPOYL2kV8zqBxBvWD
ewvxBHER8RP1o/y2EXnHp3xPYf6M8tvc/O+u0yeL8Z8Yif8E8V+IwwRxGP+O
eJy+qWSt4V91rH7Ul/dgV67ktUYsr6A87EScdLl6sH5ThZ8XI87ct431Gl0/
hOVp4JLDwqjqRbk+iAMDagXedb7C992IGwljR/uSVWmsPNqJrLe6zZKjX5g9
4L0HD7161SyJcfhtLRrfUA7j+0CwE1y0E/ngWLreoTzG0bLvifJjP/D4hvLa
Y1/KHV+XIupMoLOwPhKsj/B/9jyO+j/8DXoWo/4M/4eePWj8QXnMyzs0zsCf
4Y/ZndXxFnGsOx0X2AM9A+k6hf5iHq2l/hCcX+6+9s+8yr55eaWU0NcrTlhM
y5J98stHy+BhT6q98I3JYeWndC4/0qqvKVu/UB48dcOBpguSCzG+Il+3Qkqr
T4Wrv/TOYPUkhVuc8XEsSpq0/6v8MJ8frF3wiNv2JfPm/WDlQw9XNN1hVYKI
7YIv8fi7dKfVJoyP9y511cdRQ3q8JQ+fzk+TO+aPYxrr776dboPC576VHxvK
aycayiszJ2UX+XD3E+Mo/zDG4/3eAcnMTpTvQutfbbCT6XZ5Vgc799xceVO+
7omM71sSUT7OL5PV/85gv7LEUa6yyCmd9Rcc/UV56Dz2yq0SjxpksnbF8rAT
fD7VB+XFcUS7qQb9lYF0XFAePGtpEcfrd7jO4El0vNBf8FKj/CYHdstmHP7w
LWDtyXnO6WxcMO7nvHJOXh0QyvRZYihPbmff9Ns98SvjKN8gLDXbo1MKGxeU
b0D9DfajfAy1H/aAm1I7Uf8Egz5kFNUZ+oCL4wI/XEXHEe2K5WEnuI7OF5QX
/RztDjD4D4mn8xTlwe9Rf0P94LF0/qK/4B7UD1sY9Gf8ge5watcF6aw85pG5
z32H81V4nIc/76mdeb7zRO7n8KvOa3vWtEr4JnsYOPPnpBsPxljM4PsCY34o
5tXor8jR3zL5cT5P61nfxPdcIt+3YnzjdlccXj87k9kJnfs6dAz8UI/biXHZ
OfnjuCMl+PMqY+Mi5jmwU+SI86hnTY1JRHeCxz2U/7q7f+n6NQuz/SzG5STV
OdRCM8mqbzkFv82v1Voxf7mzmJ8oyE9oOYLyVgtftNyerWP+jDhWyGL02Zdp
ycyvwIP7L3/j5JzK8kCMY5XEzNatiyUxfYzFH6x3G3ue3SCZpLF2ixrGS+7V
O61lmaLxjGP+vphsd6rHlxRmD3g7r/f3N0zLYPZgvNZ8PzIibWwys0ecdxh3
cPinoCeBnsJ5EcF5EepneWO10a9zFnwWdSbQGXYiX5pH839w5CfD6H4Z44j9
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
F8fP43aClxqXUbtWY24n9jfHdA9nKp93MjvBvXtFfshqyOcR48uuDqm2/jaz
E/zm1LFPZjx5zexk71uF727ZohT3W/CB7w4lHvPj/snud5Ailtc/M87eS4rL
SM5+fYLbyd73KZab+8+os8xO8OlFrZ+3b6AwO8FfVts9xm91MJu/4Kvp+x20
PNufBbXLy3w78QvrF/jSkm9GWIcksn6Bn09u0LHoo2TWL/BvXSLvuLryfhl+
Q/zPmZ7YmruJ9wvcyr5DkllJ3i/w1NBD99KnaFm/wL91KnPK3/0l6xe44TeK
9Qu88ITsc7XZPRmJgMdMGjC1djneL3CbZU3Gy3N4v8BvRm6qe2Yi7xfOn8Tx
Yu+zCOMFPk0YL/a+jzBe4M7CeIE/E8YLfLEwXuBewniBi+OF8yFxvoCL8wX8
gjBfwH3U80UCd6Dvv6Bf4PFWmTPtZyayfoGPEeYXuDi/2PmWML+w3zcR4hW4
GK/AewnxinEhXoG/Wl+7qmt9Hq/AxXgFXlKIV+y9NCH+gzcT4j+4GP/B2wnx
H1yM/+Bi/GdciP+4B+IqrKfgD4X1FDxbWE/BnYT1FFxcT1m7wnoKLq6n7L0A
Ib8CTxbyKPAQIV8CX6TOi9g9/F1blo60D+b5DPhHIW9h9Qv5Cc6Z1fkhywOJ
Og9k+R5R53ssryPqvI7lb8RI/kaM5G9Enb+xPI2o8zSWjxEhH1MWji/k7RhR
Vgl6uL1rlbJc//g7RcZF+Fgo7Vr/1HyP5/qHrDNTfBzLKeZ5vb/ObHqH9avv
5xJzrfqWVcodrfTqZtBbZmfN/H2BhVJ5S7lro6dz/c3yzyHLKTExG492PMLt
dHKvTv6t51BY1d3DJa4/futculd+2FDRzlKKa9dFZjP8vJg9Z/PnRWmly5jt
PQf+GcXs+atSfenf8hPWO7keS+RxYFe+f2qUJokBuVPGcX8oO65NrX/rSb7a
oWtIS25PxS65/1j1NVeK1vWIKTWF24PfJeWDl+aEsvlFptvWPpKXV1xJ1bVf
c8eJzxeb8EbjfBxLKKmzf5hVeszbbXC4ueJuZaZUigy5dbM/b7fJsky5744i
yp0e2/w8u/F2DfYUUibsaFJBbsvbXZWvZyGlrEesS+xG3l/bfB2KKsNvTbla
8Qlv12BPYeWgS9oCT5m3u3b2R22Ezw9t+qHhcs/v3P9HpCeu2mGVo/XeH1fd
rgP3E/yeHnXl8JJN3E/e5PtPrrbm3JaTH9fmftIwv785Wpcz5/vPrcT9JORM
N5KXl6e19u6VOmk8t/N0swHSv/V0ObfnZ0i5/+STX8LyrPqmak0XjfR45MPt
LPL+/qrrjgnaqnmjrryfzOdp43w907WPt/Zt/eQjX/fxezRl7x6zeq94fM5v
N0HbrProl0tXJjE78+r84dznVz0DW35+OsuD+/OJIeucf+bptJ49F+rTA/i8
m7q5a56vY4T2643N5oV2cDun9Xzx07rvHe2EIvbxARpu57n8fsVoc/bMy0v5
yvMuAw/WXg6LWZF7l+ddnkbySYP9EdqxBzTdkrJ53pW9OVaq86vd7ytN/Pb0
4fmJbUcH57q/2k13LbZnawDPTzLyywdrS7ZOn7R7Ce9XkoHLp7sXX/niMO/X
n4Z6ZNOxb3/G2/J+0XblxwOWTvj7Ge8XtVOu7HR7/bLBPO/Cn0n+P3k+SXWQ
F/78NL7kMd4vqps8Jq1WscsevF+jDDrLWZGDivos5f1yMIyLfDZ+ocvB+f/J
Jw3jKDvPcbj/9DXv1w/DuMvvBzpb36jB/Z/6iTwoxT1xw2PuV4b5mCp/cR+9
o2rD1+J4yeJ44fdD3XW1V/p8Zf2ifiufeazxfT+Rx3/J4Oey1/4PozrF8n6d
N8wLeXWH2Sn9Lv0nnzTMI/liRPEhfWvzeBJsmHdyrTVmY/+pwfMEOk/lwZ1H
PH12kM9rQzz5IS9Z2HNdYKcwZid+ffvm3Pjpz+f1MEPckKMON55yKIzPl9WG
OCN/eRV1uX4JPq+7GOISIYUTvwfacTtpHCOJyQe1kUE8/hvieRHyoEPouKuj
eN6SkL9eFCX2fRuWPmjN43AFQ/wk/c/ER5xazuMMjbekzra0NL8/uD00PpO1
jx7ttZjI7aHxnKzYUHHY1Hs8Dr/Oj3sliE3OMo8KM3i7+O3t2e9QpRDeLl1f
SMmOvnWXD+Dt0vWI6IuEBFZux9ul6xdpMiLzul0R3u44q+Kavr/4qSC3Aac6
8PhP101i88JhV6A/bxe/o6JPRtzswNs1+G1Zor1f70B4Ivd/w/PucmRSD1ey
shj3f0vDuk+WuZ1pGd+Q+4lXvp+XJed6HaySbP6G2WlYF8qRuo/+9Et11Ql2
WpCHeZ0Gt+nB7VxkyFvIhCFfdmWasnmidcxfZ8soi65UnK79+I7Nn2mUj20Q
p7Xcncb4BZonkO6lY6bXz2D17Df4jzK0yKyf07x4nKF+pbzYsLa5MieT8fB8
+wsr6es+RgcnpzNO54X2WNautkse8fkcRddBmw05lZc66hin66PcQeD96Pzy
UNejDTK0S4rrt15af/kDK/+a8mTBnm10XjxW20/3g6XJyFTbTaunR7LynpT3
VOsjTzLoSfwvVtxb60qaOL6KML5SG3oeuEmV30qKg8E/lWcXw/ffLBPI+Eia
p73unHf4jC/P83G/os1w727PVn5g9YMn0vdBYCd4XMrlnA1T0ll5nO9Z0ve1
Ud6Qf5orDR4NPPH5TTarx3B/wUzRrfLbsm14jpAPl1BGHg8erx93l/HZNN9L
1MWWGLngLrN/Da3/6D+2Tyq6sX2fVPDzL0kq+Dm1RMJou+p4omfn+U6T57Yn
vtmsftxDyKTvH6E8uObwi21mvhms/FV6DjZddQ4gEZ0hfipjVPFTz+5pBC24
eMX6cCqrB/cQitD3yMA9af0T1fVLATRvWSusg4ZxSdWGk8ytFwLiGTenurpk
OGzze/uV6fyUzqPKqjxTz94ji7ct7zUn661ojyzac5OeA7yn36lAu6gn1KfT
1Ld19Wzcab5N+gz4Mnb6TO7Pn+i6E+C4qOScPO7PuOezoVjNa2/YfRhJAo8U
xgvcXBgv8TkayhvO282I2m/18jKDH5KHWXKp08W5P88w+C1JUvmtpATR9ctO
5ed67U1av3XFq2N8nnJ/Fp8PguMcoI1q3klkMm1XvT+SJNx7yRLmNXi8MK9p
nCFCnCGDDfGETFTt+/Ryf8O+lWR03Ds29zaPt2fpOnUhYcv95alJjCNuFO4U
+eTeoSzWLs6NJwvnZuD2VyuFLbiQyDjGa5lqnvLvCniaO1/qt47bifigXxN+
YoonH0fMrwi1H0rwz9zO6nmHc61owZ/ZeY7Qr320v5XV4yWZ0riaKYxLWmpN
vbtVKSWm5vHEs7cyWT1WRuLbhYLjm1TTSPmONF4VS1DPi8H541hMeXzo08K9
77IYN+QhJkrE8NgBMYPTmD1t6TzSCfPL4A/FyANVPYgP4vySpKpG/LyWEb6L
6txU0LMI9WeTFWo9dQY9yWeVnr/ij4/5PscIDSle+5wP+U8cNpyrFFeGP/u7
UEAi8yutYV6UUA7uPvTiUjzLhyXxvQzUY9DnV75at4xHqeq8HnND/WR6UGGT
P9by+S6+N4F66DxSxHk0gJ4XpanmnSRp6fPBavT7HuClqb99UvmbJInvI4Ar
1M8/q/xcklrQcX+jGndJEt8jgJ1FaX9tVXpKEu7LTaL3KqEP1lM3VTzXs/t7
nVR5i57dlzutnu/aftSfXc7MLT7iJF8HMX+fqNZZ3LMzIW9Ufq7XamneUl8V
n/Xa0tRPZqjGUc/uP6T6Xt7vFMI4uw+f4pH1Knog1+0unvcJOrehOiSp5xfd
/5qTE6r8R69tQf3NQ+WfenbPJE1tjzadzot1Dd7u93/C83OU/1CzdGPNOG7n
LRpX6wt+ZU7HJUXwK+o/iug//+B7CUI+Q/2WVBLqX0r9ZLraT9j9yWrz79ey
8GTP3yXck5xK78GC497jRHqfVqiHqOvRa8fSfcfz9fdCq18KZZye05JRPSyO
1BrPz98m0Dz8pGqfKJFlNJ+xUJ0fMv9X1P4vSbepP5csWAdlulAe/l9WVV7P
7hsXHz5pyt373A9xb3Z/sb3DTnbg8Rn3deeo9WH3jTf4by9uYsvjFe7xzhF0
Rh6bIKyPuFe8W9Wunt0r1gvzAut4DaFfdF+mkMlv3YdFsTigtaLr1JRmjyNe
n2b7Vu10us86umNF0Biz94xvofH/wOgksx/x7HkHPQ8vqqjzTElZS8+B+wp5
qS3Ni96o9lmSMoaeG6j3ZXp2r1ivyp/1WsM5g6T4OXe8ddE9nHH45zOvK47n
At4wrsvX04IUd26nLWTBz4voOYBiM3tIeEwXti4QS3ru5Pis6MvIML5e7KT5
SUthPfU0klecNLKOb6frci8xzxHum7F6hHtH4MWFe1zgx4X7eP8fN9ausfpF
e9TfC9Uoe6qfcGni6CZ8X1SjbBs98Otsn+XCd0Q1yiX3A9FF+x0WviOqUQ7O
TTtTaMEF4TuiGmVIix7HP1oqwndENcqmuX7Wux+8FL4jqlEGF9ZU62QXK3wv
VKMUiQ0vvelRuvC9UI0ywXX76jpuqcL3Qn+VLxvqXrdZivC9UI3Sq+o/05Pd
9cL3QjVKkwqatmm99ML3QjVK5ezwqofr8Odt4Impm1bFa/TC91dNlfmV03Mv
bRP1NFVGeHyvceu+qKepssf5RbUuu0Q9TZUFuz73Ol35oqCnqVKr7qCW3jGK
0F9TRdeiUK73D7G/psop30111iaI/TVVhtpcfN1yrthfU6Vr3KMxbduJ/TVV
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
RyU7fn+VjS/ZQcf3/wDJCMO1
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
rSD4kT0W7iVYVfB7Y78XX5eYBX8YHxvF3h+5iuv4x0dW9p+PEL5Y+L/FPj+x
yy/6v0flmIW44OjK/vmvgj3RA8I/c4/osxv780exftHfZK9lmvCVwrsLftK1
5/HzRY8WvkN4Xdar8VKMFxTeImwXtv514YNDz74XZ/+u7P1sQg9/V/tsMuc3
wa+CrQW7Vp7fQ7BPbX2Fba2xEbX15j/ZPJzK+aitY3cXPCD6ltpn7G/BArVt
+RJhk4k92obPg757hPcJvqwca8DXSxrHWMRafQWzG+syYqjn9L6DxYPz9b2L
J8vePRp/XM9YLp5LzIXOu1Ljz2TLRXfOULJsbJEcow1EbjVnjOj2urdv8p4T
C7Efqxf7YPhiA3V95ZCzuTVvaOU4aDHR54VctU7WP3fhS6CzK9uG5TR+o/DD
yGqyDXpE9CA9b5WQw0vQwZWvYZe34Yw09h3wIdBB+DWL1+Yhvg8+ELoP2w0+
pbGtxmaj75rG+8h+9kqOBfdKtu+d0Cf43mEziDdHJO/j5pwt/LDYl8f1/R2Q
qWx/jP3sUtm/wM/YVrBn8v5umuznMHaGcNtk23e36O8FO1aOQ3/ATxJ9VuO4
lfwAOYG7k33APYTnyX7PUtqH/2TbNHQdfIW/44O34Ht173HJsd0w7FWyL4Qf
tWPtOIQYBJ8M34xYrGPYrqcrxxkdg75eePPw4TYL+gONvxQ2DR+MuOyQ2nHv
85xV9IDwock69j69d6WQmVsqyw00sjgo9A366/Hkc35tcpzFuX6Y+5PP2uTQ
V8jJ5chC43u3aRyPEI8+qvF3hK+pHethJxfFtxL+PGRoGHyufd7gL34yc9jX
icL3hk94Se2cCPTOtf3TdprTQntwO98mPFD4kcq29ebkM34StjM7roEPL2fH
ki8Jt0/2nZ7BVymOIV7R+Mm14ynW/2k2/arwW8JXhI4mbiOuRw0PC/7w7p/1
zMWRbT1vX42tJrhd/68SPq52vEo8MSlkeI+Qq1HC8xXzckr2e56MMwifn4j3
PhL3cs803fOo8F3JuvDR0Ie7xrwtK489FuN3JPOtR/IZuiXWAM256ir6K+Hb
auuX3Yp10qHFz7w15rMn98VekE+bGHSXsInYxtvj25G/SbEe7v2+dozBOvon
65ZHxcSe+r9G7Ri/1vuu07XLhD/MzhnMEJ7MOQgeEl8j5yOTcwvI5EOcq+Q5
9yZ/3wPxXuzV4No2a14990HRR+uZ8xT78Pjy/WI+NgJbdmPIPDEF81sFfijo
loJDOQOhAx8Ouf0haPTOQsHn9SvnS1rG/CNq506g78g+r+SryKOQT1k5ZA+f
lfxPt8Z5ju7CH+v/3hofkB3HE8+To+F5e8Yz2zbOHa7f+CzuH/LcIuZ/UtkX
5vnopt5xrtrFOHEdOuXuWA/zW8bzWSu5oANr50TIr0KTdyKO7x3P2Tlo4vrx
yf/JIxET7xMyeVnQ3UQvXdtmY69/CXneMuRi25CNRWrvR/vQ+/CbfVxKY90F
u+n/Cck+wl4h711iPZynXnGmds3Wf8jVicn3YV+Q2X1DTv4Qfj748HXsMTYO
W9ct9nrN2nktZO+cZD/lJOH/ZucR0TN/Z+c9ia12TN5b5Pbl2rEKdoCYeofa
cTW+Aj4DfsgCxT7E/ML3N9YPnZN9lWVq52cmZ9PEZegO5lyEb9XYPp8mfHay
r7NPsu1dsjaPuK9tvAv+tQke7pQsR0PRqdlxNHHuLhFLDm58jtDVT2TvYevY
R9bfNtY2IMY3FH1Q8tgduveV2vaMnMT+wX/2Yd/YO/bwUvhY25cmr9UzZAA9
hD5CX72b/WzOwoXJPMTOXpI8/9Tk/CN8JV+6ce38GM95KuSGfD66AR2BvjqF
WKqyP9e6WAaJj1+snYvBnx0bZwq7dnpyvhhevZ997/jwzVg/cgZfewRv58vm
Uw89+3ON3VQ774Qevjl0BfYLmlwTeRTyKW9VjuFuiG//MHj4YWU+QuMXHJl8
Zu5Prn9MiHvRq9hiEkbkWrCp6O0xte0TevWDkMlXNO3O2vc+x3uz/YIe2ToI
XbSVcJfGdq9r45zu2ODJ7/GNfOuO8Uz8mD7xXvTV3FrHxbXz8+wX9/dLlqXL
4uyTh7y8tkwhR0eHjMFX+Iv/gm3ERiL3qwTNGecsD449Rf65Fz+QOfg6fM/o
oJn/If42Oadkn2hg7B26C35hN5csXg/7+3ZtO81+P1XbX0JvXBPygxytEHP+
70vXfs5KoZfRz4s25ilr+Vq4Y/ir+K3wEp6gt1kja8XHeib2jP2iHkHsSZ58
9eR8BTnw6aHfdg3ZXi3WNk74xNijw5L5hz55MtZJvIEPQC0EWz6jtu5FnrDV
xAP4kUsk56Zu0bsWTY6dyZ9Mjjh64+wYZETlHNGSos+qnAuCt/ig+JzEHRcL
T9R4m+T8ALmaXvG98I3vu7pyXgaH65/a+va2bLtE3ePN2rlTahNbxDklnqQ2
Qo2E3PiVydenCr8RcxaofI7HBp+hxwV/qEHwzgcbn9EL45yOiGdiV6lZXKux
hxrXMSZUzqFgM8n/o+tZF/aSd2N7W4QMXJ6cAz5S975au1bE8fy3boSPOUff
dhU8KpZ/csrou5UbP3te4d2zfUzONTEA+di3K9st7Pi/Y9DY+keS87IvJ8vC
O/G9vJN1dArewCNyo+gV9PWHlWXkrZD532vLB7LxdMglMok9nBJ7RLzwbO36
Av4UND7VTzFnrZC7t0P27kkem5isq6bG2ibG+IBkXYLtREeRSydvC+PwB++p
7Z8QF+Cn9hdvbgs/AP+Xegz7clWsBz/v99ivu2PP1o1x1tmyWB/zHN7D+/Dv
v66tH5+Lvbor9o7cxusxZ2bQdeCZMb5E8XvI8/eNGP/a0PM8k71B/p8Mngyp
rV84v/B5cqxtaNDw/P7Q+ejPbsn1H+p+uxfX/Q4v9t1GBn/u1NhptXNQv4QN
xZZiG7G12EdkfEScnUPiXnzMDjHOeekZ8/8MfXtsbVnErqDr0XEtgkbmP8/m
J3zdpbYfjJ9BjNK/tk84I/k55Nbwx/HL8eHXaDxndeEXap9t1gYPhgZP4AVx
FvbpxWT/7YHkOijx3fnCDyXHRtOT5Ry7vkDYu+eC//dlP5sa7CLF4+Sy2hT7
dfh3xH3TQn5uiriPWlW7Ytlqin1/7DXfvG6sk7WRT2Od6Pxldc/5lfNFP8ZZ
5kwzf1g8f1zEtsS4+BvEHRvHNzGHa+vxzMr1AuITfBL8ZPID+LLoA3Jp5NTQ
7ZMjb0astF5ynZF640hijNq54p8a9xLQU/Bmtn+7eDHmWfBi0WI+L1ysU+Df
AyGHxNIXpPBTaucsLqc2jB8pvKzgafy1Yr3EWh9NzleTz6HmdktyTHpryPOp
rD/bd/guzteRxfXFDYQ7RcyzhfCntb+LmvTZurZZst91T8SJxIurFddufxH9
cePc/rHg4npuW+H3kp81rTGv8KteaSzPxMDk7VkHeUsUwRHFNdqbQv+gi55L
jpFvj28h9iQWblWclzhGY+cFb8hlUptl34eH3J5V3EPwUHZfCnHS5hpbKDsv
t2mxn4ZvMDvbvmCzqKOuo2sdtd6fyFMW2+Pzs2tJ5PE6Fsfo5GI4GwcV2/hx
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtmnfgz9UXxt/jvkORRCFkk1laIpIRMhokisqWUVIpmkZGWZWmCmkrklKh
oVQk7VKKptYvWlq0fs/Lc/843+85977nfd/7nOc891Nz4Oge52dJklylP0H/
T9T/BmmSnCXrIn9jcNxZfpMiSdrr/zM67nC1dZBfSba3/FGyA+TPyPVffln5
38hvpf9XKp4ray1/ptrGyD9a1+gtvwLHyS+ptkHcQ3aB/O/VVln+d7r/iNTH
PBfcRt9otTXO/Iw86yGyrvL3zXxtrsG1DpVdKn+n2o6R31/v8LD+X8s7BD8n
z3u+rKH8tsF9lfVsg3XsarU9oPg2WQ21zVH/ZPnXyFrLv0E2Vf402fHyu+qc
KfIX67xr5N+otumJr8m1e8uel3+IrnWD+u9WvEzxY7I+8k9W21Py1/KM8p/R
/wcV3y6rqXMW6ZjH5T8h6yu/i+wm+dXVN1zHn6h4ruKDFZ9b+Bl51oqKBynu
Ipuk+EFddzLHy65SfJ/iSfLv0/FPK14p6y//BbUvl3+PrK6u8Y7iD+SvZ/wU
v634ffmvyJopnqlzrpB/pexo+Wsyv9siWR31P6/4UfnfabxrK26hYyYoriB/
oO5/s+IZimfKTpB/h+zGxO/Eu/HNLpO/X+5vOV/xzYpvkXULvif33l/9A9Qf
ZEt0r4cVD5N/j/pXqP9JWT/5JxV+P95zOvNbbdcpPkjHDyk8Z5m7/WXHya+m
tq/kv8o30LF/yWYrHqPjp6nvLf3/g/Uim8P4yP5krsrOk/+s7D75r+n8Z+TX
0DnfKq6s+DfF8xV/lHt8Gf9quuep6u8rqyH/Q/X9Lb8dc1BxTR2/XfEGxZn8
V9S/Q3FJxZ3l/6tr3Kn4BMV/yt/F+CquKPuQZ8+9PrrpWl/J3yT7K15vo9pe
U/yz4u2Kj2WOqa2CfN0q+Vj+EFk57i3bnPmb8e2q6NihOmih4odYD7JT5Xcv
PJ+Z11Plv6zj7k68BpgPG2W/pF6Ty+V3K7z+WIdT5G9Q20/qKyNbIr+W2n4D
i2QHyn9dbTvlN5U9Lv9d5oT8lfJvVP8CxfcnvmZ3+e+pfbf62yuekhkDwIJy
3APsUn8n+VWZA7nnAHPhSFkb+RNlx+rcLrIf5ZdgTsn/CRzT/UqyphX/rHiM
4pv0f5DiCxkzXW+u4gHglSzl3Xgn+Z+r/TzWg/4PVnyRLOcduD/4l9AgrND1
/5U7kufW8bcqvkvxU4rnKB6oY6rrWWepbSnPG3w9rnu2+nepv7HirxSPVtxX
cSUd31xtV2fGZLC5nuJ6vJOsjPyqsk/kXwjmyq8m+5RnJh+wHnXOXcxj3a+m
/DvBCNa6+luylmU/yL+B55B/nuw/+bcwp+RfLAs6/zbF58q/VLaX4orBx/+p
9kv0vPsrPkPx74rHMr65vzc5aq78msHn/6P+ceo/OPj6f5EXFJ+hYw5MnZOY
3+Qvcsvzsj7yx4FR8p/j+TlH8TGKP1b8nuIXyUmKOyp+XH45WR/WsvouLpy/
mEtHqu1b+XVll8svoeuMV3+9iJclFV+m+JBgPC6l+HLFVWVf6vwtii/k++q6
w9R/CWtQbafLypP/FI9T3/XkQ/mjZP/KL6vrnS7/V/kX6fx9ZGV1/BFq21t+
afV3kL+KsVZ8iY6ro7i0jjlVbVdmPhbM+YB8HvH4wNz5owXfT31L1daS/Ale
JP7mzMGjIp6XU/tEHX8MmKO4fO58szJzblke8wN4QG7YW+1Pgz+ZsfbDmG9W
Kb43cQ4kH33D99TxlXhHxZ8o7pH6nZbLPzQ4H++rvqt1vyczz8W6OmaY2h5l
zMAexYMVL2NOsn5lbRRXk32W+507kzvUPy8xppGPKxXGenJaRflPZM7VYBx8
4bDID8rKn6D+NjFfVcrND8gb5I9XZCvkb9D569S/KXE+XSvbljrnfCK/gc6/
mm8n/wqd3zg4n5fmW4GV+v9Aakx7V/45wddrnJtP9MyNnafIbmOO6X6H8a6y
7+EAajuN3JV4PFryPRLPmcXcU8c0U3y8bDvfJnPuhwMcpv6XFK9iLev4zYo/
Z/7JvyPmxzfU/xZYITtKbW8qflv+Z7KjFb+u+A35W2VHKj5T578ov2Hu/Nwk
8q8yiq9SfErkK/Vz55MO5F+eRfd8kjHPnT/rq+1k+ScH86t6ufPJNeRkxbN0
zDz55+f2X2X+5l7vHyXO2ffLf0G2Vf5GtY2XfxD5WnEt2X+69nOZ35c1UAu+
I9tMvlW8gDUj66V4gWwR18/8Lb5U/xfyPw0ef77DTeCb7DXFb8T8dUphPAKX
5spfo/8fK56f+HrH8f3k91TbRL6vrK38fVK/P/g4Qf7rsrG58wb54x/ZFjBV
bc25P5yBNSPrLr9l6vcdpWNKkXtS84uhet4aCquD57nzDeu7Bnxe/nOy91Of
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
7wXymx9+//N/+iTjqA==
         "]], Polygon3DBox[CompressedData["
1:eJwt1F9Ml1Ucx/FHRFGXqKWYqQmpiUF6IfpTUMMwVBBIFLWL0qJybk7mkrZS
Kf9woU6rSdZWbk7zv+KSzZaVlrqsnLncuHFd5Cpn3VQC5j82X2eci/fvOZ/3
+Z7znOf8zvPkvFJXvTItSZIy9MBIP63dk+RgoFuSjJJTuKHoHaTUfJueJKVc
pppD3CZuHDebG8Ad5bZwBdxFjDLP63wxFqiZiltq3sNidQPUTOb+lTejIqyF
m8L9F+ZCJZfBFXLt8jbUcJlcOfeouVu4Jm469xtq3Hcj/xp+kuvxt5q3ka+u
uzzL2H76D3ON3HjuD3mGXIwCc7whF6nrkLdjkbr+6paHWnkVhnG31f3M1bl+
wx3hLsu5xv7KNXIl3Bi5Te5p7nLXFOZxY5Ghpg7nuRHyauP/kt9CnrFp8hz+
Ef3NYR+4FLcC1+XVyOE69X/G5bme5b7gXpIPYRx3gfuOq5UHme8Udxkd1vSE
XIYs+XN1H6grUjeNux0yXuSyuOe4vuGscBu4fG4G14vby63hRnM7MIQ7Es9G
idyEx+J52crNlIvDHnB7wv8UziP3EYZxtci2vgvyPXwin1Z3VN1duQF3wlyY
xw0J47BAe6nal7HQ/PMxTXs95puvr5qdGCofi3taKn+Kx7kT8VyVye9jcDz3
jfGsbcPDYb+5hvh/1KFAu4Fr1tfLPStd+7jfWC4X1+Tn+addL8mX1Lca9y5q
tZu4JfrOyVvRP+7Lmvhu7cKIeO4/5MrlavNN5irQ273aXZ/lesf1rQvnT10J
14fbF9ecy90Ke80twiSuQ96PH7UvqrvKj+7R9aFoDs8WxqNbeDY8pf1DPFcv
hD3hvuTqw/NZy0B5Ev6M72BefGcyuBb9c7V3o9PYX3Bc/5lwprkr8kR11+T6
eMb/4U+F98F1OTeI+0qeru6evBOvcsO5Veldz5QZxuJ3+Rl1ndofY5m+bG4t
/o/focp4xtuRsr433acUNcbNxEPaB9StV5enZi73ZHzfTnIV3Ebcj9+NxfEe
KzFBex1Xrf5ruQ1FcmFa197elCvMNyb8//H9reKquPzwPeO+j+/0dgzk9se1
FMoPAJ+Cql8=
         "]]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtUrtKQ1EQPNlz7WMsBLXxRQpBjSJ2/oGCefiIxki6EF9YilgnaUwEBdEm
YOs3+AX+RGzEgI9GW2eYLZbZnXvPnN3ZM1k7zZ9YCGENERFTKOZSIYwDj0A8
g3sDbqPOgN8BtlEfI78HLqG+Qr4M7CchbAIXhkL4RH4B/gs47JrUznlOro/z
K9AvAfOmvACcRfwiXwX+JeLPgD3818DZZpR2D5FDbHlv7LEJLCPSKenybCuK
azlfw391YBY4ZpoxA7yJ0jvnXJhh0dR/J6X7+O0H9SXwG3iLfzpReTclnn1z
dmoWgdfgqn72KeqfLnDaxM+YvGwj3oN8pz/rJm3qcA8viWYcJOqTnj9G7YP8
rimYl4ET7iG9zPiMab+z4/3sme7cB34k6oP6nJE9vCbaNT0rRvmS8/4/EPOm
t8G901/uaN81K6bZeN+Iv5Gu+8O9l8ANonZS971U/OyB6b6077rgb6No8qnh
XlVN+aHprVB71Hf74JpZrzd8Rr6FO+ztH5vIVXo=
         "],
         VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtkb1KQ0EQhffu3vRBQUFsRLARFKPxMVQkVQJG04n4g6VI6iSNiaAg2ghp
fQafIC8RQSQBfxpt/Q7nFnPvmT0zO2fOLrXO989iCGGFyIkpn9MshA/wa+4Q
blC0VQrhi/wKfo68Qj4i/4W/5uwH/JZCeCFfgJ+Ad/l34erEHviPmg74Ae6e
/if+N+QbxG3yjDp1M5lnq6bLeTW4dxOunXnmIrgG18usuQdeL3mO5o2pr+XW
04e7gzuCe4Q7JlrgbaIPbhLL0fOkTfdN6B0ka3smhuB34pC6E52B16ifj9Yz
KurlxYC4TK7RPM1Vbye5V5ql/SK3Vnmi/eSr/JUmafvOfd+w0H8Q/R66oxl9
Jk76tOtO9G7yXN7LX/lVUV8xv5xZk7SpR72a+Qme6iza73FyTzX6jXSXdlzV
e0XvLq+kvVz4PxvtperVJw/kRbt4338Z4VDt
         "],
         VertexColors->None], 
        Polygon3DBox[{{995, 558, 589, 299, 876}, {1264, 912, 876, 299, 
         1265}, {1136, 53, 594, 593, 1250}, {1263, 560, 528, 173, 1262}, {
         1259, 274, 853, 905, 1258}, {853, 274, 598, 597, 994}},
         VertexColors->None]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0csuA1EcB+BTrdadpLElxJZEbF0aW00llhobQRBKrHgCnoAnYC/hCVgL
vRn3egEPIF34TiTzm++XTOZ/zpwZWz9YqaRCCPtSV2K/dmtzSH7SIYyyzSnO
STYTQpHDLHNXJvQTzvCMi7zglZT0W67xnrPmt6SmV1mSuv7YEUKDT2zyOT7X
E9b4wte4T/2NDb6zyQ9+xnf0LyZscd7s75g4g8tS1Tft5Y5l3vBSivo5Czzl
NI+5I+P6KvNcit8gGX2Sv85mhGmzExnUH1iQAf3IXvp5yD72SkXviefObu6x
i7l4nnqW2+yM68iWbpmwQVdYSP3/rz+YljZ+
       "],
       VertexColors->None], 
      Line3DBox[{589, 539, 546, 529, 561, 1326, 535, 567, 549, 540, 563, 562, 
       1000, 565, 531, 548, 547, 566, 534, 1330, 560, 528, 530, 538, 1002, 
       558, 589},
       VertexColors->None], 
      Line3DBox[{576, 575, 574, 573, 572, 1329, 571, 570, 569, 568, 559, 588, 
       997, 587, 586, 585, 584, 1325, 583, 582, 581, 580, 579, 578, 1001, 577,
        576},
       VertexColors->None], 
      Line3DBox[{611, 532, 564, 542, 1331, 543, 525, 554, 527, 999, 555, 556, 
       537, 557, 526, 545, 1328, 544, 541, 533, 536, 553, 552, 1004, 524, 550,
        611},
       VertexColors->None], 
      Line3DBox[{600, 599, 598, 597, 1003, 596, 595, 594, 593, 1327, 592, 591,
        590, 551, 610, 609, 998, 608, 607, 606, 605, 604, 603, 1332, 602, 601,
        600},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1117, 1187, 1116, 1386, 1188, 1118, 1359, 1417, 1119, 1189, 
       1120, 1438, 1317, 1190, 1318, 1204, 1309, 1437, 1315, 1316, 1282, 1313,
        1205, 1285, 1296, 1299, 1297, 1235, 1426, 1298, 1300, 1206, 1242, 
       1252, 1253, 1236, 1268, 1365, 1387, 1244, 1191, 1243, 1237, 1360, 1427,
        1121, 1192, 1122, 1388, 1193, 1123, 815, 1124, 1194, 1125},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1102, 1183, 1101, 1356, 1413, 1103, 1357, 1414, 1104, 1184, 
       1105, 1424, 1230, 1231, 1106, 1232, 1249, 1415, 1275, 1274, 1107, 1260,
        1261, 1228, 1325},
       VertexColors->None], 
      Line3DBox[{1115, 1186, 1114, 1416, 1358, 1113, 809, 1112, 1185, 1111, 
       1425, 1234, 1233, 1110, 1303, 1304, 1241, 1436, 1281, 1280, 1109, 1266,
        1267, 1329},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1090, 1170, 1089, 1380, 1171, 1091, 1381, 1172, 1092, 1173, 
       1093, 1382, 1174, 1094, 1222, 1224, 1423, 1175, 1223, 1293, 1295, 1294,
        1225, 1279, 1306, 1176, 1247, 1428, 1226, 1248, 1177, 1227, 1364, 
       1383, 1284, 1178, 1095, 1323, 1324, 797, 1096, 1179, 1097, 1384, 1180, 
       1098, 1385, 1181, 1099, 1182, 1100},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1075, 1162, 1074, 1376, 1163, 1076, 1352, 1409, 1077, 1164, 
       1078, 1377, 1165, 1079, 1353, 1410, 1080, 1220, 1221, 1081, 1378, 1166,
        1082, 789, 1083, 1354, 1411, 1084, 1167, 1085, 1379, 1168, 1086, 1355,
        1412, 1087, 1169, 1088},
       VertexColors->None]}, 
     {RGBColor[1, 0, 0], 
      Line3DBox[{1060, 1157, 1059, 1344, 1401, 1061, 1345, 1402, 1062, 1158, 
       1063, 1346, 1403, 1064, 1347, 1404, 1065, 1159, 1066, 779, 1067, 1348, 
       1405, 1068, 1349, 1406, 1069, 1160, 1070, 1350, 1407, 1071, 1351, 1408,
        1072, 1161, 1073},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1045, 1147, 1044, 1372, 1148, 1046, 1341, 1398, 1047, 1149, 
       1048, 1373, 1150, 1049, 762, 1050, 1151, 1051, 1422, 1219, 1152, 1052, 
       1366, 1374, 1153, 1053, 1342, 1399, 1054, 1154, 1055, 1375, 1155, 1056,
        1343, 1400, 1057, 1156, 1058},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1030, 1143, 1029, 1336, 1392, 1031, 1337, 1393, 1032, 1144, 
       1033, 754, 1034, 1307, 1308, 1394, 1320, 1319, 1035, 1201, 1246, 1202, 
       1036, 1432, 1301, 1314, 1302, 1240, 1273, 1278, 1272, 1037, 1363, 1421,
        1218, 1203, 1038, 1338, 1395, 1039, 1145, 1040, 1339, 1396, 1041, 
       1340, 1397, 1042, 1146, 1043},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1020, 1131, 1019, 1368, 1132, 1021, 743, 1022, 1133, 1023, 
       1419, 1212, 1134, 1238, 1290, 1291, 1213, 1435, 1288, 1135, 1289, 1256,
        1257, 1214, 1331},
       VertexColors->None], 
      Line3DBox[{1028, 1142, 1027, 1141, 1371, 1026, 1140, 1370, 1025, 1139, 
       1024, 1420, 1335, 1216, 1239, 1138, 1292, 1217, 1369, 1270, 1269, 1245,
        1137, 1251, 1328},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1006, 1126, 1005, 736, 1007, 1333, 1389, 1008, 1127, 1009, 
       1418, 1210, 1211, 1010, 1195, 1207, 1390, 1361, 1011, 1254, 1196, 1208,
        1197, 1286, 1276, 1305, 1433, 1277, 1287, 1198, 1209, 1199, 1255, 
       1012, 1362, 1431, 1283, 1200, 1312, 1013, 1322, 1310, 1321, 1311, 1434,
        1014, 1128, 1015, 1367, 1129, 1016, 1334, 1391, 1017, 1130, 1018},
       VertexColors->None]}, {}, {}, {}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{626, 735, 627, 1391, 741, 634, 746, 1371, 641, 751, 648, 
       1397, 758, 655, 1400, 765, 664, 774, 673, 1408, 783, 682, 1412, 792, 
       691, 799, 1385, 698, 805, 705, 1416, 810, 712, 815, 719, 822, 728},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{624, 734, 625, 740, 1367, 633, 745, 1370, 640, 750, 647, 
       1396, 757, 654, 764, 1375, 663, 773, 672, 1407, 782, 681, 791, 1379, 
       690, 798, 1384, 697, 804, 704, 809, 711, 814, 1388, 718, 821, 727},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{622, 991, 733, 623, 964, 1434, 739, 632, 854, 1420, 744, 639,
        859, 749, 646, 1395, 756, 653, 1399, 763, 662, 772, 671, 1406, 781, 
       680, 1411, 790, 689, 992, 797, 696, 965, 803, 703, 884, 1425, 808, 710,
        888, 1427, 813, 717, 820, 726},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{621, 925, 958, 926, 937, 1431, 824, 845, 825, 903, 891, 847, 
       896, 848, 944, 1369, 919, 855, 908, 971, 827, 857, 828, 909, 860, 1421,
        829, 897, 830, 893, 864, 865, 1374, 661, 771, 670, 1405, 780, 679, 
       789, 688, 831, 870, 832, 1383, 939, 940, 834, 875, 835, 976, 911, 894, 
       933, 1436, 977, 877, 951, 878, 922, 900, 917, 837, 886, 838, 1387, 918,
        895, 889, 961, 890, 725},
       VertexColors->None]}, 
     {RGBColor[0, 0, 1], 
      Line3DBox[{620, 840, 966, 968, 967, 969, 927, 959, 1433, 928, 844, 902, 
       901, 846, 993, 1004},
       VertexColors->None], 
      Line3DBox[{724, 887, 934, 957, 956, 978, 952, 974, 1426, 953, 885, 916, 
       915, 883, 996, 1001},
       VertexColors->None], 
      Line3DBox[{997, 910, 874, 931, 960, 930, 899, 869, 1428, 898, 868, 687, 
       1378, 788, 678, 779, 669, 770, 660, 863, 1422, 862, 892, 858, 861, 955,
        1432, 954, 975, 945, 972, 946, 856, 907, 999},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{618, 839, 732, 619, 1390, 823, 843, 738, 631, 920, 851, 943, 
       941, 970, 1435, 942, 638, 938, 826, 935, 979, 980, 645, 988, 1394, 962,
        987, 755, 652, 762, 659, 769, 668, 1404, 778, 677, 1410, 787, 686, 
       866, 867, 796, 1423, 695, 833, 873, 802, 702, 923, 1415, 881, 949, 947,
        973, 948, 709, 950, 836, 936, 981, 1437, 982, 716, 990, 963, 989, 819,
        723},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{616, 731, 617, 841, 1418, 842, 630, 849, 1419, 850, 637, 983,
        984, 644, 754, 651, 761, 1373, 658, 768, 667, 1403, 777, 676, 786, 
       1377, 685, 795, 1382, 694, 871, 872, 701, 879, 1424, 880, 708, 985, 
       1438, 986, 715, 818, 722},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{614, 730, 615, 1389, 737, 629, 743, 636, 748, 643, 1393, 753,
        650, 1398, 760, 657, 767, 666, 1402, 776, 675, 1409, 785, 684, 794, 
       1381, 693, 801, 700, 1414, 807, 707, 1417, 812, 714, 817, 721},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{612, 729, 613, 736, 628, 742, 1368, 635, 747, 642, 1392, 752,
        649, 759, 1372, 656, 766, 665, 1401, 775, 674, 784, 1376, 683, 793, 
       1380, 692, 800, 699, 1413, 806, 706, 811, 1386, 713, 816, 720},
       VertexColors->None]}, {}, {}, {}}},
   VertexColors->CompressedData["
1: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
3g6IatOsRHhbVHz/BEd2sAI=
    "],
   VertexNormals->CompressedData["
1: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
xnr/op/XTuln/Kufna/F0vr5iXeN9yIbc7TOj/0X/bxpSj/jX/1cPXaW1s9S
eqNGtm6aqLaLn47nhffeUaQf9Bmj+8E9by2n+kFZI3FJ0g/e6eMMmjBdAtvN
pvrBBK9IHdIPes42cKT6QfBl3/Iv/eCdqX4Q/vaDvd3F0qQf/KXqlkr1g/C9
uZjuB3NL19P9YP5d1SKqHwTLys10P7h0+UYR0g/uuCLxguoH4VOvTgnp7zzV
97qSfvBZ9fy3VD8I1xPXhpJ+cIayQRDpB1f4ySVS/SC4x9woI/vfMobvk37w
nRi7ONUPgty5VHti/1CHuyfpB3U5ardYyodDrYoM3Q/q+1+n+0FVr5Z2qh8E
Gx6rf+kHv0z1g/C3H1zreJjuByM5bz2r074Hr+KH/6UfFJ7qB+FvP1iuM/qR
zDe+DSnxX66ZCfXuU/ONmFctfWS+ca6oKOrLxAao4cig+3dPvqn5BpsIlN27
eBi4I6fmG8vFnPvJfGOp5L53Oof0YFuL5b/MN3ZNzTfg73yj8bKhE5lvrLCT
IfMNSB9fT88fHEvZWcl8Q36k6dKql0VQfjGFg8wrakWsAsh8Q5f/8Yxpd1sg
PG5cnsw3hr718pcZ+WOFryP7j7XNsEKqfg7Z/0dGfb1YXTDIbG9bO629GD44
pR0n9m3SG6LJfEPAb+aHmM5kEJSuFST+LN0yOk7mG99nepD5BqznvUf7v7mL
ez+Zb8zlNyh+sNILWJTd6fdtmaZKzzemc3dJ2y2zhfnKJXR8DM206PnGTfeI
PH01Y3gnb0LHM4w5r9scVtqjHM4GKcx53S7mvG6jX86yZ1Yb4efFqXkd19ep
eZ1Rd1f+T4nDsNV+al736O3UvI7zw0GBWba6kFQ9Na+L7Zya13Hy5t5wHLSG
zDM69Hwsx/46Pa+L/bzLOkTUH+5znKPndS3FvvS8LmebVLTatyQYvXmPnr+N
d1YokXlduckG1piCPCheURRI5nWXi4ckybxO6Er5WgGPQni+6HQt2b9TvJCe
13H4JM9azpsFl5z7afscYgb0vE5hW7XJ+0fxIKBnQvszR7SUntcVGjnVKUS9
BwgdoP3nKJ1Nz+vM3xfJrevzBC6Hdf/TvA7+zuvw9yQ9r5Off0c0S/E+iJ+b
ime06/RXroJVGPM6wu/Dn2I0GZ/Oge79YHp9+dZ5E/W4dGXbvAX2aWhgfEDq
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox["\"Re[z]\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Im[z]\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Abs[Sigmoid[z]]\"", Large, StripOnInput -> False], 
     TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->600,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-5, 5}, {-5, 5}, {0., 2.5264602772744986`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560460354023858*^9, 3.5604637034909277`*^9, 
  3.5604704954718637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Sigmoid", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Large"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Re[z]\>\"", ",", "\"\<Im[z]\>\"", ",", "\"\<Re[Sigmoid[z]]\>\""}],
        "}"}]}], ")"}]}], ",", " ", 
   RowBox[{"Evaluate", "[", "$opts", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{"Sigmoid", "[", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Large"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Re[z]\>\"", ",", "\"\<Im[z]\>\"", ",", "\"\<Im[Sigmoid[z]]\>\""}],
        "}"}]}], ")"}]}], ",", 
   RowBox[{"Evaluate", "[", "$opts", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.560344597674485*^9, 3.560344616157298*^9}, {
  3.560344685973297*^9, 3.560344734934555*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
UDFTXHes1S5leri2a7pesLOg6h+644/ek/6hce/7R3XpF7ddfvVT/ih9Xm/N
8kNrdf2hHgvXDdHHvejwJpWcHxdSAy/U6t+yoT7uJVt/9bDpnE/t5DW90cZS
+rzG7xirdPZ0Ks1rNr5fZc/MzDxqSPO6mw4v0OdFm+haw/2c86vxZTJ/pIbo
7dbYV191s8mreq2OVXZ01dut45Imd3bPpSZYW9Zpvk/vr2aPhVqgtnT98+N9
1K5rlm4WarX2q//KM0Xvb78sHSzVf1q3tR94U29Xsyenmlx9S9Npst7u8skv
lcd+35Uzu7/UXOY3itodkPLR1d3mi1LmezH5+9a55Of4tf27a5tpfWGPSXmQ
5SdflQUp85vNDtP9oWZWf3/uSy0aPrN7oO8XIo+2++X7yhSHCU9eOep2/lOv
m/SrnoCSy/pVKvafvPHto0ybzsnKVF+LJO8Py2g+5oq55nrO+YNic75o/bV5
DpKdtbP0TFF2mzr0q1LKV8hDTMqaS+H/Cwu9RfPRm+d134X5qOmcrFRNLltp
wTp9Ph7NsvODsrfNaaeZneKpX5lVmi+2/9lurro3Oz3dovu5V+8Vi39kJipn
7uU+sPSC7udj17XNPO/8WAnJtaHPZXd9/ziuw90ff3a+rGQMZe9ujTtK/Tqe
pcMLZWCJPpP/tySQ+qXxCKVuwrzuTz6ECf36PW/U7H+sfBgV9zl1r56HpK97
JVX52e4GpyOzd7XS85B+LYYtrvqz3UfDyn92CdDzkNSs8hHKiRqDYwrP1fsV
r3HZ/n1Av1w/NlO/emn1yDMsam3sNdCL+sXblXd+ut2lSdmL1C9up1zbtql1
8Wt6v/AnR9Z/9byR6yC/t/rrUZG1er+4bnL/C03db2zS+zVI01munDGx7Yx5
er+GaeMiP9oxMX78jP/kjdo4yqeKdr04wGMx9eu7Nu5yS2VmwclW66hf3E/k
ivlnJztePUv94n4lT2u22bVwxA0h7zXJHpvy3+taQPc37s9ymmdg9MJ6evyX
NP+XF0YWGrrqmW6/rzZf5K6pLfv1PvWf/FCbX3KhrAk2g+Z7hDYfZe8928o0
a76D4j+fv3KvU4vGbn45k+zX4sx3OWHn96gclvuF/FxiLnW/XO0+S4///bV4
IueOWmL5IFSfF0u1+CPf+ba17ZB8+nxvrcUrljB3y43d5zeRnTy+sYdn/rTK
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
z2/Ab/2Swdok6GalFhrUIPxgiXWCblaqb1u1ejFHF0E3K7Xi+wNFF+TYK+hm
pZ5zOV3KbYCvoJuVOspy/YKtexXF2F8rdaAa0unGF7G/VuqDdcGrg96L/bVS
j63qYrKcKvbXSv13+MEOtW3F/lqp7X6ZX0bsr6T6D7fcvXnsbKG/khq72bdF
hs0Yob8/8+7j630KO68U+iup5+7G9m4St03or6QGtqm0+nkOL8FPJPX0k97V
XW8fp3sV4LkjK98tcc2D+wf8R/rte/vgQ5JW9r6bI1HwK0mN29joy8jXJsGv
JDUtR9sChT1Ngs6SKi/rFL51gKizpA4qPaBidB1RZ0l1+iVbSVFnSb3hUH5h
0fyiziYlPO5MMeuvC4TvD//MZ+NOWzf+a5LwnWGTcuLEoLSlkRuE7wyblOmN
Hd7sf7df+M6wSRkY0Nftbt1TwneGTcpMi0OlbxS+JHxn2KTELH49aPLmcEFn
k/IlW51/xlelwL2QZm8EnU3KcHmHf8GgD4LOJuXM6vsFO2bECzqblFE9gq3+
Z5Uo6Pwzf99VPcV3tfidYZPSeHvUs7zXxO8Mm5SyPRJvB71MFP1Zes2/2yz4
sxTHv/Ms+LM0KNvvOUtS4Wy/5yxJ37L9nrMkrcr2e86S9CXb7zn/rCd7f5ay
/56zJGX/PWdJyv57zj/tz/Z7zpKU/fecJSn77zn/1I1/z1nwZ/lu9v4su2Xv
z7J39v4sT8ven2WH7P1ZNuPPshl/ls34s7w+e3+WnbL3Z/l/2fuzbMafZTP+
LJvxZ9mMP7Og7OMze5F9fGZO2cdn5p99fGZB2cdndpTHZ8EPmZm4yszEVWYm
rjIzcZUNzz6usuzjqhUrkP16zXyyX69Z2ezXa3Y2+/X6pz3aem3U52c9D6af
/1z+nrB+WTFpLVt18vRHIf+xYp2/ZOeHVqxQB88rDwf+EPzQiq07Wy5h4fUU
QWcrNiD7PIGZyROYmTyBmckTWPZ5gjUzk08yM/kkM5NPMjP5JEM+KeSBbHP2
eSArlX0eyEKzzwOZmTyQIQ/E/RvO1YHL+gc4zp+v4P4HeEpb+7HJA04oeA4K
vnPXoysT/EwynlOCd1n/esjQYbivUJT4yqM2LYL/MMm438P1VwdHvi2Qc/Jq
BfdpwANm2/51gO1ScO+E+OApPtEzgxTcCwGf9qXNyiktwpTc/B4GeLRNr0GH
2r9WevDn/eAu65Z2mXw3B/vGn5eDJ1471jT9e6qM57vgSxweVrMrnyTj+St4
q75Wq1quwnM4a+KLC8WeqtcWz2/0vLRrz5N9fCqaZNxn0rikzrOdO/XfzqMU
PC8Bn9Qjn7RCdldwbg7+bcjqG4dP4JxLz9MKVXJt0v+nzrgXpWGTot7y/Hq9
4nwZ54/gyyftyHnm33V4bke8W+eHzRLPHuf8K+VRERuqTBh3PUg+we95gCfO
mDQwI/kR7nNQvhTiOr1+3lMvcX+FeJ8pO/3Xvnknb+Pnm+AnupbKNzA0QcY5
Jvi5C/08nGckyni+C/66mtIqd2yi3ETIfxJ5/uMt5DmleZ7jLeQtmTxvUYV8
4xnPNxQz+QPOobg9ckjpaHblyxR6vgte/uzebw4ei+l5LXitDvP/di1ziJ4z
gS9oOGfwlxVn6X4M+DSp7IF4jyh6zgo+cd3SAgeaJNBzC/BPNXcM/VQ+kc7x
wcddtJqq/sxzcE+Od4slFPzlQHMU3GMDzz28WXrawlUK7pmBT8jbeWzz5jvg
n8QdXfM39I88rODeFXgZ2yN5+hU9reDeEvjm1dXOvnScoGTwez/gkX0f7i8f
FCXj3gz4TrcxvZyiPsq4jwK+iP14Y7HVJOMeBniLmlLxH/Z4Pp2f+PS5OfKv
/dMk4x4D+JeT0uUOxfF8S1+Xy7Wye2STD+dQ+vpbI2tiuyq49wZeZNysoUvv
nVZw/wP8eKqfd/frSYiHxI+Fl879pAGe41J8Zs5ZAXSOgvuC4GcmNe2T89sq
BffqwHM3bjx/4J0jXGfMX2vW82Ku45+j/Pk9LcxHa/agV8YbN59kGfdRwK3b
tdiiJJtk3BcB33u1bsr4mSYZ9yTAs5aRsiYeH5LpnOTIygh5k2OwMprfMwOP
VUtvs31nK/+xXru/BZ6W8iWyQOcLciK/vwXe49Lw0U8dPsqt+b0ocH/Huo+q
fE+UvYz9Uuf2eDGugXuy7Ge0h/nNKNppmdtVZYXRHuY5QrPnrrFd1pq3i+8V
oH6/XOXflXt6ld5TAy88xX7hw/AEGfcawR+futVpTnd/5ZRxXNRefFyO8HtR
4K+7qi6b9iXJ8/j9JPBCgQtmPtyaJHfn95m4/6jDLm56vqdQivyE32sE7798
TlDduCuK0X4rtdO8Dwd9C8TSdxXAvYNmhTvkTqfvOWhcUvd6Hj/f/8gt2dhf
Sb31MNJtQsl3cmXjfFQX8vmIe5DgPoVDMh0XH1RCjfFNebW5cQ2PhQ9lX35/
jnPZ6tqNe0tzv5QXGdcXeWmz1xMbtH0lNzXWz4J5/cL+lFXi5y1GHSSWMzn0
s99p/f9PBBznMIIObEf2OrA7XIf+xnFhjnxcbvL7beAbTRvP/XpeHGkcLzaS
j9cwY57DxvA8Z73Rr1gE9yvhfJLhfNKogzXzGhL5rPal384tWWy2/bVmFwrO
q736xUEhn7dmM9ZlzK9mlyzvN/otg98K+wi1HN9HGO89WKl/ThxaZqZfiOCH
krppzsVzG7aZxHMDNoifgwn+zMz4M4M/G+8xWLGxvl2XhZb8JJ7Tsrz8nNZY
jzXb6Vl135U9yaI+ajrXR9jXqNjXCPGBFeHxofyAX8/4Y6l8h6fjltRwt2De
WXHpFvlbiRPne6/vECl/XmeIk2xmqhYnJ2b6f6vb+V/iFSqMrJ/vSbT84YeB
q/act9M4xZOLU3u8zXB7IXdZb1h/1ZN8/R1stEdtzu35yu/Lgpdy2Nog6cBL
OZ9Wnnjk0aoPm8fEyT7G8sySlx9sLM9e8/KXjHayCG7nCH4PGLpFlbTc9mT/
J6WhpifxyUHhFr1tUun7PLBHKlDc5s5D/XuSaDcH532M9bO3vP62xvrZCF5/
G+P+gi3l+4u6xvFlMh/fO7fmq53cX5H+L9c8Cwu6kiSv6uotb7F5R+PV0afs
8VG7ryjPtfLEJ+1PL3inZZAyquHbiuecP5H/WLhscP+xRv8uHHjTW4e6d2mR
Rt81gg7P3jw8N7rXA3mnMb9SN/H86mjWPWP9vts65fqc54c/iPWwGF7PYmN5
tpiXTzHus9gnvs+aZLSfZc7T7C9p3MexW3wf96c6jkX7xRP/vnPkXsdurxQL
fv8YfFrRo8d7V/kqF9PKE199u2GPetUzhHMzK7UmP69oGuGQ43/k5/r3CoQ4
oO7gcUBYR9T8fB0R4hjbzOOYkD+w8zx/aGbsl5rA+yWct6jf1mjnLbmravf7
wb3L/vMg9vNDZbKmJ/G0N027ZPwZTd9fAr9cZ5NtzXdRSmV+7xwc76G/Cs/S
4Tee/MSgszqH61zVqLO6mOuM9wSgD5txa0FqK385TPMT4kdyPK/kMu6SrBrL
s7TpWvmjxvIskpfHd3XAU8+1Orzo48/9KX9vAeOOcUwLN4wv8b+NOtD7+F5G
HXTO36PAOHrP37hoRPQVZYdx/rJefP6GG+cvs+Pzd6gxj2VXeB57wRgfWCyP
D8u0+omPn7VsW7cZyfKPKgZ/YOe5P8w2+gN7xf1ByAfUIzwfmGGsXx3L6xfW
fXU6X/fxXSmMY9q4gbWnjvgocvaZcyEuMVselwIndvKM9kul+vs6tkh1qJss
X9A46eb2IuLYuQmXFOFcUcW5ouAP6jfuD4L/syvc/6cY/eS37wKBi9/lEP1H
4Obq0b9H8cjF6Vq/qN/Kn1sR7PvviKjfylfg3zkR7dnBv/ci1hNh5GRnc7c5
IRfLPvmtnj7G+qndwd6OlQ4Uf/JbPebsN2ePOfvN2WPOfnP2mNPNXL/wfh38
LaH6tPwLy+zD/pqBR0/wyp1e3yRHGPN2dQPP23H/G/42IevgYKaC+9PgaXZB
iy2Dl+E8hObLiJEurFqRJBn3RMGr2+yL+/U+Gu6Dgl+abIr/Ws8k416Ohk3K
tktlum9tuxfnSDJ4eOnTkaxnvIx7JOC1NhT0+vX+l2J8/iKZ+PPErcJzw5H8
uaFqfJ4iWYZrzwe9DXm+JG3kzweN95UlKcdE7XmftyFPlqTy/Hkf7n+A47ne
VjPP9XDfnVsvs87jSnRzd6P35cD92u0vfd8pBOeZ0EfueCIwuejYj/S+AXjP
g0n1m7ol4lyX12/F0jxy2h3vulnBe5Xg48fmez71jSfOsRn440cFVliMpnNy
Xt6abSh66IvDwx3KEuO+nmFff8a4vqi+fH3Be1/gs++G9/z1HsRmI2fgeO8L
/hPsHj2tXkGTHGQ8f1NjN2jnb1uN5dllXh79Qbsr5k1+6T5bf3+H/+9qn5Ry
j8+P3kK6g6fO9LdtV/KLUI+VuqVu83ZPwsX3g6zUasEJ8191E+s3KU6z7ozy
6rpKz+M5/3NrRCELJ3rfUwIX7rPRvOjdemaDLhbvBHtMyv8srXd2rCO+/2uS
7aLrH3Kg9+yoXbmGRbjlq0f/ivXI1d9+aNK3mFiPxPZHxno+HbiE4iP4jsLj
Jtr953038GKnT29zX/uPoKfEahwb7l1qnDguEtvZ5mJ5966inhKrsLFf1IQy
op7WrP9x12Ue51cI9VuzPcdKjdbfr6FxZ30z3h/ou0IfV9Q3oMuw1jO9PVEP
+e2lbsE1RtK9NXr/Sx2UmVueVlu0R1L/Kf/LUBdRHzXXkU1TVr1yF+r/6bed
a+2slXs35X/gazb4bu0X9Js+quzp+/y/7/mCe19qe+F0FbFfJqX916Ujdm3b
R7qDBz7r4HrFK16ox6RsZzMO//e9Wv7vpGPZfrdEkipn+90SSUrM9rslkvTF
8N0S/d569t8nkaTsv08iSdl/n0SSjN8nIR1kz86Z3+vM2S3YY5ID8tVv8zDt
lqiPPN+32sVnM37TR659c9Lk8IOiPlbMrvPprxWa//aeO3P4t1qn1S29hXG3
YvHvpjsvr/NC8CsrFj5j0svt3X/zT1bLaf/j81703jq4mrq+yrqbS84K/mOt
3q3x79FyA5OEflmpHdf7rv/v+x3g9UZMGv2f9zsk9Ff7jRXHkalGv8Uf4TsM
1C7rkH27rK6xXervZ2O/JPC0bOu3Zsb+kl+pfxriDNWjGt8roT/i+3H8j5X6
NcN4rxXcOI4UN1iwIW7o8zjNsI7o8WOXIV5Ru6zMV63d/wPk3902
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtmnngV9MWxe/33HNLvUylKEKKlEpkVlRm0USiUCrJ0OBJFA1KAyIVonmk
VDKWDAmReGYaJMo89fSiDIW3Pq3zx/799r7n3Oncc/Zea51vjS692/YKWZaN
05+o/yfrz0D9r5tn2c1Flv2puGspyx7TsT/kHy8bIP9wtd+k9vk6r7Pi3rL9
dGyb2merf1XZz/Lf1rH35H8q+1J95yruI3+B+q9WvFH2uvyPZWeq7Xed007t
jXT8bF2/k+JX1NZUbVMVD9L/Gmo/RDZY/l2yo+RPV5/3dM4rih9Q/KLiWfI7
y8rK/0t2hfwn1eda+ZfKqih+SvF18i+T7UssG6bzj1P8b/lbdf/7FS+X/6ju
30X//1HbLTo2X/7zsgbyp+rYc/K/0PVWyV8rO1txN52/Un5z+dN0/nb9P0Tx
7+o3THFHxb8qPp5nlv+YjndTfINsf8Wbgs9fLTtLcTtd71n5TeRP1vnvqH0y
30vnD9exUbJV8n+XfcG11f8K+ceozy/yL5Qtkd9YbZN0/n90/kOK5/IMOtZe
tkX+oTpnqfwP1D5b8VPMDcXn65zyartW/kz576t9ltqelJ2kYz/KdtOxo9Vn
tPwfdL/+8vdl/ih+W20T5c+TnUDfws/7g/wp8j9V/zaKz1T7Cvknqf90xRNl
deR3kc2QP1PWNdjwr5N14110nTPk/0fnT5Dfi3Fn7snWyX9O1wz0lT9d9/uM
MVH8Vrp/K/0/TOcWOtZd/gJd8wrFfWRVFS/knswNWTXmiuK/5e9kfOW/pGOn
6NwXFC+T/7SO9ZLfKa2P+rrfIPk15I/V/Rar/XrFXdL1HlH7M/IXM1/lPxw9
9k/LOsvvVnis1wWvh0t17CXFp3Cu4maKxymur/ghxWvV7wnFM9P3maP2xzMf
uyz6OlxvVvq+zHPm+1Wy2cxn9eko/3v5t+l6k/S/leLdZb3lz0vzcansSvlX
Fp5f64PnO+/AuzRT3yGKT2c9KT5S8US+t/o9r3hsmv8nqf0uxXXkT1D7uYpH
Kz5a8a1cTzZc8avB50/NnZvGMObyO8h+Udw+xU10/j2Kj5D/YOF2+jaU3cm7
qn2E2kfKzpC/p/qsV9vHahso/6H0PDwDz9JKdp/849Q+WO1nK75T8VGKb0nr
mXdpIhtPzsi9tuvL5slvqf7j1f9Y+YPU/wHFoxTfQf6T/6He6xH5D6b1+Exw
bu2c5h/r805dq55spPx71X6+/N1kf8g/StcYqr611DZe1z9a8TDWs+L7FNdS
3F7xPor7KW6geLDiQxSPU9xc8e2KGyjur/hdXXNK5nuSD1jDrGVy30K1L1X7
jYq7y6rr2LPBuYscdoDiJcFrpWvKZ28oHkv90PWGkatlzeQv07ENantO1k/+
VbID0/j1LXmOMFdeZZ0qrq14Ysr/MzLP6RNzjyFj2VD+AD3fg/q/PnNOIDfc
nTs3dZetlD+LNZZ5zNvKv1fHjlHbJbJp+NHz7TDmiq43IneunU/NCn5mnr1R
yWvwCPW/VfHBfBv1nx2d6x6VXST/CfXvIf+m9H7HpvlXm7FQ/66Fc/FHwfm9
rtpvUXwQ81bxIh2/UnHfNL6PB49VvzT+XQq/C/OI/P6TjlWQX07H3pC/Rv7F
JddMxut+WdOSa+al8j+RfSO/gmyN/D10jU/kT9Z5o+T3yb32m+t6k3Rsguwk
+efIImtM8cmsFXIoY61zDk418aPoukH9YM4yd1dH58uXU32tLPua+q/+leQf
JauuflUV/6k+3wVjhddTPdydNSm/rPyR6ltBcUvFZRSPUNy98Pxins3n2jr/
PbV/LmuhYy+rfyW1b5DfW+2b9H+z4tMyv/O/dOxY5qv80+UPUXtNtd+tYyt1
bIzs0Mw1ZgVrQ9e7RHEF5qb6V1F8seJ/sW4V76P4IsXlFd+h+D7WrOKmsqBj
/+Ua5M7MOagB5yg+Q3FJ/lZyiOLTeA/5RzJm8uvo/rEw5gH7zE/ze7zaGio+
lfMVt2UM5e8JppN/iZ5noeL/Uat0fkNZVZ2ziO8n/xu1V1TfBjp2puKh6vez
2kbp2LM8r9pHyl9MHlb7hfo/XPF+shvTeuNZdsi+Zr4FY5FB6f5PyE5XXEXx
k/In535XrvF07jXIWjxWNjZ3TaI2/aE+l8tvJ7uAtaRjt8i/WXYh60/xreQG
WWf538rW58YX+8u/Sf4CPW9f/f9B/Yem+7ehzsgvSw2U/1b0924kf076/tST
Wjp2W84gqWaW/A4/RWNSsCljdJH8b/W+H8l/LTO+vUp9lss/Xf7QwjmMXMY9
F8p/nfvIv6dkPMn3Yqwqy26QvzIa/4KDZ4PfFB+WvsXDiq/P/b2GyBbx/VP+
J6eT2/+RLSt5zv8NFsg99szxRel7MBZg+NeYs3r+Pcgtsu3B4wE2BHOuYmyi
81ElvrXu/53+/632NzPj/c2yT+W/TU7IjZd5t63UPPnfq30NuSkzXm4RjP+Z
k+fI/6/sM/nvpvX6lO6xWf/XgUEKzzHmGpj9AvlD1L+M+laWbQ2u8dR61tQl
3Fv/a7EewYyMmaxHyWuYtfxzcG4gR5yXe8wZe3LCxtz3rqg++5HPmDvBWB+O
c47iK2Wx5GvOkT9K7buTq2Xb5D8bjRffVNvtev4DZb+WXGMPKPw9+HbMSeZm
B/J4yRgYLEw9a17ymP4ENs6NzzgG3s11jRXUR+Y8tTzl/i9l56t9CuuF3Ju5
/g5Xe3n5i0uuDyPIeYqryX4F2+pYPfk75A8vjG/Hq+92HbuP9ST7sGTMzPoi
D5APNmdej4MSr6xEjqH25P62cCa+//vR9Za6Oxc+QY0Cz6Tn7Serpvh4xQ+A
xYPXMxwALtCceiB/NWswmK8+Jn+A/Ma63qP6f7nO7ZmZ362WbVD7Wyl/TIoe
e3AO6/uw6PpcmbmieF4wN4Qjwhff4Zl1/rrM3/uawvlqcsont6o/aaGibEsw
Z4G7RP1vHZyfyD/t1D4nGMOB5eDEj8gfIKsuv63ay+XmF1XkLy15znyl+B3F
G9J6gt9Qqzul+vON2t9X28Y0f4/RM9XUsX3Vvn/K3+SLMSk/UddY+3DEZvKP
B1+AVXmmYP7I/GMenkwtlNUO5kx15e8dnfueSfn/RPCg2v6StZJ/QPT476H2
0Wr/krhkTviE/M6F8erLwXxlejQXgVeCj+9IekN/WR351QvPbdYMa+dVHdta
8pxDb5gWzXVmMH/kT4jmt/Bc8OCMaD4LrwW/N5LVkP89NUv+TLXPydynNdhL
dj5jSc4A28laZ8YcYI9XZFu4dxrfMoW5BzWUWjpA7Y0zY6Ld4J6FtRFqOrW9
g45VC56z6CtToms/NZ3aXkdWyO+m9vbReOUn+S+m/F2t8L2ZM3tRCxSXgmvk
1+gvsm3ye6d88I5sO7k94QX4zaTMnPwc+ROjczu6Anzrzmg9CEwLtkWTaaO2
uSVrNWAGsMN5Onau/LujuRSYFmx7T8LjcJwT5I9JfGlFsH70seJawTWjFngo
8as3g/nH+MSX4LRw27tkQzJzFrgL/L1M8BjVTeMFNmeOMlfBLN2D9QGwzFrG
KHiMahcev9MyrxHWyj6FsREYFCwKBwSH8U2uS/gfLM+Yobc8GD126BrwP/jk
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
wEXQUNGuwExgJ/gZuY6aTe3+P+ZuMDg=
         "]], Polygon3DBox[CompressedData["
1:eJwt1Htol1Ucx/HHS82Wpm5NjG5Opy4372YICtb6Iy/TOeel2uZ0XqZ5wRDy
GikbkqWibhaKouINrxjUIM1al61p4VS0zCwN0T8CNUEJy/R16Pzx5jmf9/me
8zvn95zzZE6ZVzi3eZIkw/EI9rZMkpdbJMkvZK1cLl/E6GZJspmfgy/lxxQf
0r9V/gGpcile0P7O2FX6BoVxXAq3nRvFteZ+la+br4ybhFPySHX/aK9Hjrr7
3CjuUc9tXD6XamwJ1537hqviBnCnsZY7x+3nzsj56v6TN+Il7jjXDs/63cVq
F+EtNZOQo92gbrW6wWqKuW7c11wl1587hqe0V3IV+r6QR6j7O4xDpr47/Jtc
V886bgXXV90bXBb3Fbec68PdlEvkYqRZ03x5B8q187mR+EuebGxvz5NytbF5
xh7Eq9xvXB1XIU9RNzi+t8+4Qq6cG8JdjO+yiJvKDeV+j2NLuYlcZtgTt4zL
5Qq4VG43N45LD/vnLnFvYyDXUc4O81lzTdgPZspj8Lj2HmMnqMswdjqXx13l
fuQucOO557mj3GIum5vAdeKOcUu4Htw4LoM7ws3gunKLkLT4/7zkaraSPw97
5pZzGdxReS7uye/jmXiu5nP/yh/G99ZcbuU3Tuo7zx3gUuRpeIW7wtXHu1DE
pXOHualcZ+4udvkP6vla3JIX4oGadfE8p8iXMFbdFjWVmG2uG9yn4c5gp747
8m3UydW4a2ytfDm8J/0/mW8N3xT2gJbctHBXMMN8DdyycEfjWfterkIatyu+
y7Dmzegf/itkmeOEXIn2YR3qitRlymXm7Mk1hr1wQ7kFGKBdw/2sr72aFVzb
cIa5Mfqek1fiyXgOJsb39gmuaU/nD+BP+T20ifc8fCOelmeZ8x1uKTpZXxr3
MfrG78sH6obJH6EP92385rwmb0I/rj7e6RFyhfkKwn+EFPPlyuv4HvHcvxvv
/lj+CW4fVxLXshbZ8Zwuid+1QnWtub1xbx24avSK342qeFe3Y2C8vzVcgdzF
2OvcBgyxlix5G/+ifCLe89HyPjRq/xG+i/rOyq+r7ax9PK65J9ck58n9cM98
V+WHL5Gxyw==
         "]]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{
        Polygon3DBox[{{598, 262, 599}, {601, 262, 603}, {1342, 596, 1334}, {
         603, 262, 555}, {1346, 621, 1336}, {615, 303, 616}, {625, 303, 
         560}, {1311, 503, 1312}, {616, 303, 617}, {623, 303, 625}, {1292, 
         468, 1334}, {599, 262, 600}, {560, 303, 615}, {1337, 594, 1347}, {
         600, 262, 601}, {519, 503, 303}, {1311, 619, 1351}},
         VertexColors->None], 
        Polygon3DBox[{{1347, 555, 262, 1337}, {1351, 618, 503, 1311}, {1334, 
         596, 595, 1292}, {617, 303, 503, 618}, {1336, 519, 622, 1346}, {1337,
          262, 468, 1292}, {1336, 621, 620, 1312}, {622, 519, 303, 623}, {
         1312, 503, 519, 1336}, {1292, 595, 594, 1337}, {1312, 620, 619, 
         1311}, {1334, 468, 597, 1342}, {597, 468, 262, 598}},
         VertexColors->None]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{
        Polygon3DBox[{{630, 312, 631}, {1345, 628, 1313}, {571, 272, 557}, {
         568, 272, 571}, {557, 272, 564}, {1344, 613, 1335}, {564, 272, 
         556}, {631, 312, 632}, {632, 312, 633}, {1338, 626, 1353}, {1314, 
         505, 1313}, {556, 272, 575}, {491, 488, 272}, {1302, 581, 1349}, {
         633, 312, 635}, {635, 312, 561}, {1302, 488, 1303}},
         VertexColors->None], 
        Polygon3DBox[{{629, 505, 312, 630}, {1313, 628, 627, 1314}, {1303, 
         583, 581, 1302}, {1353, 561, 312, 1338}, {1335, 613, 583, 1303}, {
         1303, 488, 491, 1335}, {1313, 505, 629, 1345}, {1349, 582, 488, 
         1302}, {584, 491, 272, 568}, {1338, 312, 505, 1314}, {1314, 627, 626,
          1338}, {575, 272, 488, 582}, {1335, 491, 584, 1344}},
         VertexColors->None]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bkuxEEcwPH5W9euY5WCEJUoKEVBRxAadI5EtiNBSyIi4th4AJ6AJ+AJ
eAL3vVRuGp2Cz0Syv/18J9nMTGabc/Mjc0kIYdZUFIUQu+DrhzXmOxVCE5Pi
ENrZHX+nh1jHcc6YVr3ITubZxx3umVF9wByP2GP/emed6DQnrE/1kz7jM895
YV70JV95xWvzpm/4zlt+8I735lMX+MWHeA97N+hHneGk9XG8s7sccor73DXD
epu93GQHFzhtWvQYaznIrnh33cZfb9QY38jeWWdkdYoD1tV6S1cxz8r4fmZD
Z7jONNdYzjKzqku5whI6Jixrx4Ql+oT+5P//+gOi1jGx
       "],
       VertexColors->None], 
      Line3DBox[{1339, 602, 570, 553, 592, 554, 574, 576, 1348, 552, 577, 565,
        1339},
       VertexColors->None], 
      Line3DBox[{613, 583, 581, 1349, 582, 575, 556, 564, 557, 571, 568, 584, 
       1344, 613},
       VertexColors->None], 
      Line3DBox[{624, 567, 580, 578, 586, 1343, 585, 587, 563, 1352, 593, 559,
        572, 624},
       VertexColors->None], 
      Line3DBox[{610, 609, 608, 607, 606, 1341, 605, 604, 558, 1350, 614, 612,
        611, 610},
       VertexColors->None], 
      Line3DBox[{621, 620, 619, 1351, 618, 617, 616, 615, 560, 625, 623, 622, 
       1346, 621},
       VertexColors->None], 
      Line3DBox[{1340, 634, 573, 569, 591, 562, 579, 590, 1354, 588, 589, 566,
        1340},
       VertexColors->None], 
      Line3DBox[{1342, 597, 598, 599, 600, 601, 603, 555, 1347, 594, 595, 596,
        1342},
       VertexColors->None], 
      Line3DBox[{627, 626, 1353, 561, 635, 633, 632, 631, 630, 629, 1345, 628,
        627},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1122, 1191, 1121, 1408, 1192, 1123, 1381, 1439, 1124, 1193, 
       1125, 1449, 1235, 1194, 1236, 1330, 1205, 1296, 1457, 1315, 1316, 1237,
        1317, 1206, 1239, 1256, 1257, 1238, 1450, 1266, 1207, 1253, 1318, 
       1319, 1240, 1320, 1385, 1409, 1250, 1195, 1249, 1241, 1382, 1451, 1126,
        1196, 1127, 1410, 1197, 1128, 837, 1129, 1198, 1130},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1107, 1187, 1106, 1378, 1435, 1108, 1379, 1436, 1109, 1188, 
       1110, 1448, 1233, 1234, 1111, 1321, 1333, 1322, 1246, 1437, 1288, 1287,
        1112, 1271, 1272, 1352},
       VertexColors->None], 
      Line3DBox[{1120, 1190, 1119, 1438, 1380, 1118, 831, 1117, 1189, 1116, 
       1447, 1232, 1248, 1231, 1115, 1285, 1328, 1286, 1247, 1458, 1290, 1289,
        1114, 1273, 1274, 1340},
       VertexColors->None], Line3DBox[{1343, 1113, 1460, 1354},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1095, 1174, 1094, 1402, 1175, 1096, 1403, 1176, 1097, 1177, 
       1098, 1404, 1178, 1099, 1225, 1227, 1445, 1179, 1226, 1308, 1310, 1309,
        1229, 1255, 1283, 1180, 1228, 1446, 1264, 1270, 1265, 1230, 1284, 
       1327, 1181, 1245, 1388, 1405, 1295, 1182, 1100, 820, 1101, 1183, 1102, 
       1406, 1184, 1103, 1407, 1185, 1104, 1186, 1105},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1080, 1166, 1079, 1399, 1167, 1081, 1374, 1431, 1082, 1168, 
       1083, 1400, 1169, 1084, 1375, 1432, 1085, 1170, 1086, 1444, 1223, 1224,
        1087, 812, 1088, 1376, 1433, 1089, 1171, 1090, 1401, 1172, 1091, 1377,
        1434, 1092, 1173, 1093},
       VertexColors->None]}, 
     {RGBColor[1, 0, 0], 
      Line3DBox[{1065, 1161, 1064, 1366, 1423, 1066, 1367, 1424, 1067, 1162, 
       1068, 1368, 1425, 1069, 1369, 1426, 1070, 1163, 1071, 803, 1072, 1370, 
       1427, 1073, 1371, 1428, 1074, 1164, 1075, 1372, 1429, 1076, 1373, 1430,
        1077, 1165, 1078},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1050, 1151, 1049, 1394, 1152, 1051, 1363, 1420, 1052, 1153, 
       1053, 1395, 1154, 1054, 784, 1055, 1222, 1155, 1056, 1396, 1156, 1057, 
       1397, 1157, 1058, 1364, 1421, 1059, 1158, 1060, 1398, 1159, 1061, 1365,
        1422, 1062, 1160, 1063},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1035, 1147, 1034, 1358, 1414, 1036, 1359, 1415, 1037, 1148, 
       1038, 776, 1039, 1221, 1294, 1416, 1387, 1040, 1306, 1332, 1307, 1218, 
       1261, 1280, 1260, 1041, 1454, 1262, 1269, 1263, 1219, 1282, 1326, 1281,
        1042, 1386, 1452, 1244, 1220, 1043, 1360, 1417, 1044, 1149, 1045, 
       1361, 1418, 1046, 1362, 1419, 1047, 1150, 1048},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1025, 1136, 1024, 1390, 1137, 1026, 765, 1027, 1138, 1028, 
       1443, 1215, 1243, 1139, 1242, 1299, 1301, 1300, 1216, 1456, 1297, 1140,
        1298, 1267, 1268, 1339},
       VertexColors->None], 
      Line3DBox[{1033, 1146, 1032, 1145, 1393, 1031, 1144, 1392, 1030, 1143, 
       1029, 1442, 1357, 1214, 1252, 1142, 1279, 1278, 1217, 1391, 1305, 1304,
        1331, 1141, 1254, 1350},
       VertexColors->None], Line3DBox[{1341, 1455, 1291, 1348},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1012, 1131, 1011, 759, 1013, 1355, 1411, 1014, 1132, 1015, 
       1440, 1210, 1211, 1016, 1199, 1208, 1412, 1383, 1276, 1323, 1277, 1200,
        1251, 1201, 1258, 1017, 1453, 1259, 1202, 1209, 1203, 1275, 1325, 
       1324, 1384, 1459, 1293, 1204, 1329, 1018, 1212, 1213, 1441, 1019, 1133,
        1020, 1389, 1134, 1021, 1356, 1413, 1022, 1135, 1023},
       VertexColors->None]}, {}, {}, {}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{650, 758, 651, 1413, 763, 658, 768, 1393, 664, 773, 671, 
       1419, 780, 680, 1422, 789, 689, 798, 698, 1430, 807, 707, 1434, 815, 
       715, 822, 1407, 722, 827, 729, 1438, 832, 735, 837, 742, 844, 751},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{648, 757, 649, 762, 1389, 657, 767, 1392, 663, 772, 670, 
       1418, 779, 679, 788, 1398, 688, 797, 697, 1429, 806, 706, 814, 1401, 
       714, 821, 1406, 721, 826, 728, 831, 734, 836, 1410, 741, 843, 750},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{646, 756, 647, 872, 1441, 761, 656, 875, 1442, 766, 662, 886,
        771, 669, 1417, 778, 678, 1421, 787, 687, 796, 696, 1428, 805, 705, 
       1433, 813, 713, 820, 720, 907, 825, 727, 910, 1447, 830, 733, 918, 
       1451, 835, 740, 842, 749},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{645, 968, 1004, 969, 980, 1005, 1459, 848, 871, 849, 941, 
       922, 963, 873, 990, 874, 991, 1391, 989, 882, 947, 851, 885, 852, 948, 
       924, 1452, 887, 892, 888, 677, 786, 1397, 686, 795, 695, 1427, 804, 
       704, 812, 712, 899, 925, 900, 1405, 981, 1006, 857, 906, 858, 956, 926,
        972, 1458, 1003, 908, 997, 909, 967, 931, 962, 860, 917, 861, 1409, 
       1001, 928, 919, 921, 920, 748},
       VertexColors->None]}, 
     {RGBColor[0, 0, 1], 
      Line3DBox[{644, 845, 977, 979, 978, 866, 939, 1453, 940, 870, 847, 929, 
       987, 988, 975, 1008, 1455, 1007, 881, 943, 944, 884, 946, 945, 965, 
       949, 1454, 950, 891, 853, 676, 785, 1396, 685, 794, 694, 803, 703, 893,
        1444, 894, 895, 854, 898, 952, 1446, 951, 966, 954, 955, 905, 856, 
       930, 1009, 1460, 1010, 976, 996, 995, 998, 958, 959, 916, 961, 1450, 
       960, 932, 862, 982, 863, 747},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{642, 864, 865, 755, 643, 970, 1412, 846, 869, 933, 934, 655, 
       964, 878, 985, 983, 986, 1456, 984, 661, 942, 850, 883, 992, 993, 668, 
       1416, 889, 890, 777, 675, 784, 684, 793, 693, 1426, 802, 702, 1432, 
       811, 711, 896, 897, 819, 1445, 719, 953, 855, 903, 935, 936, 726, 971, 
       1437, 1002, 904, 994, 937, 938, 732, 957, 859, 915, 999, 1457, 1000, 
       739, 973, 974, 841, 746},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{640, 754, 641, 867, 1440, 868, 654, 876, 1443, 877, 923, 879,
        880, 667, 776, 674, 783, 1395, 683, 792, 692, 1425, 801, 701, 810, 
       1400, 710, 818, 1404, 718, 901, 902, 725, 911, 1448, 912, 927, 913, 
       1449, 914, 738, 840, 745},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{638, 753, 639, 1411, 760, 653, 765, 660, 770, 666, 1415, 775,
        673, 1420, 782, 682, 791, 691, 1424, 800, 700, 1431, 809, 709, 817, 
       1403, 717, 824, 724, 1436, 829, 731, 1439, 834, 737, 839, 744},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{636, 752, 637, 759, 652, 764, 1390, 659, 769, 665, 1414, 774,
        672, 781, 1394, 681, 790, 690, 1423, 799, 699, 808, 1399, 708, 816, 
       1402, 716, 823, 723, 1435, 828, 730, 833, 1408, 736, 838, 743},
       VertexColors->None]}, {}, {}, {}}},
   VertexColors->CompressedData["
1:eJzsvXs4lG2/Pl6SpI1KG1ESyiZKJaJ0SiVpJ5SSpI22QrSR7BLaUERpp6IQ
aR8VSkLRzoyZwQxixm5u9wipJO1+97Oe612/47COWe/xfL/vu961vsf66zmO
67mO6/7c5+f8nJ/zc5mZxm/0tHOT6dWrV0bfXr36MP9dFH1h4rrRAoyycbw+
c5EI6xescft8h4VbHlGNuZoCTLTjmPkuEWFFVJRt/3QWgme7bNI1E2BF7JOc
g/YiFGak5O9IYGGObBnnqbsAW024mss3iXBvZ270nqMs1HdfGsVrFOBF1VS1
acdEWBqr4TVqOQsTbl1tkXGpQrjk8OZN30SwjL5346wqC3lZ/RSNf9VimHjh
yW3W9TD0aKP2D2KjJsOas1KmAXRGWcfGE40Y65F+5rqEjZbno5QEiWIE6XY9
zHMUoyOz4G72Lg7WbygYs/BxM3IGnUurXk8h7l0v3SlLuIidFTQzdSaNJblb
dBW2U0jTyTiceoqLEaPSe49YTaNpyy7tL44UmruSl7qmciGX+cRjhhuN8bvE
Bzm2FHL1Pye9v8dFblr/TLmdNHYcP9+eupTCZdvXC4c95MIrO3LP41003rgb
9J62hMKLiRQt+5iLsrTrW0xlBODMdZnyfa4IPwe3PqSzWdDwVgze9pkP132z
j6aaizDrwc5F+56zcGV75T4I+DiqZdRHd4YIkoa5Mx1KWIh68zjtUAofS34+
SbOeIMKAOFrGpYmFe1dkRLNW8pH/ruJV5QARHuyZaeUpx8b8mAkDJOp80G+T
Vvp/FyLpt/w17jA2FmbbFgyhBfh5+3BQ2HERdmz6fmbEUhbe98B5DMH5QdjQ
rJMmNOwv8Q2uMbidXqDV5300F6leVZnTbtPIiH3sP0GXwtCJQ7ITm7i4+TDz
0+UEGl1TYwThhhQuFiyWKa3morfvybVHImik2Q7r/jmLguWcoqBT77g4Xmwy
zTmQhlHVoYMT51GY8uum28BCLr78kjxavp+Gd+u5dd+tKGzQ3NvwKZeLT78H
s7J8aHBPO9q3WjPxrL653PkJF0cX6h448pEPeaeWluezRZi8doY3N5+F74WT
wtNL+bDmePR7PU2EqfJrISllwdd3y+C4KD4+PS/OH6Mmgkv/izmmH1mYUj/k
sJ0sH1XO/rxjHUIMPfwh5fxoNpT7PdqzrawcAzezL+fHCjE7oPXXmg1snNPd
XRSgygNn/BnZYu9alA5VfXNDrhTFZ/UmhZ4vRZeGT68Tu6pRfy36uu+bMhQT
nGsJzkoEZ81JgzUOsGkcW7npoI1pPU6rjmGZ9+IhcsqJirVZEmxz19JuOSvG
8uuj2gqv82D12uTCLFkJvuwbr7GhW4yJ4QIVnhYPy0ZXRl3OpJFP38wfM4HC
fI/+k39LuKDH9NPyO0VDqMoxyZ9Jwcm9l3NNKRfd50en2gfTaH+0hjXcksLw
r/ecfV9w4awY82uwL41vMXqbYxn8B5blTgp8xoVC8rvmd218ZPktLjRhcF63
PjgxqYCF4nlLfAeV8HE13GBh6lQRqrUbPydyWagaNi701RE+rHzdht5UFWG4
lUys5DML49GVEdZRgVXGLxW7WoS4FNLYt3QsG00sn+aU6+Xw7n3p3O4wIZQz
488YurPBHxjz8dZhJl7R/e9FSrWQMzh5IEGvFNNL169rbmDj5zI97c7qSjxe
cXtiEqNrSQTndwRnWYLzkXGSPU11zWhKUV50a7IQuvt+fjhvxMW09Hcfngsl
+JrkduRQiBivyjo9LAp5mMo+GKE6RALT/cY3Wz6JoTssNH+7AQ8lRwx1zbNp
eIUESc5rUMioTxuzqo2LTcVLbYJjaYT0Ox2VakJhjGfIRwcuow9XnH7OO8To
hsBqUsxcCvoBrSoTX3Kxq7Uz7hCDs2/u1tErGZw5du/6lDI4W96bsajjJx8J
C/cfS7IQ4cL53MMfn7Cg1jau7YSED1udr2vqzUR4ayIemPqChfs3n/Nuv+Tj
iehd15opDP/vPc0ZV8HCuIhRZy4F8lEwLHnXO2UG/8iIunnfWGjS8dSR+VGB
NDdxQ1ubECmRqW9OqbIxrG7MYhe7CnjMHyOoyhbi4QSNqLx5bOjfqDcd4MrH
h+tLU2crMvk1zn1R24eNSoJzM8FZheAstzU4n32JxuWaaRg0jQLlOJD1qpKL
9lr1g+/qaQQtNpaTGUhhgEEf642DeFh/IE7y8hENPa1+Ie2aFNjrIwJPfuDi
/I6Aq6IzNPgGTQ7rjCms/rR5z6AyLk5d/H3J4DCNnb5KskctKIw61Dj0aBEX
HhuMOi4eoKEaduBSzgIKqccXaF7K4+Lzkk2y5XtopO7IKLNndCNSWPtC9ykX
tyfPpe4OF+CAldq6/IUitLsXqUy6z8LELoVySxUBjnE6Q4OZ/nhg4t0zR5j+
6HtSXTRIWwA70SHzQ0tFGPny0hDfNBaiVXdXtVoJUKX5KtPPUYTc+HjRugss
aB/fne57WYDYeP39Nd4iDOwO9Wn0YvT2w531slcqwRm8O06zQIRr27XNnL+W
YOLK7sQBU2rx8V7ojbeD6jFQW2w8v5UltQ8mzvY56vhbjJrJzpWfw8SoELc4
Jp/mwEc+J/mcPI2x49br6x2mkNTs2dbswUXRMdZAg8U0Ela8U//m8ke/U3s1
4ArT78LDPjRsoMF+uvfRFTsKDZ61s33vcMHertWot4OG853+u9SXUfA5uXq9
TyYXr3c94Psz/U5u76Rtdky/c9qkwxU84mLw+zSq1YOGfJsdji2msCt5sVMj
0wcD7pxweqkjQEmivuKAZSJEXPq5+XoqC3cGGo8tsBRAq8opQX+VCA23uA8d
41l41vHz4rn9AuRNDYnL2CKCjVOElu1hFqwnBPAc6gRgnXHqpXJUhMvKS6Oe
2bLQPFpzsuXzSrCvWyUqvBMhVam1+vW3EvRy8Z40ceN7ZA4o2b0tog409+PF
uuMs+JQ/xtdWIZ5vs1FVZ9cjcgTH0nCudL/x2ccsds2rJsQ6RA8saGlC0uwt
rHglDoJNepmtZlGI0Rn6/FmLGPNHBn41lXCgRxvO6vu7GQU+m/w4IRTO2sZ7
J25n+Nn4MyralIaBnMv7iG0Uxt/vfdA2hgsrn2D+vJU0qOfaegFrKBTd6f1l
VQoXz2Rs5bs30jixdM3I/kxezKK3Rlvc5WLkK+Hpx9tpKKifjXZh8mIy3DNH
ncmLgdKKvbcNBbAZ5eMaaivC6dPJgVQSC6YdQzXD7ASwaDzPUVkrwl39i1eF
p1lI6BDfMooT4L5Ts5u1lwj77CJFrD0sVJZ5bspXqQQ3pK78+XkRdNIHq8ka
s3AiVcNy0boqjLme834y49+ec4WJnox/uwnBp8KpNXi3Mc1iwss62O+rWHr9
EQtxTjlX2+aJsKCxb/f0Xg0I3346KcReOs6pN2wrr/s34ThtuKj6ZROcVW/a
3/1Uii23zs9N3k3hXanVjd25Yjy88GCPaSEHYZOXiC8wfq8+yGiYnCuFz3nZ
/e0Yv1f88ss5iR6NjQZ1Tw55UbjaoTY3+wjDW+3x0+2W0ohOTrtcso7C2PZ3
RecSuIg3v6Ra70Lj0K69BpYOFM4vbXm4+BYXNyirhelbaZyzWT7Gfznj98z7
dCc9+MfxeRHhM/v/ks97CJ/zCZ9P/IP5rNuDz3GEz7v+yXz+mz77EX1u+wfr
sy7R59NEnwcQfa6Ros+6RJ87iD4P/jv6fJnoczXR53Kiz95En9V66PNLos+J
RJ+p/yJ9/kf5jfHEbxQSv6FE/AYlxW8MJ37Ds4ffmEb8RhvxG1V/x2/IEr+R
QPyGmPiNNuI3gv+b+I1/lX+uJP75Rw//PIP4Z9nlf/rnVOKfUwnOLIKzHME5
gvjnz8Q/TyH+eWoP/1z8L/bP/+x5cKSUeTCOzIOlZB7kkHnwJZkHO8g82Erm
wZc95sFhBGd1Mg8GkXkwRso8aPsvngf/UfcbJ3vcbwwk9xt3pNxvWJD7jWZy
v5FC7jfmkfuNH+R+w/3v3G9kkPsNO3K/cUbK/cawf/H9xv/e1/3X3NfNtHQb
936YCJNM7jZ4NtSj4Nam8g/WbAw9d/ZVR2oTsmY0VT2rbsJ0iwR1dTkOCn+N
oobblMHd0WfBUGUhgiOLR/3KZUMQvtDTr4GPG2FGJ2/OFDH5lJsl84rJCy97
mPdBGo0RYsUn8ynoqC3t/fE5FyoFb+x4OyTYxX8+PD5fjAtpdqd+e/DQ7lLf
Hcn8/yc3a9OCzGoxia13u0u1FO6Pdg1Mcy5DeGnjNtFYIfQvWh06m82GSVbT
z95bJOibK1aY9UKM9c2xsw/v5MG3u8juAVuCx2B9nxUhxl5eZGHSYx5uRtwZ
XcXoV0DeVComvh60ZP3X4wZs6FlFd51RFcN4VZx4ywgxrGx+sCpmcHCb7A/s
sV+H7J/RY38Xif85iV+XxB9I4o8g8euQ+KeR+OVJ/M4k/n094t9D4n9G8N9J
8A8h+LMJ/qkEfz7BP4Tg30Dw1yX4qxL83Qn+8QT/v8oHG7+Vlh0DBeAl+cqu
WiBCi/vmdeWZLPA01n97MEiApgFNCTHM+mTTcef8mPVi9VPH1N9V4siiXjO2
sEUICRnRx+lHCfRrZgkeXnmPbO4CK258HRxTX/TVPcfC1ozcAflBfLi057Xp
jBbBK3fpyqwuFrwqNvTWGkKh43af0ZYnxUhunbv12kUOZL50+3z0YnzI4leR
u20oDF4V47Amm4tlw1sNnjHrZglZwkhmffVV3x9GzHrJFR1arbYcSfSKC2/j
hGh2MOg3aD3DZzcH7TdK5Vip9m7OZEch7md8PWocxcbTIecShjuVYfme5BfD
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
9j24NB7lpYgXTtS53dyE8G+fzZ/+aILJR116KFO3r1Uef7g6qAWKP7Zvc57P
6ORZt7jHDTzwcjYuDWfidjezDFarrcFZtyFhUXNKcYrg+ZngSRE8yzLV33AC
SmF8dsRAVeNqTL36lL4Npq+kFd8IuyqBPSLkVyWJMXmU9WnLszxsIThbEpyD
CM4x/qH+UY1iuA21nmJyQIxg+5hR9DEOhmr8aIjdL8GIglMySU6N+CJmdV/2
5UnNy4iT52TknCT4kX07N/eNGNYej5YLNjLzGuFJUw+enA+Je3tVsQlbUi93
fI9uQl2Lu+Xyl6VS17MnDWl421yGF5yHlxVshPig4vdJh+nrS2qnXy0/XoY9
garmDvpC4LWa/fU7zPxC8PQkeMYRPA8TnkcSntsSnlcSPC0InqoEzyiCz2aC
TyDBR4ngo0bw6ST4+BD+hBL+KBL+qJK6HkHq+iap60rCn/OEP4cJf+zfKn9Y
PJtGlu/7B4pbKdhH3Rxqc5qLTFLvlaTeZ5J6v9SDbzMJ34oI3/oSvh0kfJvZ
Qx8UiD7MDv+4pvgwhWn3abNtRWJk2qSPf/mGg/7KhtXzgzjYrXEvPNK0Bh9+
3Gqy68dB2EdO3fONbOSdPZSgalCByuHqx22uCTEqgjadcImFAJfHCZc6yvBU
MbokbmQdtkXn579vkGBy2Pc9y54xddHsxlpTxMODt+0TL92jEZyZ/+A0rw4P
5joVy9BcVEpyD+c0SmBxtUNbI78JOX3pk9+Y/fZEB6KJDqwnOvDlKU4c92TB
5qQRp1lSBuPQLf5PNepQR/QhkujDVaIP0vzeCYc7VKeQBmds+poxnvUo9ng+
ZtxAHm7GLXfZk8vM/94Xr7uKm3Bz80GWkiIHN8j6VLKeTtZXWFVOmcjwd5/K
kIjml9XQD15dOWlIGTpCL0z9yeAZ6p0d99OsBovLFjstlWX6GcEtkOD2hOB2
mOD8gODcTHDe4LEjTU9OgnSt7WvCqHqkPh0nkkzk4R7B04/geZ/gmTe+w3dg
GRvulwJXftheCR3zYuMs5Up09MDNhODWcz6lCT5Zgr0r+MnMnDUorUwzvwap
ilMXVr+S7p+pzBA/p5sSjHUe3v7zshi9CkIHulzmYWn2ygQ/41J0nGs6Pu96
FdpHej9W2lmBFdcHhV9YyoOF4f5WzZha3OwaNPBtNxvHA9hHTa+XQmthkOXv
o9W4nC5+9vFUGerjdb9vGS6AaPvdWekLRQixX6u+7D5Lqr9N5Gv1n+1Cw7km
71e8AwXLRbJtnJtcxPnqK8t40tj7PqQ0cDGFo9zPMz895uIof/gNO6sK3FqX
KTvqkRDh/SO7L1ix4TK0qEl+pQBPy1PRsFaEgep7U+/EsvCc4LyH4KxMcH5K
cLMhuN0muO3hNfaKfsH02cRD6yasaULQIX3O27s8JBkGhlq1SzC+/MOO4w0M
v9rlRKdYPCwjvNpNeDWT8Kqtsduz/3chivR84z6X1+NV8PC41/MYn0Z4cpnw
JJnwRCSey1H+QsPBtcbtogyFKQlWLXWjGd8blKzf16EZsUW5fNvJFILlzhX7
aHDRQc4vJue/JuefI/tjyP4gsr+mx/kG5Py91CFWtmIF5Ar1JsikCHE+usbr
mD1bKg6BP2Xt1U1LMbll9ebom1VYeUfz9df1FZCN+x0XmsCG7ZD9/O8tzFw2
gXVot9t73J/1rF+oM41s1W27qnNFOH8oZEwmk98qN9l8hzU0EvqNL9yfIUJq
5ZR3229w0Y/o2y6ib51E3zYTvdIgemVE9Eoa3/7q/Z40vjnf+3Pum/zgz7kv
xf0/n7t3kv3GZP8tsr+2Oc1vjxML6hteHWBTZai8Thev1amTei/xUr33heR7
jXjppWdwbGMTdFT7VU65UooIKX7+JLn3mE/uPYzJvYe0eWczuc9c1+M+U1o8
YXf7dAm06tCXvvpyX1ADYsz85GVC2XBM9H9yQUmAkK08+50M/g4vUutuM/h3
kvfVIu/LI+/bkz+revBnCeHPXcIfq4yU0b6GpZiUXGY462IVXDoPDV8SWoHz
uRFucONAPWiwrU/fGkTHmvuE7eGgyon9LO8oBz+WtYYcW1LD2JDudeG1pah5
cEqS01yKm6PkInUGv8dw/sI5FX7/0Yf/TSelrUvjs5zYhBptR2NBL1Pf2ngR
Vh+T9zNKln4PWexw6d43Qwn6Xbq9w2xPA66pRp7PX8DDAuKjvImPmkt8lDup
0z6kTi+SOm0fWf5Ld3Y1AjamP5g9sw6fFY6eCFzMwinuGo0zXrWodGjVdVSv
h4X3ZZHbD4bnGt96hVgyc2joj7FH+GIs+DzYRsDMEe4an8oLRGKs15WVcdwv
Ru3jmOSVDI7d5Pxgcv4Xcn5I/OoV9c8FUHLrWvYpgOGP1UgTNVcWLpLnvifP
tSTP3UnOdyHn15DzpdXR3/KuR/K+nuT97+Wr5/2tLMmLBcmLI8nLs7NTo4YO
boHK2Nl7XiwQg2p6bi3f+P/zQa/HOaGk76STvnOE9J3VpO/kkL6jSPqOtLnm
ao9+N5/0u1y5wOcfmmjQ3lNllitQkNE24yQp8uB6t0nDdBeN/MfhxvuXUMgy
URamPuKi/GnAvrzlLFwzySsyF5dBOdizcsakun+vCw1SF1GkLmoJ/28R/g8j
/JeG/yvCzwGEn0mEnzt+Vz5ZqCqA3t6fEzmLRGg3mvpjwB0WhqwqGW3C6Kf4
uk3vjYx+Tj/37vjoLK7U/dLuqcx6+N4M4nvveWT3i4xsxqO1vw0sbCjMWlg7
+7spV+pzz+inL3n9tQLO+xX6Xm4VQmD94fSpMWw8CVF8Hsr4/0LaWm1cYA30
jumWnNtfiqcE/xaCf2+C/77PSybVPmb8cF/XSas1KbRmfxu1ppWLXzuNFH7M
pRHxXXNK1yYKOU+8c7ac4+I7WY8k69lkXfH+lN/ejWWwGJ+gfNtaCIt+V94a
XmBjGJnXfpJ5zYrMa6dJnbqQOp1P6jSZ+BDNHj6k16GB01OrKKSHXkzY4CVA
6tf9xRu2lUrVZ2m8qlNZE5jXReO+uUPx5V4U9gxbv/rIGB4ek7mvkMx9rWTu
63kvcZbcS+yo8tuf3LsCfnpvlC4kCjFg+k6v2lVs/Aj+M85oEmciiVOO4GNO
8LEk+PgRnRlCdGYP0Zkokl8nkt8qkt8FynLTm3OrMOme55J3w+ug8KYlwt+Q
BV+SxyCSxzaSx2rSL36SflFM+oW0uvhHrf/VviNt/Z/93L96zj97//+UOP/Z
PPln8+pf9V7/3eL8f3X9n43//5T1/255+V8+/Nes1wRQix7qC6A/sq+H1XIR
7NZoN75KYYHddd4mopmPmF/77S3NRLg1/GDVxZcs3Fj2ST1howCbNkyp0nIV
QfPO/m04wYLR6IjE63f5SJw9+NheHRHomnJEiVgobTnYZ6VGJfIv229XZ+aO
S0WeD3dNY+Fy0IwVL2z4qLKQf3BaXoSwd1W5zfJs5BrmfTyiVQPR18kHtuTX
oXvC9Yi3GSy8VOmcOLOYD4Oco/3LpogQrv50i1s5C0Iyp0vInK5G5nSVquhH
l/dTuBUmOuT2XIyNxd9GPnzJweRVu/0+69D4KIw0jd1NoX+w5bFl4VykfJys
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
Cj81XonkwoDocCrRYU+iwwkOF28XDeAwc719gZ3dezSn/qK/SriML/kzzg89
4pRWR7fTvEy0GiUocFHfbJTXhBF3nkVHFjH8J/Gkk3g6STyPyDkVPfRcTNbb
yLo6WZcWj7Tfdyp/8I0/b68EwTZPBaPsG5E6dYvf5308KHQbzYpRYvpa45Y7
Ch1iBH7jF9JT/rpP+Kv7WXnj7JZdKMfrxKlx8w8JwTnoUbvG86+/VwV5rzDy
XmnkvQIJT54SntQQnpSScxrIOaPIOQ1kvZWsj/s7OEvL+y2S9zySdyWS98FX
vr1sXSOB9wD204ZvDVhir9Q4bxMPVwnfdhO+NRC+/dU+NYic79njfGn6I02v
1pgcXrtRho/5Z4RxrR+FWKaoZqCowkaXiyRnQ2EpVk14dWN9QTVCPq89ETeq
DPltas4KshJU/szofUZUDy+68MWmCTxskXLfKM03BpHP24N83j6TfN4+kqwv
JOs57v9YHkrTt+YeuqpFdFXaOdL67N9wcyC4hRPc9NcN2BsfX4rNO6YtfOZT
DfX3zoKDuWWIubhtxahrpTg38t7Jx8HVeL3qVIjNtTJ0kud2kudO9PjP8flb
XspJXjxJXh5nKVtO49HgHNjTb/eCery83H9XiwwP0UKj2p9VNLz62ReIXOqh
oarT/7g8D3PJXJNH5ho9Mte8JvX7itQvl9TvJPJem8h7aZD3khb/RRL/MhL/
cxL/QxLnOxLnCxKntLqLJ3PlAjJXqpG5chXhs2UPPo/03GI/7iGNEPe5heVa
FOw3WM53buH+O/4XCP6vCP6nCD4+BB9Ngo+0Pj6CnH+YnG9HzpeXoreDMv98
r96Zf76XIXmvFwSfjQQfDsFnKNkvS/ZPI/vLyP4dZL+A7J9mqr7icBMfNSP9
jy43FcHIKWf/gGIWWFNWlkV850Pl4jzrBojwkiN3cXguCynLNEKLc/iIbE2i
2yeJoFykd3lRNQsZibr9r7rx4Sw/2vHHEBGuOs+qipRh5twZJoYZORXQl9hP
KK0SYoBRu9Y7PTaMFXSelfqXg3Pmd7aCL+Pr3hwTr9wn/fdtDOdS80xVJYhe
eO+V6IMYZp03evvM4KFVf9TU/cU0Lsy9ql+jQuHxMUf5K9+4+BI332NdPI2P
CrbKFdOY9cP+654KuFiQo/midziN1bO6XX/NodAyzPp07CsutPrbNdB+NLb1
XRvRdwEFz6nbF0Y95+JmuufBvXtpaLz+NfHnQgpxo9sHXXrKxS+DHbdflvBx
3+CAWd1UEVr9JMY2XBY8NXJNJ7bz8fSOwhb72SJc+DjjjV8BCzJp1tzVx/hw
HfWit+4YEaZ4Fm+d/JkFn+cjh43orECTeKXJiFYhpte0Tfg2ho2JFhkJ7+6W
gz6348Kyo0Js6cSNvjvYWH2z80TOIAkM5/jomXwRo/+zOWb3J/EwLLf9mm0W
jefz5QNUNCm8Kuqtnt7K8EqpK1U5loaCnW+D0ISClUqenAKXC6VJ81uUDtHY
EjVmyc25FN5+mru2z0suFAelp+/wpSHnXHhygxWFlacMvPOecfHgvvXyxs98
bC3dcIZlLoK9coXOrOcsvDrBKQmUEWCcHatpiKUIUPIse5XNQsJhcb8vAj7o
lhOcDTNE+DHK1ujXOxZ01owpvZXCR8ZQD79VE0TQYA9QXtTEglHR+x0PlvNR
72J/bpyCCM4Ot17n9mND7dMI0yXfK7DPd2DXwzYhtMO+1j9RZYN318p+WaoA
5t/CZnTsFUFt3bEns92lf79phnli6hVrGtMMJEucXSkcWRbmMf0SF3Evf2l0
PqKxwjisopzBLfq3IOHuBy4ONN46OfgqjcKLV+WeTaHQ68Wj/Mr3XKipKTYd
jKARmJxuJDubgs48JZNj77iI3m6tZBBI46XVQ2WLeRTk9yiupAu4GLyKYz9l
Pw3TAIVvAxn+yEqEB6pzuag0ffvmug+N8Fcfx/5xP+8xdJjN8idcBK/o8y5q
mgAiSeJ3lRUi8Lyv7JNNYiHn3qSXT9UF2Lg1/fSRxSIY3uDd2nuTqcdjP8ds
cBTAO8RgYIKzCOGfFtjGxrDg0eQhr58kQHLVyBHX94j++P3XUdM8mLwYX6n3
tKqEpzl7s/t1ERKXxv60G89CTdfvz+sXVINfLv+6wqwOoj1pP/2WsjDya3hq
nJsQQTfL1NxC6qH+q+lXtKb0fnpaffLL1QvEkMu8a6CgJ0b2/GCe6UIOykwD
5d4vb8bDw+8+W+pTeFF4qeyxOhcd+67knBnH1O/nBVrpzDzS+/a2nUeZecRm
wdHl9xfROPNpbO8iRj8HXtH48Y3Jl8f6WfMT1tE4/U4n/aMDhdFP2+023uTC
HCVrJ2+lcX7zuz55yymMOmuUbvOAi6OHFG1LdtJQ+jjAa/ZSCrxnCaevPuRK
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
    "],
   VertexNormals->CompressedData["
1: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
Ww4H7XcI/wOza+Gj
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox["\"Re[z]\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Im[z]\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Re[Sigmoid[z]]\"", Large, StripOnInput -> False], 
     TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->600,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-5, 5}, {-5, 5}, {-1.582886966466539, 2.5810322879703316`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560460354201519*^9, 3.560463703634221*^9, 
  3.56047049590631*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
hz6wn0BpP5gXHk8xv9BnutQHONZvxB+1Z+58eJbsHPjcjU9uvH/kEvEDO9wr
2pOewNeI9mTn3G7pviCz2/e9dZx7evj83MFxkZl98I86B72tl82WAx4WT8qX
fXV9+3zt3tEij5bVS1I+J2I22ln8qw7ZCW8d1LlChroJPv4E8hc9et21X1s7
/g5Zd3ffwpHxyvg7j7U/1+xMz3GXkn3OWSA/Te7H1qmfX9nnDhOr9XNfSVbe
H6v83WS/uWWfUXv0+zyXU06l8Hon2o+O94m/6LfNoton4pNtfKU1c3CBzxOU
93w8g0+k6zo2wAfPU6Rqvx3fBvicj7Rl8rsecBVqVjvJpx4OffL+cLnIxpBs
PnZSrUb1sJv1bPx0of7pl6xOMMeVjm3yfI89vwGvT3/0W854c1/d/RuG3Lfn
5VjCgYS1xe7oy88WWxXmCiA8W+YO+/omJZmtj3XwZLtn7xc8eQ7Pex6wyMwR
HNpxesNnFE+XrxyV+6ecf+nlzG+3ta/+gvBqqz+IDxmUZH5ce8G0kNdvif8r
o2/ervP2rtk2dEmxHU1tHrYd/j4+qPs9M2ZJzcM3ku14MXn13RXNVyaZneb+
8umghradf6FlH1m68TGzUrYSAydWzm7X55OO7hu8+qq+4GKpaS/e2vxc+X7i
gtUbr5ohm+dN7pVir4tWq8elm/vJMTPd9CfFK1ax7f/BKi+u+zF8v5CjV2dy
jgj+9QmM/24ntcInPrhkZvr94vDTP9v15Kp+NyMu5jirVy5TfnC9GhmI5wOz
b4z9YsQFPSB/H/ezcLt9hODZ/JDx3D6Xd150Pi8ZuoXlbtw/SW9y6+sB2968
JTxxbvtPluX5y5xcp9eKs5++oHmZvaFHvoM9FppNIyfNzFXfXkeP13lxnePX
hBx9IpPzw4qoin7vxlus2tJWd3+2689zC16Y89OIC+bO0xv7vw238dezLuzP
lvOseftq70uNa2Qge+gm2us7WPsbor1+h7XvJPrVi7B+p7nzdO+2IsFsXbL8
yFl77PU1R9iJOZ/Zya2UbP+zK53b1XghR2/D5NB97ooxnbtXt+2hmGtmp2pl
b/ncIzqcOe+rW2uT9DYlNja51cDOD6sVuXwqZ7tkfUTzYwMqDshsr99cQzst
3pRsVvlpWZEypez2EQ/Hjjze7IrPvaDrAve5FxTb9GqPLCuS9Zmx1m/Dcth5
YFSFwJXrh941e9R8/9nVAel9/PCOnukK3Jj1iuzn6NCZ75fee1d5rj1v+bXs
vcrbdoj9+MrdYU9M13Oykx/PVd/y8MBdn/PiDZcf1p/rSdKN1xOyXbln75vq
9egevnf0Xf3tgJGVc/e3/cZHS7K9jliVbC4umzmlcE47L920Y+eDzk2u+NzD
Kdmrd9aQNsnm5q6h40P62/E0VrT3uZ/zkWivR7L2sz/yuNzrk/UbKx6dWlzq
X/G32rLJ7qK3fO7VgJ8ej9q2Ptbetqu7Ii773GMZK+Kpsr40KE/aHXGBz+37
VCI++pyzJwxbWuPisAc+dTboU/H4hZvbv7X9P/DA/D0GdhobYOtTI+LV8fhk
n7pTjIjjPvcfmgyNfF3tfrJP3SZExF+ffW5cROeK2Yc88KmTNBd+0qzE/KRH
+EmT+8mV5b9oszrgoFkyvP3x9oPt+lvn2pHGwcP7zauuwMTQKS5q30L4Zz0D
88+Nhq/5ctacG3qmycOKBBe15eTuscMo2eOe+SYy+cGvyXY+kybRG0/NX1k8
/VbIMQOZnM+Fnnoppqe/0FO/xvTMIvrVX7J+U15547t+kMX3W22K7X8wPtHs
fS9bgU4D7f3vuIAlz99WSzTHnvxuUdaaNj7Kv3DQwJ8S9SnvzX1RcIC9/406
4641sGGiHrZl3mdfNLDxxPuj6yzLFW8OHrep3+77/8pn7o5bMrvIHXP4uSpV
O2ew858audZkvf+OB73vsObVitp1tnlnDw3Y9G5e7mS5XK/vFJedz+xt8/PM
d/P40ZbyxTsOtttXFu31eNa+t2ivV2TtKwh99PFMnwpCH/0zps8tMS59KBtX
uMhP9GiWnzwd0a1J2Ls4+/tZv2/vH7HrY9+I/FlZx05oUDhlRw+7PT2fdnR/
1jnJ9jxiv/xH1vRHOnpsu4JfLf3b20Zrlrp88Icf3m/Xc6Ftz37Nru6Mn3Jd
Wd+ewvqFnynL5AN/wOS/aeqV71P3zj9o7/4chR7oF093GTU32fYPzYceu/pN
8APzeOYVzw8m2f4K433cImHErx57vjCu+Istu49YaPtnuh9r9Ppm51J7HseF
fzR/wbTrPnVg6H+byQFehMn5UcjxqQ/PKm4O3NM3ycxS8sHsjkft/dpHIo6b
g1gcfyXsxNzF7AR1lX+YPQw8NSAxeMctvVfIm+ZJowIJHyVwM5Th7UrkzJO5
6R2fOirqACazn8ofdquT65+7et39I0+lbWHP+1drjswb9jRBDz6z5/0DdXzP
MZ+xeYH+OdM0fvmsp81DuZ5HTv4UeUuv1uLuovdGB/rkSxtZXnFY5BU+dbxR
Ik/wqdfdXXo0auiYZHPD8RWnF62386KUGyszLX7vgU+dLfP4LuV330/yqWO3
77I79yE92ac+hnWaP3b33caX/QgvFzi7X/rnCeaZ7n0zFatr18e+XrpoyZOz
CT51s63z89XeVDPZp24G3q4lTH58NNaP8E8Eb2aIgreW9UYsfdrW9j/T7o+/
eqbJHZ/6bRexr/S5N3V9q6dV1R+T9YST9VZUWm/nLdOEPesZmT1//l7c9Yvx
ST7nIMvFvtinPgzeMjF7qCvk+NQ3Ogm79ann587UpnKmmASfOpJbzKPPeSX8
Z1vGz0zBj08dMij/vZCBWR/41IXCQx4Geo4k+9Rv8334XbaqB5N96jaqfd9/
3Reo9pWqfaiqbqPaz6r2v6p6kaqeoKojqdajik/Vvka1flV+VbWu/6u/VdW7
VPmeqg6msmeV31bt41R1A1V8V+XDqrxXleer8k9VXUKVD6jyatX+VBXvVHFN
VVdU5cn/NR9T5XUq/6Pav6v2X6p9n6o+oNpHqPJD1X5ElWeq6oSquq6qbqDa
J6rqiqo68H/dv6jqEqo6hqqepqpzquobqvqbap+uqpf+17xIVd9T7cdVebiq
LvRf8yJV3qiK46r8U1X3UO1zVfsXVX1blQ+r9vuqfY1qf6Sq66r2+6o6jKqO
oaqHqPaDqn2fqp6mqtuo6nKqutN/rSeo6oGqcxxV/VlVr1adE6nq3qq6pap+
rjq3Uu1fVOcjqnMu1X5ZVf/8r/uO/7qvUZ3jqM7XVPUi1bmbqo6kqg+o6kuq
OoCqbqA6j1DVo1Tnfap6lOr84r/WH1T1K9U+XVUHU51Lquq0qvqYal+p2of+
f+cp/HxTda6nOq9R1dtV54aq8yBVPV91Pqs6b1Kd86rON1X1cNX5hWqfrqpT
qeo2qvNu1fnsf913q+obqvMa1Xmiqh6oOmdU1ZlV5/iqOrPqXFJVV1SdS6rO
m1R1M1WdR1UXUtWr/2vdRlUXUtVzVOdlqnqL6hxNVW8R8+Wme1A5i39a+p/4
2Tpw7Ke2mA1brB4L3EXtxwasnPV85FrC0T7v7ZT2Q3Osk7hG7aefGN5mV3mT
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
B0ji
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmnn8T2UWx+/33vtcRbZWS+GHdjVNhGaoJK2oTGRrLDUUSkWrFrKkvbRR
UwkhlGQrIVt7KgkVUSalRSFamMl83n2eec0f53fOPff5Pve5z/I5n3Pur6xn
/3ZXpEmSbNefTLooJQnXVSXfF0lyUp4ks6SXSh6X7+6QJJdKXy+5TvKs7v8u
fZP0U/ptc8luXY9UZyfJvkN6gq5nSWZKOqrdYund8p8oe5DsT2W3VNs9shdK
2ss/V/oX+TvIfkn2r7L/Ivsm2WtlN839/E9kN5N9q+zPZPeQvkpypeR4+ftL
r5S/YW7fR7Ibyb5a9irZJ8geIHu17Gp6x7dk95A+Tv5+slfI/3fpKySXS/4q
/y3S6+T/c27fh7KbyL5W9seyG8seKHuN7H9IX5P4urn8Q6TXy/+o5vFl2V9I
X5B7bn6Wv7Ku99FcjJDvT7nn+gP5u0j3lfSRVNMCbVCbI5gjjbWT2i2U/l2+
9pIqkv3kq6v7L+i3+8oukz1d9mu6d5mksaSa/H+Wf7b8B8puwBrJHsE9yTe6
/kH9nqJ7c6S3SE6WPVu6qsbZUG3G6nqbrltJvyy9VdKSNZP+m/SL6mOn+typ
9v+UXVn+NvI/LftH3kv2G7J/l/2j7rVg7aXPk57MvpT/Mekp7DXJo5JJkomJ
+5jBO0rOz33/J7XvqnE1k0zXdUXpQ6QrJd7Lt0lvUJszZY+S/Y3smtIVJPsw
PvnL8yz595fWZaKhJ1Vy358qf0njO0D2ibpRVf6Ksp+L88y5eVp2Rz23jqQh
Y8h9tsbpT4vEc348e1f3K5XiGNXmuLgW++Q+g2NlV8r9/Amy28q5l+xjU+/h
nrLf5Zzhk/wp8bptlq4vuSf3GvaTPiD3e05T+wayL5C9TPbBuX83S3YN2UfJ
flH2psTzUF1SU/6j497YE+xrJv2qxlFTz+snfTfvIPk+8R4ZKv252l+sdhfL
Xix9lPznyV4i/5rE6/6mpLv8r8c9UC/3HM3nLOe+vyfznrpL9peZ99q9sr/K
vDeHc45knyH7AdmbZe/Q804HS6TPlv9h2d9l3l8jZG+UfWswblTUei7Q2HtJ
aklqq82J8r/EPpFumvgaPOkm/XZmPAAXukW8AXdYj2PV5kLp1yPmdJf9juyj
ZZ8ve2nEjYtkv5X5THO2u0rOAV+Y28T4g+9Ntakj+y+yX5Z9hOw2shfJrqLx
l2m8DzEfuef+Cuke8p0n+VDX5UrG9Cqyl+teF9mzpD+UNJWdqY/+wTg5U/NQ
UfZW2Vfq/rtgiNqU5Ksk+UX+6+RbpnZTpSuV076S/yC1uVvXVwXPBTj3hqSD
/C9Kn63242UPkV4iuYMzo99eHYzDxJcBwTgMtlwTjJlgzpBgzGRtbws+v/Pk
vyUYh8GclpIn1f9p0sOD98Mrsl/Sb/rKv1r6nuC9AfYMCo47YNQVwWv5ouze
sjuCk7KvDcZzsKhP8Dq9ILtfcFyYEWPiP9Xfx9JNJSP1rFukj9d52Ch7sfT9
aj9e7T+TvjcYsxjDA8FxcX0wDuKfCC4Gn4VN4GVwrCRm7siMczfTRtJI/Y+T
nqQ2K9iLsvfXs3fJ/iX4bHBGBsrfLjce0v+PvIv0b2p7ae5zPlR6ovwfgIfS
rQvP2d5ao51gl97jF+nR6rOq7DHSS6U3qc8N0membrNCUk2/v0j+reCKrtfK
Xih9kfr8Xr4K6vO3zLHvBs6H/NvBVvkfDsb8BfLdl7v/36QfDMb8+fJfIru9
7OdlN5a9L/NGXJJ9sOxJxCDZTWQXsncW5hD0uTExbstMDpevExiksRyWe905
s531zKNKfka9eGbBq2Nyx/L3wE+9TznWUfrI3DjAWW6v63ay+4OLGsNPsgfo
/q+F49yrheNLDfmnRGxnPM9kjiPEqedlD5SslX2N9HqeKXlfckluXWIsudcr
zY0tPSLOBI19uex1ieMI80M8In4dHPH/4txtCG7EPeICYyJO7Sc9PnPcI/5x
fb7e5VTpbcGxC3w+JXHsOJnzmDkOgX9jwDa1ayv7Ob1v9+A5ZIzzY/x7UHbb
4N9OIdYH+5lvYtIFcd54b97/M0mj4NhKjL0wGJen6renBXMbuMyczHGV/T1C
dpnW4Xbpg3RdJzH/aR0cL58tjPe1S44TxGuwlPfcUZiDst/qSp8r3+LMMZr3
fiVzvKWf5pJfg88d5++nwvEG/NlemGeAV8QQxnyGpCz3/IDhxJqzZC/MjP3E
gLMTYz76VfiAfv8YC1LO78n7vhC5K7F1ueyNhfG6ufQXcdzM7S6908clx4He
mo/yxLnUZ39v/XayfruB2Cr/69J/KxkTiPEXsmeld2WOH8QR1qCn/J9wTR96
93PVXwPpcXrea6lxfkNhTsl5HC2ZkhobGUu7GJPW6vrc3BhYrnDcYY81KBw7
yqTXSTrnxsPquedxLlio+8PguZL6uc8dsXW12p+j64/U/vPCc81ar5KcJXuF
/HM1lrH63RPSa+RvLf8q+T8pHCNPkf5U0jY3bq9R20GSv0vKy39kyXymceTS
8NoDdd1b9tzcHKJX3FeNYpupsg8idyK/kr48xmvi9pyS+RPXh0Qbbl879gOW
TQ6O598ST4J50VfSzwRjwmbpoP0xXP0tLjyHA/TbmcF9Doj9v1WYC06T/+3C
Z2M6XIlxlZz/9JGvnvSdMV7AJ2ewx4NztN+kR7NXZM9kf+fmmfDNwerzavVz
TeF9C5ZWkE41tq66v0j2fpr3HfJ3h3/IvxexVv4jCsfrttIfSU4H73RveWEO
Ogd+kfq5rYg/hfEXnPmyMKZPk/6qMF4TIw5Vu/qS3XG/wI/rs4ekr5RUh/Pl
PpcLwGFdV45tRuXGE3CF+Loi4u3FESvg9nXUd/XUHOiCyOXJNcBy7FqJudjn
iX8P9oJne0cMx19BeknuvfxtbpzfIH/53M+pG3EpK/xM1uLrwvkhXKVizCN4
Vo3IxRnP7bkxnPjCGlaN73VnXN+R0ivBULA2mI/Dy1dLunEmeCbvXZjXLlOb
dwvnCbPhC4VziSXsTdmnyn6X/ViY678q+73CnHWB7M9kX5SbY1yfO6cbz1gK
c8u1xJnCvPQA6fWF81ji+2bpG+RfIH2t5P7EPH9G6v12n/TmwjUFeFrvyOU5
g/8qHOOJF+QUH8sXcucdvGtOTImxgLPG3mwjaV0yjwMbyXPgE9znTG2JZ5Vz
Oq/kMdSMfAjesiw1d8H+IffZ4rmcr58L82/46tfS95TM2x9Xv4t0f2Mw34X3
kqtyDgYnrhtUKmwPDsatOxPnRNQcLknMT8CtB8GKzLx3bJzbgyU7EnNCMPIO
5oZYpucfI7knidw0cV7cJfU8N0mNncMS51nfFq6DwJmpPSyR/9/UFhLP2bKo
20S7ceGaQhPpVtLnlFzn6R7n+CPZnfSM+2ib+rycH8/Mzmjjq16Yt9QuHD+I
I+TJN/LOYHRmjKQtZ+06XX8qfb305YWfWzvu95sT13CoI/VOXGNhP1JroM5F
PWGM9JZYT/ij1pEYyxtFzKf28LRkXOJaB3pr5noOnH9b5jwG3tgrcU1jtPT3
mTkDMWE03DZ3zezG3HWyCZxZycSS62LU1zg37I3dEYsWxzknfj6UOLeFI1Mf
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJw1mgn8l1MWxu/vfe/7Rpuy71rsS7IzCmmxpLKFLEl2SVSWTENEKm3SgkKb
0kKWirJkShGVtexFo0EjiowlU/N8e67Pp9PvnHvvu9177jnPc+6/bscuZ9+Q
hRCa67+o38VlCC/mIRwn/dQihOpVQlivjvWVEDqo7wO19VVfP0lf6UvUNlvj
/yb7NNmXyf5JY0+U7Cz9T11bR/feSfYO6n9ebV009kNd8x/pb6rtRtk3IdJn
q+0O6V+of730+rr+Zeknq+0s9S+UXCe9k+Q66S9qzN+lf6Yx66R/KZkj/US1
tVb/6bLH6fmNJd2kPyu5Xn3va8x30qtrzKeyb5V9uPRnSt/7PdnfSv9cbUNl
PygZLH2V2m7UO62TXUV6Jtlb995H0kn6Eo3pqb5/INKbqm2U+o6T3CT9DbV1
Vt8NiPRGkp3VV13zs1n6c6X7PtDz10j/SvKS9JPU1kb9yyX3Sx+ASP9a/XPV
f7rsdrJX6t1m6V7fy+4s/XdJTd1/T7UNln6xxq+s+Jk8e6PatpXeTG1TpD+j
tnq6tr6khfS9+Cbp+2pMZ+ZXbRNlT2JOpL9cWv9J77BB+iuSJ2X/LPsX6dXk
P9tHP/MS2Y9L76573SWZIb2x2oZVPKfM7WbJw9I76h4ddf+vJJOlT5GMlP40
7yS9juTkwv4xT886U/aZsp+S7CF9T0kT6d9K3pG+VDJB+guSg6UfImkp/Sqe
K12PDRN1n9ZSJup9NsneX/opGnOs9F007g/ZP0g+1rhb1HaL+v5Qey19yyXM
qewf1f+J+m/Fp2SvkbyPPzFn0qdKdpW+m+QE6d9r/HKN7ya7m+xJsneX/rTa
VuKrped+P8kN0rfSfL6kZ16u5+0t+yTJCOm3qu0T9h5rpGt76x69db9NsvtG
r+exsjNdP0323DQf/2YPSZ8tGY//SIZLHyEZKv1B9m/F+499OFf3e0H6b9J/
k/4vyavST1PbBRo/s/S3fKS2tdIXqa277JsR6bNK68whczlD0jV4DpiLO3hf
PW+ovvch6W8VnsvbENav9Nwzx8z1N4VjEzGH2PM176D+WZLHpT9S+FvP13f8
j3eVPCf7v7r+V96fmCR7huQx9jcxQPqzklHS62rMMt27m+Rg6T9LVunaPurv
w17QfccGX3M2AVTz+4h+T5F6XuE5xvcujp77t2X3kH27pEfyT97vNckTheeM
uWPOusv+TvKu9Iqu/0J9x8neITjmXFf6m/4R/Xy+9U/ZPaLXk/3SWPqy3HPc
NfnjPOnzJU9Kb6LxU/EN1lj6dI1vLf0T9p/0AWq7R8/qLRktvZTsof616l+n
63vLHqy+rmrrJX19YV+pV0nxUfZR6n+eHCD9Fd2zh/r+I1kXHT9rSW9b8ffk
kp2l95Ecja9pTB9d+5xkR11/gexfcq/h6MJryFqyho/Kfohv1rV/4KPSn2WO
g+/JvYfo+s6611LJXuqrFH7XupJSeh/1X6u+uyXbyP5dslnXN1X/w9KPKf1u
3wXvv2s1frX0c9T2bLQ/NJI+Rm0/6r12lj1Tvw1lN9P1uxAzde8lkg3ROYnc
NEHSktiptl4af6dk28LP5NnEpFbsB/aM+g5N8e8z5kD6A5KB0sfo+pt1r/sk
tZkv/Q5S38G6vmtmf2Ev8E1/FF4vctlZKb8OUx+A4F5JLdln6ndr9VXV9VcT
t3X9eOnjpY9L8Ync0bLi/NBB7UP0foMlY6X3V1sj3kF2v9LzR+w6Inh9N+t5
h6j/bckeheNvJ/VPD/7eCeq/RX3vS+qov4r2UBX9niK7L/4ou6vGnM83y64h
Oajib75T4/aULM4858w9+wdf20ZS0djnWVP2atrffST7q+0AyQL2on4PUV8D
rpHdVvaF0n/WNRuk76u2q2W3SDbrwdpfpLb66uun7z4Bf5D0l94j995ij90u
vb3e/c/ce5L8UKc0FrhX7YW+7XfZ10X78I8pHzPXzSW7SN+1NNbaSn25xrfQ
d54LFmA/Sr9H/Y9mfv6d0v/Jt1U85nLp1dR2YMXfxLftJ/sa6aPV/0vheLZP
9JjqKT8/FH2PqtJ7aczg4DmvWTonkBvIKePUt4h4K/vAlO/IqeTWv+seW+ve
M3if4P5T0/ezl3YJxkOfE9tkbyeZJ71LdOzZnxidO19M0fc9IDmWtVf/fLWf
rf7LdH236LVqK3k9N+ZgbY6oGIvg7+x9fDJo/Me6x+joNWftl8p+U9ddzJrK
3lZ903PjjyML5+M5artR4w/U2HMlk/UuJ0u6p/Vpob5FwXh4NWug69vIbk9u
1LUb2LuSf6u9rfqf1rVNJTdLf0/yjtqvUv9V5ILCuf0epDBGBauCaa+XPUf2
3cEYACzwjeQN6e3Udg1YpHDuug+R3irbssRhK3xS+ksaf29wjiPXgdHB6mD0
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
4yjp/wdUNbd+
         "]], Polygon3DBox[CompressedData["
1:eJwt1WlslUUUxvG391KRshjFqixRW41r1Q/uK4tIALFII1uhCVEiioYSCmhE
Cq02KoUKCkYrGg2hIEVvF3orapECQWtYXL+I4C4BjRrjvv8mdz48mXP+55n3
zjtz3rlFt1eWzU0lSVJO+XRfryR5Ki9JGsEqGgBWYbepvS3voSHYa8clyRj8
aDpJVqvVYodpAvYtthZbLX+Jrwjbgd2CjccKaLLnLKNpfqtd/XW+cXHuGr46
nv40j6eSyrCz1WvooHgBXxUtk68xdy/P6fyPyXfKd4svFu/hmco/W/4HZcQ/
Y0vU/pS/yTtd/C+2R+1FbDs2Dfsb68bWYVuoENuCDcWGyTfwPSc/S9ystls+
L6zHOz2dyq09vMNmvBjv5i01txQ7RKXYsfi+q+T9aJF8YTr3jr3VB/S2NuPX
nvV8OvcbO2gGltA+w6Dw/uaOlH/MsxhbnB/PzrwraRW2SL2Ld7Lxd75ObC3P
r/I0zxi6itLYG3yT8N/4snxPhrVh1WHvqJc8bW0HjKP5DmM1fDXRd7zxJFqK
18n78/7D95Xnz0nlzqhL/bzYG2FfKuQL5A3iy3jeoaFY1ljPs5xesLed8jv5
PDIpEY+gfL79NAr/hK9arVpeLX8w7En4DXMz4Z3w+43r6XLsZGv5PuyxeJdn
LaU2+Ub8FGO7uRfGM+/G7lIfiLWq5VvERnEf9VvxCdSHr8E43/NajRlqoR9D
f2MP8dfSaXw7qST0jnySZ8wKPUkXhD7GJmIz5Vv97g3Yp3Gf52NHqQL7K/Zp
k7yTbwT2Rdj3cOZYMTXKn6ETraMjvCtWHs+3M/b9CnmH9W3iaaJC7G5sYthv
Kghrlzf5jYHGFnOLzL2C7wj1iP/DflKbydNK14TvNfbkvTytdKk4i92j9oO8
je/aeG5L1OZi27CbsG+wlfEss9hw7HPsYWwh9jJ2PtaDVcQeehW7MfRa6Jn4
LbyCXYTtx2bFfT6T3vdeH6Ry/f+LejPfOfHemMI3hacduw47FPuqEmvBro7f
2wPYHGwGNki8GftOrULeQcPEn4UzV6vi2xR8WGf4DXtaLF8R9l/9WXwd7cKy
2JDYfyVq48I9ZJ3NNBJ71Nwy8WC8y7idDmLHzBlu/j7j1nBn4g3yI+ncPTBd
Xk59Yz/X8ZwgrsVq5R+Jx8f9q+evD/e92nrPfiLc97Qt9DV+Kl8m9sEo+Xs0
Np5RXbzHrw/3E5YXzt68lfIMXYK9yzc73s8J9gi2ASuU5oX9wwdjbfEbHBvW
THeI94aeVivgOyN8/559IJX7jh/HP8RuNn4Z+2B52D/ec7G34v/CVKwvNlrc
hTWq9ZP/D4Bb7Ww=
         "]], 
        Polygon3DBox[{{1611, 676, 879, 1208, 1238, 1612}, {1604, 1234, 1283, 
         568, 667, 1603}, {1652, 578, 561, 1280, 1211, 1578}, {1596, 1223, 
         1202, 639, 662, 1595}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtVk1sVkUUfe/NfNMaumChUaBUW8pHWyKtoWAoSAtKFDSBoCFCFEOxCxMU
MRCgYti7sKipibpwgwkKNcbEpKTlt1ErmPBXhBZJqIIrbCNNdAEmnsM5i/nO
fTN37ty599w7X23n9vVvFVmWXcYIGLfzLOvGGIR8NQpvASuhdAjzA/i+W8IP
5OqUZW/mmuf3FMZX3vsl9I/RLnAl5g5i/MfvKHkE+CvWJiD/BNxSaL0feBRr
2zD/IM55Fd/3MP898BXLu4EdPovnnrd9ntOFtV8wfQVYxvfHGJP4Ho+SzwDr
gQcwJjBfDfzIOtWF5MWQ23G3XsjLgV3WfxrzM4E93nvT8qJMOh94vt9yK+RF
QfYWB8Wwwr7ftv+U5+U662/aD9o3CziEuV32rWx5FeQn4NNqyLOBzwH3YZzF
/Ne5vs9Afth2HgFex5lVGKMYTRiN/t6E/e9BvwW4JpfM2DGORzDyXLqUmctL
wMOe/ybqzDFgzLWfe5cXOr8T2Ay7z2J+FnAqau8oMNhP7mecuhyr1YX41QZs
ddwYv0n7Q79+xNo58rBQHndiPAO94ag83ACe9DxzMcNxYFxfTorVAmAD9s/H
mFaIa+Q8ubUZazsgfwfutQfJHUHr28ztvqh78S5rfF/e+/VCsXgBeNZ8I+9Y
H5XO+wOwfwf6UyX5MM185VqF+f0v5H9y6Y07JozNkLk6N9cdyb059r3D/nOd
PKbOfufm26g6W+ka/CLo3Hdd0x2uI55f6fPIk7pCPHssiKO1wKv2mTaqzCVy
o87cqjJfGr23JokvLeZqMD8P25/cPKbudvOxwTG5U1JuXyyp12TOXTkoNvOA
13w++82AuTHGWNsG+8EK6B3FfB/kHVE2P4naTzsNzG9Sfa/HWXOCarE+qObK
rsEPc/ULyt2+K2uLXKs337YWuuPzwBHX++/kWlLviEmcn2n9Udv5rVDPoZ1K
4DVzjFx7Oym+byT1T/KQPfKiewj1lsHX94FPAZsxCui3APck+VwCrnX8WXd7
3W/Zd0/luhvvNeJaYz46ze32Qv2vyz43BvGzCbjP9+W9eeZx85P8Jzd7o3jI
M9kzaHvEeee9WIPMO2N4wrX8eJCdBcCNWOuDvC4pZ1xnD+9MqpOtSb4xbsxf
rFDsqH83Kd+stVpzuC4ox9Rlb58dJNcExYixagP+FRWTn4Gnc/mzyv201X3l
Xkn3qHFO+53XE+4/92sTa49C99MkO7scn4P4Xoq7vwOcDp8XwtZw0pvL2mC/
5DvLnr426SzGgfE4gPEQbO4FfsYYQt4NbAMOQmdpUP01uQZ55mn7T3nIPvS4
jzCnx60z1z1myHxgDztludc5ZUx2ei+/b7j3/hDFb8aAvjF+A66ZW/4vwXef
PbDs3NGH8Vz7ydUl8P3zpH416R4x5rreU+gd5bvwZBD3p8x//g+5/y74PwS5
/Rr7k/+jMIaHrDfg3sIaZ60NO9fM+UslxYnxpP2L7o18Ny64dpYk1dqGJN97
nHfm7bx9Jj9ph/aa/e7w/Tniex3zO85+t8ln8T/BoP/rsJfz/84fzgdj+GcU
B/jmdlufvXuhY8I3c4N9a3NsbzpHtEFb1OP5E/Zhvt87vnv/AxRANu0=
         "],
         VertexColors->None], Polygon3DBox[CompressedData["
1:eJw1lEtszVEQxs//cf8lLCyERB+JPm9TWtSzpa0gpSSVEkHComohQdWmlMYa
K5ESFiLRFbkiVpoWsUC1Eq+WUgsUOxK9CYtW4vdljsXkfHMec+bxzSxsbW85
Gjrn2pAYWRQ5t4n1QeDcYvCNxLmzXDiCXg6Oc5z7zsVX6LnolYgDv0Z2J7an
s9NIFXgVNlZyZQJ9NXhnyrnf4D9IK+cfsDXs7I3s1nJnAHwOWQs+wd8vAvtf
ftzl/Qruf0bfz/slSDe4CSkAf8PGS/AtZAx8kb1TvJuFHAJPIZfZT3O+A1uV
kcUacl4F3sv5CPoWZKm3HwS2p7Mh2QSXIpfAz5AL4EdID7iOOxvwrxi9Xu8j
s10ie+BB9q6jz+XvOeTyKfq6yOJdA86yP+nMR/mqO7p7mPPj8o39AWf6KLiU
s5LI4tEb+SBf5ONwbDEr9grkGPgj62zkPjbGWd/Hlqs3SAYcc6cP3IFUgLcj
GV8b1X4Zf+WFVtNqcDHyy9n/8kPx94DLkBZ8+8LdHKRfNWPN5zwdWs2U3/bE
cl3o/ZMuX9P+7ozE7Pf4fNZ4W+LEE/BEaG8VUxdSk1guxaEUuBm5CR5yxt8y
fOrmXjN7d4jpQGK1FOfFx8/sPUQv8vnT/6rlRs4neXs7Nq7FyJnY/ssD9yO7
wKM+tz/R34bGMb3t8PWUD/KlKbTeUj17A+OsuJvH3ubAfJ7i7Xn0usg4L+7P
A9/jbDn6fPDj2M50pypl/dfI+bivl3pSvdno+3FPYrUWp6dTlgPlQj2oeNRT
6q0Fvv5Z9rKBcW7M50u9K47OVOz8ezAwzudHxlFx8xrx9Sam14Kr//M9tNz8
5f5J8A9sfg0shkHwFe4XRGavK7GeVr4z3l/NG80W5SjP97J8KY2sFz7FVgv1
pOxpvmT8fFDt6kPLf6QZBd4WWi2fs9cQWj6kt4XGFfW76idOiBsNkfWGemR9
ZP2j3CpHWT8PxB3FpNjEP80u5+upfiz0vNVs6mSddtYjI+J9ZPFoRpaDt4bm
q2ok3hZG1lvqiSJwZ2Lc1dy+mtgMESfEBc0WcUb+1kfGJdVF9dGf+8C5kXFJ
NVQtNaM0q9Tj6vW+2GrV6+eN+Jz2/6sf3oWWO82YMeQfN7vB0g==
         "],
         VertexColors->None], 
        Polygon3DBox[{{1362, 295, 800, 799, 1658}, {1691, 824, 483, 284, 
         1656}, {1616, 1243, 1197, 467, 1625}, {1657, 282, 440, 790, 1680}, {
         1622, 443, 1248, 1221, 1593}, {1523, 1137, 1174, 294, 1545}, {1657, 
         789, 685, 441, 1540}, {1655, 811, 810, 502, 1364}, {1300, 672, 607, 
         253, 1209}, {1541, 444, 826, 825, 1656}},
         VertexColors->None]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFVk1sVkUUfe/N96YWUAptv7J1ga5IsEoIsDT8qREpUUxAGz+KYAmtG2kT
EGshUcLKhdIWKNHEndb4E5eKsWlAASVuoPFrSEr6C1Qlra3S4jk5x7C4OffN
ezNz59xz77xHS60NLVmSJJdhAfY+HvqAT+NhO2w2TZIG4M6YJJ/A3wKcxjeD
8GeAb+DdFfjNwCN4tx5+EbgYz49jnSXAHwtJcgLj/cBvYU32vwK2wEbw3VU8
n4E/DPwBdgx+Gfgd7F34k8CdWCvHni8Dixgb4jjm1gLfg03AL+B9N/zPEu37
GHAIOICxU7BZPK8Gdtkftd8L/36mNUhE2TGcB9bjPEfhb4+KnXtx3X/w/Urg
v8A7OdaCv5ArNs4d9V7c9yz8GbybAVZjnStYtwfjU8B24DhsA+zVoNgbgW14
HkvFaSusLntwbvrk9zDWOgdcDvzbeZkFPo/50xjfFnQ+nnMdbCme+4BVwI8w
ZxViWlqRJJVB6y4CPhXF+Q5gP/MDW8tcBWnjTWAM4r4CWIJdwvs9wCbYx/D3
Av9CHPfg33Vc87DlsA5Yau5u2GcOm6J4upaLsxHzttfjfM/xAcezy1ztpi4c
D+NaYu09HHQGnuV2rrj7rPFSKh74XZU5WRaknQFrg3ExPsa5C+vUwH8SOOfY
mf+6qLy9HXWuL6znZVG5fz1K4+X0gU7L1s9N5P5z4K/Ag46NHP/mcb4/WdC+
3xe0Dmumxvr62hobss7Pu86+SaWTF4Py91IQl/3msx54GjYH/xVzSN3xHGc8
zhpgLaRB+37pmKnJC6nio3/RuuqyT96IbfbH7PP734HvULvwV4GXQ/AHc2m5
1bkoWeuj1hZz+lBQH+C848BbuTiez8Vphznf6h7FXvVEqvVZb/9rjjlbn+t5
X1Q9s64nc+X9Z/eNTws60y8F9bTXsP+5KG5+Mj9F97rNwD+tc+q92dyyJlnj
7Cu9BY23ey7X6LE/7nHmnut1m7fKVLEV4e8LOtd+65M9jvrvhC2GrUikK/Ym
5qwhimdqdWsQF88E7dPsvXod21vAy847878ScwK+/TCKj273n3lzTq72R52X
HHZi/k3GCNyQK39romqo23XKHrUZa56N6pOd/maYubUemPOSNbAxiL9NwKlM
HPwB3BTVWxqjOK43z2XXVa17SYf9q84j88mexhpahF7XC39HUJ85bl0x/nuu
9/lM+uT61eay0nGyF825roedp6K1R/7YD2bc79iPexwnc80aPGVOiKud62eD
dPpc0F1DfVKnrLkW1/s29/MXgur7mGu8zfnhOo3mh5qsCdLFUcTwiPsbez9r
bchz251zxjbl+4iaP22dcPxWpnPeznTHkG/W7HimvE9k6nnknHHzjqOm0grt
zRhGMt3pPMdJ1y85bXBvrHX9Lvj+5T1cnUvP/F+oitLq9Vy5bnEv2mJtU+N3
rBPqZcF3MXv+sP8r2GOZN/7PkMdBx8ueMOaz8Exdzgv3O2GeJn0GnmU0U3/j
d+tcf5y7wlogV3Xu/9OOebd7LHvtDZ93wpovutddcC65Jv9x+q2TD7DOgaD7
5T/lf0Ye
         "],
         VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlElsTmEUhu+93/1vtY2pmrKVKCtBEcHSPEZNRReETsSwYiMhykbsJEhE
SyV2VAyxNISFGIrY0NBIKkp/LUKbNrTxvHn/xcl9z/3Od75z3jNM3X1o48Ek
iqI9SIp05qLoSBxFc5CyLIrioig6zEErZxPQl4Yo2sfZZfRl4BKkC30Gein4
fc62s/k3Efsa5CV4MbIKvBG5Df6CzXdsu/H9FH0h8gY8RDCd4ErOh8F5/n1A
n4x+HzyeeCZxL+Wt8/iaj+zmvIfz/pzjbcFuEH0QfQQp5vx47PdKiuzzBPo8
7i7iXwW2x9Cr0BejT0Evx/8F9HzOZ/IhX3053y1FRsGTMr8lzmaC52Z+SzHX
gp/wVh14OjaPwY38K5MvpAl8FvlNnv8K+kdsboHLkUep39BbzbHzq8bmZmwf
ilf1Ui2qCu+vQNrAL5AK8AbyGOB8CL0a3MK/5cF3jgojN8AN/LuSOT9xeQf7
TZnjVWziSFw1oA/H9qn67uBeSvzX0WuD81fsqrFqPY07vZx/5ryZfF4jl2L3
xOfU/KoXlJNyU4/Nil1D1fIV34voz5Br4HfYt2C/mbdasa1EXxtcA905kzr2
kwX+GlO/LQ5PgR+mroU4Ftfn8JEE16iywN8i8FdkZ+Z+eZA6J9UzTy5jwN3q
X3DM3d7I9+WnJ3H/6M2v4L7EtuKvPzEHui8/4kZv6q56Wr29BB/tkWdMsya+
NUvKuR68Ong2le8a8H7kW+w7B8CTselAv1qYtx+81xN7JjtS56TcVHPVfl0w
36rnevnOuRd0/hb7beAcsS7AZnswf+L2LtKlvZC691Qj+RfH4lozonn9m3iW
P6H/A/9J3Pua8QFxic985B1SrDpk7lX1mPJV/TT74kzcjST2Jc5HE3M2k5hD
MJfqAeWjvNQb6un64JlYXpjH07HfvJd6f2i2VDPNvvaXuJAP9aJ2QFnwjtG5
elC9eKmwrzSzykd5aZbbMnMo7lZm7hntAu0c9ZL6VrV8wr8twfMgrrUDtQt/
Ju4VzdyvxByLa8Ws/aEaqBaaOc3enuBZV3514J3Bs/gcfRe4KbgX1BN7wWOD
d3U7+rjgGHXeGBz71uDYVPOa4PnTblYPqZcmBt8VH+LlP1K90O0=
         "],
         VertexColors->None], 
        Polygon3DBox[{{1558, 460, 866, 865, 1660}, {1496, 851, 850, 504, 
         1636}, {1695, 864, 459, 314, 1660}, {1555, 306, 1182, 1141, 1526}, {
         1206, 235, 773, 772, 1299}, {1661, 875, 874, 462, 1559}, {1608, 1235,
          1252, 461, 1623}, {1619, 435, 1163, 1215, 1588}, {1554, 305, 840, 
         839, 1659}, {1661, 315, 489, 876, 1681}},
         VertexColors->None]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0bsuREEcB+BZZ+9YEpdyNx6ATkchyqWwUS0FOgTt8gJLK0InIiwiOp6A
J3C/X15D5Zsofuf7/YszM2fOwMJabTUVQliRvrYQYv/1yEm3PpwJocJxDnFU
JvUJznKGS7Ksr3ODm9ziHluyo1/xgDfxfWuX7XWn93DOfK8n6RAemOYjnySj
PzPLF75KTn9jnu8s8IOfUtS/2M5vTlm7Yo8fvZfz5lv91Fmuuc9LHsu2vssm
m2ywwcUYvc46qxyRqj7IMZZZsna/Pbr0Tk6bS/pFYuY5O+LZ5EwvxnOwwBPm
47fFO9OzPGIm3occ6km8Qw9Lh1rq/3/9AUwoLVQ=
       "],
       VertexColors->None], 
      Line3DBox[{787, 593, 614, 615, 592, 591, 1324, 558, 590, 589, 556, 577, 
       557, 715, 740, 618, 1684, 716, 700, 717, 701, 702, 559, 656, 560, 734, 
       704, 619, 594, 684, 651, 653, 1676, 644, 1321, 1733, 660, 596, 688, 
       654, 620, 703, 705, 562, 661, 679, 680, 678, 736, 617, 642, 1666, 616, 
       787},
       VertexColors->None], 
      Line3DBox[{784, 783, 782, 781, 780, 779, 778, 777, 776, 775, 774, 773, 
       772, 1686, 1325, 771, 1685, 770, 769, 768, 767, 766, 765, 764, 763, 
       762, 761, 760, 759, 758, 757, 756, 1682, 755, 754, 753, 752, 751, 750, 
       749, 748, 747, 1316, 746, 745, 744, 743, 742, 638, 788, 1687, 786, 785,
        784},
       VertexColors->None], 
      Line3DBox[{834, 658, 1688, 682, 657, 681, 578, 561, 622, 645, 580, 563, 
       1677, 663, 664, 624, 623, 597, 581, 625, 1326, 598, 640, 582, 712, 713,
        599, 1671, 646, 690, 621, 718, 719, 708, 735, 707, 639, 662, 686, 579,
        706, 1667, 655, 689, 687, 595, 659, 1670, 1320, 643, 1692, 652, 650, 
       683, 834},
       VertexColors->None], 
      Line3DBox[{807, 806, 1318, 805, 804, 803, 802, 801, 800, 799, 1689, 798,
        797, 796, 795, 794, 793, 792, 791, 790, 1680, 789, 685, 833, 832, 831,
        1675, 830, 1327, 1735, 829, 828, 827, 826, 825, 1691, 824, 823, 822, 
       821, 820, 819, 818, 817, 816, 815, 814, 813, 812, 1690, 811, 810, 809, 
       808, 807},
       VertexColors->None], 
      Line3DBox[{879, 629, 647, 628, 641, 1678, 665, 666, 627, 567, 603, 602, 
       1328, 566, 601, 626, 600, 564, 714, 583, 1672, 565, 691, 630, 722, 723,
        720, 721, 584, 568, 667, 569, 668, 692, 1668, 669, 695, 694, 606, 671,
        1674, 572, 1323, 1734, 673, 608, 697, 698, 675, 1698, 709, 674, 573, 
       676, 879},
       VertexColors->None], 
      Line3DBox[{927, 728, 727, 613, 576, 588, 612, 1319, 637, 587, 611, 636, 
       575, 610, 574, 586, 1699, 649, 632, 730, 699, 710, 570, 585, 737, 738, 
       724, 631, 604, 693, 605, 670, 1700, 571, 1331, 1736, 672, 607, 696, 
       609, 633, 711, 726, 725, 677, 731, 732, 729, 733, 634, 739, 1683, 635, 
       927},
       VertexColors->None], 
      Line3DBox[{889, 888, 887, 1330, 886, 885, 884, 883, 882, 881, 741, 926, 
       1701, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 915, 914, 913, 
       912, 911, 1679, 1322, 910, 1673, 909, 908, 907, 906, 905, 904, 903, 
       902, 901, 900, 899, 898, 897, 896, 895, 1669, 894, 893, 892, 891, 890, 
       889},
       VertexColors->None], 
      Line3DBox[{847, 846, 845, 1317, 844, 843, 842, 841, 840, 839, 1693, 838,
        837, 836, 835, 648, 880, 878, 877, 876, 1681, 875, 874, 873, 872, 871,
        1697, 1329, 870, 1696, 869, 868, 867, 866, 865, 1695, 864, 863, 862, 
       861, 860, 859, 858, 857, 856, 855, 854, 853, 852, 1694, 851, 850, 849, 
       848, 847},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1440, 1508, 1439, 1756, 1509, 1441, 1727, 1784, 1442, 1510, 
       1443, 1804, 1632, 1511, 1633, 1560, 1562, 1795, 1654, 1669},
       VertexColors->None], 
      Line3DBox[{1448, 1514, 1447, 1118, 1446, 1513, 1757, 1445, 1512, 1444, 
       1794, 1728, 1561, 1567, 1645, 1644, 1646, 1806, 1732, 1701},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1428, 1504, 1427, 1724, 1780, 1429, 1725, 1781, 1430, 1505, 
       1431, 1788, 1527, 1556, 1528, 1432, 1601, 1602, 1557, 1782, 1604, 1603,
        1649, 1605, 1663, 1668},
       VertexColors->None], 
      Line3DBox[{1438, 1507, 1437, 1783, 1726, 1436, 1112, 1435, 1506, 1434, 
       1789, 1530, 1529, 1433, 1613, 1614, 1576, 1801, 1612, 1611, 1651, 1610,
        1665, 1698},
       VertexColors->None], Line3DBox[{1674, 1673},
       VertexColors->None], Line3DBox[{1679, 1734},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1417, 1491, 1416, 1750, 1492, 1418, 1751, 1493, 1419, 1494, 
       1420, 1731, 1752, 1495, 1551, 1525, 1575, 1799, 1672},
       VertexColors->None], 
      Line3DBox[{1426, 1503, 1425, 1502, 1755, 1424, 1501, 1754, 1423, 1500, 
       1422, 1101, 1421, 1499, 1571, 1753, 1600, 1678},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1402, 1483, 1401, 1746, 1484, 1403, 1720, 1776, 1404, 1485, 
       1405, 1747, 1486, 1406, 1721, 1777, 1407, 1549, 1550, 1408, 1748, 1487,
        1409, 1095, 1410, 1722, 1778, 1411, 1488, 1412, 1749, 1489, 1413, 
       1723, 1779, 1414, 1490, 1415},
       VertexColors->None]}, 
     {RGBColor[1, 0, 0], 
      Line3DBox[{1387, 1478, 1386, 1712, 1768, 1388, 1713, 1769, 1389, 1479, 
       1390, 1714, 1770, 1391, 1715, 1771, 1392, 1480, 1393, 1085, 1394, 1716,
        1772, 1395, 1717, 1773, 1396, 1481, 1397, 1718, 1774, 1398, 1719, 
       1775, 1399, 1482, 1400},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1372, 1468, 1371, 1742, 1469, 1373, 1709, 1765, 1374, 1470, 
       1375, 1743, 1471, 1376, 1067, 1377, 1472, 1378, 1791, 1546, 1473, 1379,
        1744, 1474, 1380, 1710, 1766, 1381, 1475, 1382, 1745, 1476, 1383, 
       1711, 1767, 1384, 1477, 1385},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1357, 1464, 1356, 1705, 1760, 1358, 1706, 1761, 1359, 1465, 
       1360, 1059, 1361, 1521, 1543, 1762, 1597, 1677},
       VertexColors->None], 
      Line3DBox[{1370, 1467, 1369, 1764, 1708, 1368, 1763, 1707, 1367, 1466, 
       1366, 1792, 1548, 1547, 1365, 1524, 1574, 1798, 1671},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1347, 1454, 1346, 1738, 1455, 1348, 1048, 1349, 1456, 1350, 
       1785, 1519, 1457, 1539, 1590, 1591, 1572, 1800, 1578, 1652, 1620, 1592,
        1662, 1688},
       VertexColors->None], 
      Line3DBox[{1355, 1463, 1354, 1462, 1741, 1353, 1461, 1740, 1352, 1460, 
       1351, 1786, 1704, 1570, 1520, 1542, 1459, 1580, 1569, 1739, 1596, 1595,
        1621, 1653, 1664, 1667},
       VertexColors->None], Line3DBox[{1670, 1733},
       VertexColors->None], Line3DBox[{1676, 1692},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{1333, 1449, 1332, 1042, 1334, 1702, 1758, 1335, 1450, 1336, 
       1790, 1536, 1537, 1337, 1642, 1538, 1643, 1805, 1730, 1684},
       VertexColors->None], 
      Line3DBox[{1345, 1453, 1344, 1759, 1703, 1343, 1452, 1737, 1342, 1451, 
       1341, 1803, 1629, 1628, 1340, 1535, 1568, 1797, 1729, 1666},
       VertexColors->None]}, {}, {}, {}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{941, 1041, 942, 1759, 1046, 947, 1051, 1741, 953, 1056, 959, 
       1764, 1063, 967, 1767, 1071, 976, 1080, 985, 1775, 1089, 994, 1779, 
       1098, 1003, 1103, 1755, 1009, 1108, 1014, 1783, 1113, 1020, 1118, 1026,
        1125, 1035},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{939, 1040, 940, 1045, 1737, 946, 1050, 1740, 952, 1055, 958, 
       1763, 1062, 966, 1070, 1745, 975, 1079, 984, 1774, 1088, 993, 1097, 
       1749, 1002, 1102, 1754, 1008, 1107, 1013, 1112, 1019, 1117, 1757, 1025,
        1124, 1034},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{937, 1039, 938, 1260, 1803, 1044, 945, 1135, 1786, 1049, 951,
        1169, 1054, 957, 1178, 1792, 1061, 965, 1766, 1069, 974, 1078, 983, 
       1773, 1087, 992, 1778, 1096, 1001, 1101, 1007, 1190, 1106, 1012, 1149, 
       1789, 1111, 1018, 1196, 1794, 1116, 1024, 1123, 1033},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{936, 1128, 1155, 1129, 1201, 1797, 1157, 1295, 1158, 1276, 
       1301, 1164, 1222, 1247, 1133, 1166, 1134, 1255, 1739, 1223, 1202, 1262,
        1273, 1167, 1311, 1168, 1302, 1207, 1798, 1138, 1307, 1139, 964, 1068,
        1744, 973, 1077, 982, 1772, 1086, 991, 1095, 1000, 1142, 1294, 1143, 
       1753, 1229, 1204, 1183, 1297, 1184, 1208, 1238, 1801, 1147, 1193, 1148,
        1257, 1239, 1205, 1314, 1275, 1194, 1315, 1195, 1806, 1278, 1313, 
       1272, 1152, 1153, 1032},
       VertexColors->None]}, 
     {RGBColor[0, 0, 1], Line3DBox[{935, 1289, 1324},
       VertexColors->None], Line3DBox[{1031, 1292, 1330},
       VertexColors->None], Line3DBox[{1321, 1320},
       VertexColors->None], Line3DBox[{1323, 1322},
       VertexColors->None], 
      Line3DBox[{1326, 1290, 1203, 1176, 1791, 1177, 972, 1076, 981, 1085, 
       990, 1094, 1748, 999, 1291, 1328},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{934, 1126, 1285, 1279, 1309, 1277, 1805, 1161, 1310, 1305, 
       1268, 1306, 1258, 1218, 1244, 1132, 1165, 1210, 1800, 1211, 1280, 1172,
        1296, 1286, 1281, 1228, 1762, 1136, 1293, 1060, 963, 1067, 971, 1075, 
       980, 1771, 1084, 989, 1777, 1093, 998, 1140, 1308, 1287, 1799, 1282, 
       1303, 1188, 1312, 1269, 1271, 1270, 1283, 1234, 1782, 1250, 1146, 1191,
        1212, 1256, 1213, 1264, 1304, 1274, 1192, 1298, 1288, 1795, 1284, 
       1150, 1199, 1122, 1030},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{932, 1038, 933, 1159, 1790, 1160, 1162, 1130, 1785, 1131, 
       950, 1170, 1171, 956, 1059, 962, 1066, 1743, 970, 1074, 979, 1770, 
       1083, 988, 1092, 1747, 997, 1179, 1180, 1752, 1006, 1185, 1186, 1187, 
       1144, 1788, 1145, 1017, 1265, 1804, 1266, 1023, 1121, 1029},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{930, 1037, 931, 1758, 1043, 944, 1048, 949, 1053, 955, 1761, 
       1058, 961, 1765, 1065, 969, 1073, 978, 1769, 1082, 987, 1776, 1091, 
       996, 1100, 1751, 1005, 1105, 1011, 1781, 1110, 1016, 1784, 1115, 1022, 
       1120, 1028},
       VertexColors->None]}, 
     {GrayLevel[0.5], Dashing[{Small, Small}], 
      Line3DBox[{928, 1036, 929, 1042, 943, 1047, 1738, 948, 1052, 954, 1760, 
       1057, 960, 1064, 1742, 968, 1072, 977, 1768, 1081, 986, 1090, 1746, 
       995, 1099, 1750, 1004, 1104, 1010, 1780, 1109, 1015, 1114, 1756, 1021, 
       1119, 1027},
       VertexColors->None]}, {}, {}, {}}},
   VertexColors->CompressedData["
1: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
fW68p/zR8+/1uneLC8tlriqD2DzsiLwy57shHb0jeQr8FVxk0OaZGdzj4UB+
nW/f/nSM9KvSN9rCQ32y1ZSsGXzcPsGcNfkAHUfSJ81Y0crH3bzHbw9KCACP
TYNUxzBw1VP+lsTYJmxd/eSw3k4hwk/E1OkeYqLQY1G5xOUm7L57Yk1jIhvu
QVpy/vU97xPyCc8WwuNKeK53GzeCjBtMdGZ00zmKzIvVbV499Y972uIX+VUc
qKS5V2APDyUuWbGebNH+/eySioQWDppXjAzwC+TBNz6u/j6fwuyb2gLPFA6W
2R6RWryWhwUzmD5WlRTKjQW8L8s5yFr2ZUn5BB5s1JXy3uVSUDpKU6t2YSP0
mLtE4BUuJil5qHFOURhI8JBuuDgeceP2VH/iKlcbezUOLLlzY81keVixwfhj
YCaFLVXzlr8+zoFUTmM105KHwNWbJOYxKDT7XRes12Rjc16x5Hs/LrpWyh6X
D6KQEzOZHaXCwplCqWxNWw5q8vcVL1OiUPCkd4rUlQo8Dw+YOGpMAwxdB847
x6ehymOW5wwnOvprqXNrP1Zj24nDa2KLxH/nsKf4Bf7Rrg2z6Qh70z5/+JNq
7GnV8F44oxy5RE8O0WNM9GQT/VFEfzXR30jmu4nM9weZb0/9Nq14V/JHQw6k
q0J6L1Ljod3JxANPKXgJ5o2OjOHgxoJpI/1teDAYO7y2uITCxQ8XTB2cRfvp
N0MfpV7iQrjskL/CSQr2M4e7TstnQav+8kOlBxxR3zpo+ZapFOLkji5MCa5G
9uizFXp92aAF751zWouGlpZqe/7gUgx6fvTJahkW9o0dPqChgILa9mIZli8d
e/bG7DIyrMHswZPeV1uU4ZDsuq4hLyikheW9fdmnCtYsk1G9OqowmNh7E/v5
xL6J8CsRfj/Cf47oySJ6XhM9K7vpP/0P/WS+27rNt6d++1X/b/s3/j/ji++Z
jlR5xMWce6rP7gh50N10UzNiKh1T5Z97JDlxYZ8gs7nPQx7m31swAAPpaAzM
WT3Xh4ehGlPe6M3nQ+vFuoAlwXRYxfqPdGjmYybdFSe+8+G3wyTx+UgGMgc6
nU9NaITxu5Q+hrZC1KdE6U82Z2J1icoB3u5mxPQLrO73WIDwk3lU5p4SDA9y
n5V/qwkCv1Pf+r0U7fPLl96fKWBia+A43vrtjXh4pHYCc10tTLjuimM9GBhK
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
1Ttx/vn/AKB43YU=
    "],
   VertexNormals->CompressedData["
1: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
NdrWSr13rQx86wPvYzuVFkjC+5jLXS3qfUw9qPMhvKfdVA2Whvc02qQa9Z7W
XdhGvb9lLMorhve3L5odjfD+pvdQMk6vZrPs/v29FfBeN/P1CLqgVEm976EG
yxLwf6RXSPlzh9nAex223bZTFvC902wo/HmhHfBeh2UcsqWAT3OOLcXn/fAJ
eK/DiSb3g4H/ur2DFP/Hx87Cex1+mbitCeIt2s1JxWsdswje67DV/hF70Efb
sYbSZ9HnDfBeh8OPiLCDnrvKZ/TUDlrWcJ+lGlcuYZ3fKlCE1bsyltTa/Hle
NWbl1RActFFEn8I5n7Bu6d/BYdLpX/LdLhDPsg3frzdUiYYHZwXFcNGQskwe
h+L5Z3jspKx5ZXAvGne6zLKMd/CP8R15bGcRHGS/1ZzC8ex6SOEsYzg0RYRD
7T4l1Lqlx+dQ6/4p/raP7NmX+mtRpb2hMod/AV4rnNIStfnPdYi6sSGT4GCm
lcd2As6trMhWwPE1TMoFe+snXymwz8189bfww2ZwUMtPnNl/E+dprxwb2S+k
ZH9/L+hWuQRRuumsbYD9Qi7HuC+Czs8fP2b9O/tluWyUEfbd4TMXhTO8b4TC
efjBCfYL21Vco9b9oSL/t/aLw6uyHvL27vIqdsjb12pb/lb++6VaQ/7jT+Ir
lwHOyMoQCsdF6ZNKVMZ1/Mo7SFu0CKHkkK/O98i5szi5NlTBzw6XfGBwXFAk
gaqOPj0E5/FP1w1nvWoa+aEKxbwtLVj7qhZHapcLZ7j+vv+Kdtw7cWZeB7J3
FOw+TEtFVjzhkpH8w2hNVIME4Yne92y0Bp6cN8cpntf8cmwIT+STY3UaeGZV
zvBMM60aKmMtxsVT8ZcXC2WiYHWdHtaDNCQnfNCQ4GOO8eedgC+QEiAB+Btn
LXCbEsrFb2rl1U9+LEbpy9at0dz0+3gX3muWEuBsxWu8HTdVHW9Cm3O2v8k4
+O4f63dt221FCD66KLRYGPCFJ1kGAD/z3OFpcd4Y7Ow3oKG3rwmVrO+vp/MZ
QXoH5j0sji3Gx9ysed/cHkIOSbffWxzo+P3c8mSdJ/FHwlxXV4H/hqzrY3/l
PyzIOkbWRbKrZTVh3QOundS6qgK7A+6ldOBAjpDgI2dL0IaQRTVtRkNo8vYl
y0drCrFNVkaaRU4e2s6tFKKBaGi+yQ03Ykf+Y0cywJ7Ypx8MdpMVPlEEB7ka
JwUAzo8fhZWAY1UqN6J/swV1LKj3Xjgajed/+V7jz/7PzW//lL3Ym99mg24K
Plc7bPJsfx2uqNs1Z7vZKBLcsP5yEq0Qaw5Eszy18MdPTZefm3CmIffbCfvB
/8XGdabgz5AZTPlfiYyUadPIxq/SljzaoN+IlaeMZgfcGUHV1/odAUfBc2VG
KsEJrE86CzgsL1LLdRheYeacwdlrPFPww70clTnz//yc/qn9eF+DP+zXe6v+
Idiv7XyjFbBfuj6csL84QvV5GezvAuvcINhflYy1bNav07F2xfx+aYVyNH5q
Ud/FNeRecJ92H/LHUHRvH+A8/eRaBji/W7fmjva1rMB6rKEzJPmFqws1Zzn8
CIz787r9OzvXENNlyE9VvtgK4M/veIbKzwnzxgnI/9yceHXI/yiZkgbI/8DZ
Uqlwjlz26HLBOXryWp3Okpyjm0dsT0MdY/a6zAd1Jt34DVXHfqvnpoEgOL+Z
AircgHN9Zcssy784j0WvJWhQB4JWP6H4NMyppvhMXxE8DvUtR9ppE6zrdN9D
BtY1PO7bDvWwRkVoO9TDZRNtvVAP6T/Id1maNCI6ry3e3N+e43uTq+b5Bf3r
z5fujkJfg9JarHJF5b4wew7adi1nUcbxUcSjQvUj1J5mGC9M6rxe9Ew/KjSk
+hHSY5pzfT6p89+1Z+r8vE3CZtBfvh64iKG/tHebivxVf8mMo/oInqb/VgT4
5b4zfaQibs8mr1QnXOF70yE48gzunH+64T58f8d0bCfYuUSO8YC92vsUZafP
ZW4A3bREwveAbksNDRlBt/wmCgcpK+awgv8OrRmc+ie9gRBvQNkUkwiJd5ym
yAzxjgi3WEE+B4o7bYF8ZtSvmBdE8hn1d/24TM5LsoFcM5yXwvR5b+C8JLDg
b9zfatDkvOzmatNiVNiUmde9bhTl6Z9AUDe+hXNFQN3gnVg/F+pG3J3xEqgP
3CERHFAfxKXYqPqguPpQD9TVDzY0Tqir6ZIt9VBXI8vl3wP+8AfuacB/cOYw
he/5gHcv9KOl6rcnX5F+dD1/ywj0o+LjNyShD+42ZqCDPtXg1EID+37eB7bQ
T3tLx2Wgnxb7RfNBP32tROmJDD1pVqBP1KEZPaWCqD6Ot33xuwf7K1331/NG
PJeFM9ENWd7q2gS69bQunxv0N+pARWzvKIkXMzxe0ATxLuG/WADxTksmDhB9
8PVr+1xAn60blOtAH3VTP+hHOPuRLhPYuY6r14JdvDN3EnDSFqFvgHNnMggD
zu/W5bcSMQf+749KSAP/W1Wrpv7JOvY7+1sbxSb61SXIuH65itjlATRbRn/8
7EDfb/2zuvQKg2sasbV05IN+kWHUpKLPbZFYi9gOL1zhEPcMdysIsEQmdCBJ
+8Cb5SO/r9v/avvCa2VGcVwt6HteZI1eUi/avdk8nSHwzW/9h3a7Fglbl2G9
11y6Gz1bkWWDxJKTPL+vz/9b7LUMji0QV9cyAzOIKwV5L4C4jEZdtYk++E7E
izegj2NTQwzos6ho81ayj8hXgZ7aR1HeY3+5j6d73XtIPqDlauz3IR/omdKW
Qz78KU9BFwVF2K+cpOK3wCf76eZ44GOFu18S/qjwVJU58F+VdpWZ4t9pl0Hy
FodaWKtC3nYnrf72V3n7P2V/9Sol6PlwE5pDv2r3KdYSvE4maqtEy+/zqj30
my/4D62+LQH+drN1xf7K/3/KXnr0xxY47+qt/cshT/bISNyAPHGqDiuDfbmm
cuUY7EuYzNIx2JeONzkdsI96ThM6sI/7QpeywD7e6XcpgHqSmhwXB/kTvFx/
+tLfyJ+PXGExkIf7Hi1LBhxXX/HZf5WHHJw8T6HuCW3k1wCeNIGPFM+5Y+G8
kP8Wa8M5IC5zox1UXO3b9x2H81JY9qgO8pMjNyHjr+rJ/xa7+5Yr0rYPa/HF
9us6GZ1dKDzrvcEN939933k9vcHRW7oH3UiJ7m6zb0abT6lyKk73o3NpDRsJ
H7Rd21sX+LC43j8NfJblDW2q+V6NYmKeb/WvfIfEV5izWd/5/Tz8O7ttTQ8X
wcGpa+dvAxzjdu1lfwfna1/oqZPp9fgYE9ta1S916Mrpkykd/v9+5/R39sdz
y02A//xnJ6WB/96sFY/+iv9Rtgs+ywdzsb/M3M2FB3sRYy/ftjuC//o8+X/V
/j4HuYGekQ8S14OeC57H7QA9WewHdkL+540yqUD+F1QzXqDyX+KiOJzTIxbv
D4HdInHORbA7dCtin6MO2GP6s0CDsQq2yujflgXv5FfFEogd+R76QtmPqg9Q
9t/xSXJqdyfnEW99xtsK5/G7wUVWOI//VLx8P4S7yX0TbeFgtoX75uuIWur9
7U9xAl4uNTdv6kZmDsslhYb70FXvy+FiOl1/nv8m+R+e4x4svyS5yanwNXr6
vkvmpvLAv3zfbyUsXgP154CBoyTUn3tPhaYvk/qzfv1RH6iHI+eT74L+4Udt
V/2V/hZnqxZBPbRhi5EGnBPcWrP/Th2LML0T3ranEVud4f1EGy1Hm9emWsz9
PowkP9uPwn6d5LKThP0qVWei3gfmzSoLIvdW5LGS5wHc05U5sxfCvfV3+Isb
qfxEGUGypZCH8x7M5OewOZWfOHdwxt6H/jo//yn7yulplQhNO9zCsSCraWgf
Vnu/zR3ulYz2CzvI/R0P8MQjuL9PhiTT/513j3M0xwTQ8+xwpfR7oifj4WFj
0FPTbR0fbqjDOv4KR/n2NyAFp5aTWxyG0dy65ymv3Towk0FjdNqiCvQhRKtm
UurP701+c95+gnzW1NCcf53ks3P4buG/k89BPiwsE5xtuI/5cLiI8WtkPG9L
3xabP3/H1l+l7ErOKRY0OMoF53QX35xUOKf0ovKNoLNVFN9d0Dm1uPFv6WzN
jdcqatijvAL1u/eCDLC2GWsA5M/qBG8G4P9kh/o14J94IHIE+A+JiyeSfUFS
ad9pkOc+bUbmsC8bPqFkoj8yaEyQAf0/z3dvAv0d9vl6Qj3U8ZIPgvPYdvQm
H5zHJ0/LE2C/esaPyoJ/9mahZvCvKhjYB3ysul27gU954lKKz4G1wVsg306u
6slpJvmmoiFO5VvXGOWP3Woz/cC/tm3Gf1SI8kfldjP5OXx6xv93OtyT++oJ
5zF07kNmeEfqYvhIncdF0q6REC9LxUwerjw6YgLxLgjzXE7yEPWvCToGeVga
fd8A8pCtyeUq7JcW80pR2K9r429C/6qu7jwtxg35HM3PLQE4Vg0dRoAj8pE6
X0iyxLkQ4j3RM3O+VGg5sF/4VMxIJ8SrtGdmv17k6oWB/umM36j8T8h/+Rr0
nLNDyxvqPNueZ2zAR6BlbdJf8fFSqeCHuFYFlYgDnw8pnGeAT2LQOfOrD15j
Jf2vupts/NDltRHXLw6PIDs3Zt4bW1sxHevneabeYZhne+eJzI/D6HHfy3Pg
H/io+7Yg8T/NaOAC/h9kQlnBP17p9oAZ8Zf9zHoS/P80b//Uvk69fKr8RQ2+
bbfTVu9bLV7OtCx6CxpBux2UHu9IaMZhJnPZzDwK8TINq1U7q4fRJg7z9ib5
zbLPT3FlXWtpxjNfj6CFYgpdO8/34gxZyy/zpJtR5jWPW+7s/ejwmg8Hx0V6
sZ7+iZOxpr1orMnf1TmuC+XJpyh8r+xB53MOLWGV7UUmDr6XetW6kafx3t3E
H8lL+RmBf+howS3wnwz34rs02YZ2hc3rTqN/hqeOf+nn0R9GFat1VILpa7Hw
t9Lcnsla3Nzg8mOW6Aiy5zp4aNH3Nlz3lcbB/S0dz/s+YdZP/Oc4crpelZSR
LXhn5PR4YQue+XoEOdysUyY4iFZGXwA4/RZPKZxP3hHXj5X34A87414qEJ7o
efq6G0e6UYS9h3/zjx7sxZS85VRyL1JhXRyYFvrnc4Jn29V01VEzWYMKaUb5
LzSsp1v44caHWHSJTdqN4KOikRJxwJ8tnRD2d/B/Z98pff3I3swGzDZ2s2rP
vQps/Il5KEx6BN1huK1t3NaDEtruyg0HkH1QOVQy0NaF8uXCcNmSXswjZKO/
cW8fCjrJX1rg3YmyJ3cXbQ3oRm2x9tOVMRHoQF74s3Np79DrKu7Z702dkfXq
Uq75W1pw5vvK+9VbR1C8dHPN9zVl+FX4Y42uvAb8Y5t9vLLeCJo+Xy9yqbMR
r5S+TUM7irG50vLe2StHUOf2M4cXFfZiiUVBI6enOtHBKPl8lQu9//JzoWl4
umH/xUL8tn9AVkOqEWcoyO6dVB9BRtd3XypOf4KF9tvMXdbRjAdsTwyxbx5B
ppyFjsSOjqTpUPYqHUTZz8sXvyM46EmBNIUTKWqoADjT9sfUiP7IWPTGK9A/
IzCV0t+vSnLH3gxyHueF7y0+PYpycs1KR9zz0aFDQ3bD+Bla7nltfvILMifl
NDo87E9HlXbxHPaejUgzTqfW1HoEjYjEr5IyzEXX1M+/JDojycXLjoDOb08N
JoDO+TEWemOmzvhxcja1L6s351H7kuc6xNHS04hTv2pPfpIqxndPy+Rv5hlB
AVuanzmtLsMVi57N/ZHTgM9PDia8IzhqJ+KZmL9dxy+TFqbu2NhC+jCmvwzn
xdPIaOG366jmg9AzsAcfK5gH9lVDw4UEB5lEilE4YmU7KJw/3Rf38Ff5rwqf
oagPPDiE6PBW1ObEjoH03/qnHU9yIf746Wgd5a9+vOcv/f/V9kjGBQd1mGvR
2q26PqJTtVhsxf0FS4j+98tic+RfVqK7i9c9SnVrwPkhTxhMiG4P5ZSqLZM7
Ueka2wOsc1LxwVI7qxupQ8hM0JPuB2sPklsaKT5rYT4SmspaxDj3HeIZZWEO
SOzEih+6hQXRA8zyaYVSVtEQejhXv++4bj2W4JHLCIkeQQxfDtZpR5aivYV9
pcSO6DiDssD+Ilu+Eew71lYrsJ3oxo0r2m9o0KWgw22PJ86Re8DN7Z2PVF72
ogib74yT2V1IJ+rDp9DSHuS7a/DA4wW1yO/APhFBEles+V3+zSQu3qaYE6n0
9WiLBFMtPlCDpcfb5j9b8//vu4O9TknTwOIWnD+tsn96B8kfvc9Dc4JycZLn
XVFO6ybMap77JV1hBL07FULPz1CPhovMbt9UrMFqw7NVz/KNoM/rl/No3O1G
eubRu1a8jUDBn8f6q0j9kQrYcySe8PSXKnB5ktqF3jjo65+q7UGJuuwr+XS6
sVxeSk4QVwoSy+VTL6n8536O4n/MztklQ/opzpG9ww79lP3uBWvop/Ourw1/
GpqLAz+W3OK1bcL35FPWChA9XeYOKpD+iDI+cbBBf1TdKGQB/fGcQiadUFgX
snLztltTE4t2H785wX1wCLFcynrsMmqW43W8tGoP6VOa6Vvlq0mfMiy+9dAp
6VKORh7zgRXfaPjOk5U7zk49QOoFs0fdcTd6+5TZkim8EB2Ldr10a+k7pCYU
uor0cZy8KHsU+vhdOo8B6OMn7ML68rK70Wb2M2VvIgtR5G1trzDWP9+Xu9e2
ppI6iT/4tjBCnXzyWJWqk0oSYtKkTmK6ON1yqJMmA748UCfHD0vtDo99hw6y
v7xGl9CN0OE5w4XrwpHfutdi+fmDSHX9jcPlX3qQdkP+SaH4EJSsG8ZJ6jNi
kFqtDPX5y0K+CqjPs7svdrMdaMNCzB2POxSHULWfm2pCVQ3K7zdzeXi4F/f1
f07es4KcFz1W1/DCXsR4xbaC9FO0doOgFvTTbrVzGPopr7s9HfuBNiRgcf8R
4Mzb66UMOCbHAtcRnnhzaF0c8JQSeru0iPC02lfCRnjiZdET14Bn0byiCOB5
6KCgA1kXhXxe/ATW/bDS9Sasm/eqWpX0d2zHtF0J+vvrdyWV0N8tA9hrh340
oSTp28ovV5VgNavz7nNfD6P7Vo20nidNyF71xRZm1lJ8o3VUc0HzMMo6+EW6
/VsTOpW63kRmZQm+orO2uYr4xy0zj2HKaUJpqQGXN/eW4M7PUdWyxH9sh5rf
dHMPZuAR2vA0qBdt/TIfebZ3oek2UyM6ll7cYX7o63zlPpR3Zs9d75udKLbj
yBPlfW34DdrS5qg0hCZEbTuFqmt+u+8prxjrvYk+I7Y855YRfYL3z0sJIfr8
zn9+VngG8UdL49R8wT/3Tm0D+A/UrdAmfBB+v3YK+DwRtIsEPqV3H9wmfNCp
by59wOe1zII3wOdAu8gtEheam+a8CeLSKGGXg7h+t+6qZwIb+cl8pbO7f9nR
xRWob3xqblL3WxS0JOA1mZ9RxXG9KZifz5yo8IH5+TLT/junyLxzbL3sPt2x
atTvXxxnNzGAzHM8z2ZM9aDrRq+2iyf2ooS9ydvXk3Mb4Vn79djKLvSELrye
5e0gShZ5cu3lvjpUeBvdsJ1oQJssTyu+yBtB/iG2N7vactETfv4cnF6PrUa5
33H8GEG2faYpdZW5v+X/XfuyLlkXjxVelYF161dckYZ1OxkDDQg+nvxUfxDw
x17FegL+Xg+GUIKPel520wBfZ1NbKuCrftKq+DjajBuKJVLnrxlGjB5vequZ
q5GdxDXXE/Kd2EAMzf1IH4Efbb/lqtk/hM7KeWct3dmJk/tkbFctisBXq/Z0
Vw8MITaJh6FD3F246bFQbMzgINq1Qzj0MIn3d/wFTK5oFHxtwEsX/6iUzh9B
hxTGBnIIz9g44QjvkWacEpDSuJrwmeruzDZYVP1bnPF5Y1sJDppmK6oHnPkj
PUOA8yK60IngIF41xQ7AWVxQmvtXODJNWxlJH8djmEEC+njyCp350McL3xhv
JXmCjS84MEOeMAVI0EGeJPDG+pN8wJFyA0qQD06qyQ8gHyJChvNDd3eiy4kR
s1fOGUT5mqyvw+uaUIPxrSZix/fWrpzkIXZTlSU1YJe98JKhW6MHmaN4ybA3
faj/607+nEed6HivxyDJH8yxyrUN8sfh9MR1yJ9SYf7zp8kcHiiwbKsccxfy
LaTbvuVkL/Ld4HbO2LUXs6vKlX6bqEdny3U1UtkG0PyYh7fIvqCxwqkU2Jfy
qv2Rf7Uvv7O7DsTIkbkC8ynyicFcweSdth7mivUh3afIXIH3a4k1wFzxuEaN
EeaKdbtuzSdzAq5YM+QNc0JVwuQhmBMCX4TPzbnchk8bmFwTsXmBZSSC7Lks
hlFadVUDbuzCXaWfdZhEo4kaysWGm4bQioK9rnOce3Cz3pE7kaUlKP7gSMgR
rUEkvTRPhlGqB7/r3q3P/eolCq7SvRBUPIiwv/CEBtmXgEnDHwwfqtECgQOy
Z8i+mGWpSTk792K064Zk2nQ9er/7dpwM+wBasP8DAwu5L9cUm7W+cXuNNhxf
WeFX2Y9uPEr70iPRg58/Ll05XvMSeVg9aRwqGUTGw/OuahJ/NU3kZ0VXgzpc
YhRjx//178n/bvaOE8/YSN5iEd9VopC3LKn8KyBvufGnvDKivx2DpuwWoidP
ZNMCpYp+xLruoR3ZR/TofEoQ7GNEyuIo2Md/ik/AsDOL6Lt2/C6vN5V1dSpO
jFzvxCU8jCTou/Z9GG7Huh/V08yFUvEd7oxqCaH/Pd+/+4/9P/b/2P997PMu
ccfuSGhGCWtzOOA9NkRRaQ28x/678fyP/T/2/9j/99ov52S+JfcytDqRMxHu
ZWsUx7vgXvbvxvM/9v/Y/2P/97F/SV1+5Vh5D3Kq1S+B75NyeucKwPdJf+fP
i9gc3K+04dBlVxyTbF9gkWFezW7zYXQ77ItiaWIzrkzUMn/rW4jFJwxeOFYN
o2uxxR9MshvwnGNs3lqRFfjyoarIYqkR5GuqsqQqtwZH6O7qTv1Wiwu6Oh1P
yI4gi3q9r+4XC7Fov8TWDNlGPPh1s/wh9RHEw2svaVn+BDdqBbA1djbj0D3b
tl7dNILErSxq98nL5OSv/jYwq70Zz3w9gnxUOZSIP6Kf18wK/p3NOyj/2eWK
gI94Lfso/A9LF1L4lntLp+fnVKIsa7lFT2834FjtKZnnW0cQ/dgk+84ltUis
9Yjo5alavCqWPWKPyAg6JjznC4kLdQq6ekFcHgKyVFwSdK8PEh1Qzt69VqDD
x89vnoMOL1bdvDo3uRO5Bcfqpwum4s32riGSqUPo+Y5Pky/vdSFd4+ayCzgW
jfdXfhE7MITyD4cs51/egzL6LgvcXpaPWMXoE8/Neoe23ohUl3XtQaWOTPJs
RSXIKbxj27DGILLSbaF/2U7uyxLPLGLmViCl/Ox2se636C2Xk7+kcS+67h4a
tfpNNWpOekf39fsAev39gzM9sdckRzGaSjUjkzc2Ovxs/chs+7WpzCO96IOK
KKctVxcqrVx2g7mwF100efCtW6wXyTHvChUk/99+zicPpB51IdsDr9QXaPWg
pfceVjmTe71PVibX/thOtL4q9cBdhU50Y17Bbu7ZgyjTzn74cW0Tigk5eKXs
ZD0yafd1cIweQct4jNJcQkvRHSx95HlWDSrZWMex8fQocunYGjpyMx855skV
X3tej36YDmrd+z6CJtC6Qx8rc5GaxZkq89uNaLa/Vpq09Qjy+NZ5KMwwF304
+WhbSv4g3ua1rqf3C9FPu/5Z96MQNBV49siepEuyMayPreH7HXJPHfP4px6g
o52zWIk/OrZz1ZI+4r/C+vQk+A89NHpI8PG8Az7ZgK9xu08d8J/6LI4mfPAW
81t6wMfkFIMa8JnuPyRO+OO3TZI8wF/y+9Q94P+FpfYEiRc/PHDeBeKle3b3
OcSb15O5neiDGx0sFUEf/7U7xkCfHSkflImeWOPjcB3oySIWsxr07FO8SSP6
47wAvkjQXyTSLg70T9vJ9onsF24cC10J+yV9uf0W7NeKj0UOZH9xwKwoJtjf
quu+erC/JqL1d0g+4I83r0VDPnhrzJ4H+aB5/+t0QXsPPlwyfgnyZ7plTi/k
z4rHLqok3/AJfQ8q3yw4eSQg33zQuqUkP7GI67MNkJ8KvK0pkJ8OSzjjbzd3
4YPjLzoreaIRJ/19Ps2NQyjtxhqnb4mdeIfeQdm6Kw/wouMnps2Lfv/zbJLP
jAYFon0wy/MchXYnG1z/4K293RQNTdYvqnWv98F6Ncsr0sOuoZcGHBX6xN4i
waMwNyAGW0btcp2t74uXJi/Kq/9MQxYsL3s6WB7hK4u+5qkFeSNr23M6gp9o
KLt3trbv7Bd4lsXaXYcVH2Mr/3f77TANBUqLLXoaVYBNhC00DY75oBvvMwTi
w2hovXBwv+ScAuzdio7YqJfjB1WJxQv6RxFv+jpn+Jzbnp+fc/v15+fcci6+
2kf8kejTVerg//VaLeUvKs6gStZFi7w8qXX7WRYrw7pSm3UYyLpI9+ItbVjX
xuYHtW7lUJA4iQsFrX9+A+LSHuSk4ip1q6oicaF2w4YciEtW15aK61GrRjPR
DTFqTimCbs2f3lG63R02ziW6oSy2Fkq3vnEuSrcLOtsnZzM5YX6LZVO0Fz5I
qu9R5CFij7BTyigpD8azY688V++NQ3XqvJbpH2joeUqiUOpkJlr22Xhfz+cC
VCayI8PTmIaOZeiFE3+U5DwrE/zvDvNR/rXXI94RfLRLMprCb7aKp/DphY8l
7jhrjTK+StTcGfFFavcP3D1A7B4bBE2z9/ggtQvsqk0d8UjGMk7vFsHRFd61
dS9XKjovjOVf5BUhwx4rF0VDGrp0IG2pPvtjPDT7gcqIUyFaLpW94Is1DX3y
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     StyleBox["\"Re[z]\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Im[z]\"", Large, StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Im[Sigmoid[z]]\"", Large, StripOnInput -> False], 
     TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->600,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-5, 5}, {-5, 5}, {-0.4442649941808352, 0.4440292520488571}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560460354201519*^9, 3.560463703634221*^9, 
  3.5604704960669622`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEnQd8FNX6/vfuboLdq16VTgjpCem9UEIgEEINvUgnCWC59o69Y++9KxYQ
UEEQBaRJkSpIEQRBeu/1/T/vKTNnN7NJiN7fP5/PmSSzuzNnZp7v876nzGyH
QTeXDbt20M3lQwaFFN446Iay8iE3hbS5/kas8vzL5XLvdbn+NTXExX+Ty6UX
9s9+Xphrql7RVKzw0O7du+nQoUPivxn+b4oTK4Lo7bffptDQUHr88cfpvvvu
o1WrVrl+dH5zMJ04cYLOnDljrS8oKKAjR4784P/+RFWDwYMH0/fffy/+m+7/
pgT1ptOnT1N4eDhNnTrVVWFLTVU1+U2LFi2ivLw8UV3steKb9THt3buX/v3v
f5Pb7aaioiJav359xWPSZ+mGG26gPXv2OJ8lvfulS5dSbm4utWvXjoqLi/nU
Vtx9vFjhpVmzZvHB0HfffUerV6+u8L7Oas/m9XnL/02d1J6drs+b/m/OVVs0
pOP6t1gGvGZv+G8jixdiE9jQ8OHD9cZctdTGeUM4k+JsesXSQ8ePH7d26FFL
86K/7r+XDF64SexEvt1pV3/99Rddf/31XLArXnpo48aN1q7c6n2mdCocUKp1
QEHGruS7XK7L1Pl1ElaFTSVbtZbVtiost+y1tqxeu1S96CTEChcvwaqnV9XT
vIwe5z38W71oqreChppa1dYn1tyy19iyMh6z7k6Sr3BiYqy6X+CwB7e1f4/D
qxer/fvhUmEfkdY+/u1/GdRJsfRgbv4L/+2EW5++Sr3dOKeOm/jcfxOhVlVq
O2zC6SA/899EiFWLejXdRAOrFg0cNuEkorH+m6hn1SLEYRNBDpv41H8Tta1a
hNZ0E1dZtQh32ESwwyY+8d/EFVYtIh024ST7j/038W9rEzE13cQl1ibiHDZx
nsMmPvLfxIXWJpw0EO2w2fMd3veh/2bFm8QpTq7pJoKtmqU6bMKJ+w+MTcg4
VovGjx9PTZo0sUpOTg61aNGCCgsLleV4hM20bduW8vPz8R/eheWECROs7b5k
HUxGjWvipQ8++MDyO2z9SrX622+/tVZ/9NFHL1pHnV3Nfb1fYV8ea18XXnih
62q17vzzz9c7cT1vHVGew14udNjLe5Xs5aKLLrL2csEFF1h7ecY6luY12EuB
+DtIJBErV66kSZMm0bp16/h/i9GqavCUVYN8hxpc5FCDd40aaKhef/11EZJk
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
A6G5IDQLhGYahKYbhKaCUDRdeyVTFqJsTv9kajYgmVoOBqVDU6hNaYrKjFMV
XsmIrjaZMrqm29H1fkRXkRFn+WbEGlNutiIbvgPZ8F3Ihu9BdB39WgtHZPlK
6/4mx76mjwJ0ClcPWX9i3zlnYnnC/FRr+MYViF2OX59bjyn4P2DXKc62Ccxu
qEOcfUIsvapXWMZX0QqoG1PXFU+NmzakuOQISgPEyYA4ARDHhQNkANwUJREQ
J6NkRWZSZnia2N2OMd1p19M9aPezCuLne9G+FwDyiygA+gCAPgCgDwLogwD6
EIA+DKCPAOgjbyuQPwDEHyPUjgXEnw+gk+MMkL9FqP2OQUao/QGHMhNlFmj9
qZSBZp7djDNPv7Ly6DIZbhniFapZu86AeKvqX+JnEmwtpbObEV43A+BNg+jQ
BjRh1wPgNWjCru5jTcyLzimh6OwSENsVpTMKP5YvKqujqzcIBsU5oDgXFOeB
4maguDkobgGKWxaAYFDcKh8E+1OcR/HtcpwpLvGlmGNtFmJtLkhGvixILhiW
QoWlnC+nIl9OpU7X+8babjfLdq7MmdMq5sygWrRzH0Y7F/nyKOTL1z0pqbY6
o0yq0cYd7d/G9ac6UA9yIKqrNy5bIRBXhnWtCq3dj75TN8AIngMFZJ05VxaL
HRq67nPtOp6kv22kGsG5EsD1V+yagD8ulikqgRZwM9tUL6YONYirS2EJjSgh
NcqH8KYgnEN0vCI8RRHO+/rrsW60/YlutPNJUP5UD9ozpoek/JmetA/E738O
lIP4AyD+AIg/+BIoB/GHQPzhV0H4GyD8LZR3bcpPfMqUg/BxIPyrQXR6kqJ8
CkL1NEX5DGA8s5RJ5wz6p1Ke0yxpl7F7vorVTohvknPwBeKb8d4Nw+jkxiF0
ZCOavevR7F2LzPm3fnJgdRhtW9qTYvK6U0xuNxRQntMVpQtKZxDfCXR3tAnP
aY84bVMe07yN2E0sU97KoLx1CxAOygubUXxbpjwXlGdJyjtmGJSnWZRn9EoB
5SkiXmf3k1l1c2TV+ZxVD5O9WUUjJemdrVZxmujN4pZxj1t9s2ru0WLSZY9W
RdK5Zfxf7nZGy/iW53xJv/fVFtXszWrl3N1cLdILnWdgaNrdDDmClcJcD/H6
gV7kAzqfJB/Q8R6jlWxxrhJvl9t3RPefZdxTTcZbOzMuH7ODhVMkf9QPdM7D
xYyp2DpUH6VR03oUldSYUtKjKR2wpyQ0pUSGPYxhB/iAPQklFbDzDv98sCtt
fbiEtj1SQjseBfCPdafdT3SnvU/2oL0Af98YAP80gAf4+wH+AYB/AOAfBPiH
XgTsAP8IA/86Aw/Y30Vu/j6A/0gCf/IzAP8lAw/YJwH2b4ZawNN0HNePAvQZ
pXyfngRfhvg5CvZFqtm8oszupl4vgReg/8EPdRhGp9Yhjq9HE3ndNTJ0l9GO
Zb1oy+IeFNu8O8U2A+Rc8koAe1cUgJ4L0HM7AvgOKMX4m4sCvVk7QA7QWyjQ
8yXocQUAvXVLQA7QC5sDcoDeDqAX5VJC+xyAnmmAnm6AnmqAngLQUxDSUyhv
QIpsQg+VoLctT7Wa0F3+m4aQnoaQnuYX0tOp750ypF9zj+q+vg+wP5BlwW53
g+X6wi66wZpb3WAS9pa+sAP0CrB/EGBsqcoZHAbsE3xgrybrwRbrH/qybnWK
VcTcJceDfZ/5UHmv9d8C/ZvZ9rfg2s8zMkO4WBHhwPMjYlkgWOberroI2Jrl
hk3rUuOEehSbEkrpmbGUAZ5TwXMSeI4Hz03BcyJYTm4s+6s3je5Cm+/rQlvu
70p/PVBC2x8C0w93o12PdKc9j4Lpx8D042D6CRTwvf8pMA2+D4Dvg8+A52dR
wPZhcH3klT50lJl+E0y/A57fB88fIoB/Ipk+xUyPB9MTJdNnJyOATx0umeZA
/kMps20H9Nl+PC9XY8Or5dRmwTLfeL52OJ3+bYhk+DLasxJt6eVoSy/pRRvm
llBcy+4U1wI8t+gGrkvANXhuBp7zuqB0QgHPeeA5DyzngeU8jgeg2YVgL1Lz
NkjN5fenVuC5LXhuJ3lOUDwnFmcpnjNsnrunUTrz3DMVPKeC51TKMXjWabpm
uh3SdDS4RZpu8ewTvNNV8JbDUQPAs9X4ZqZ11/ZjYBqN7+ufspm2u7YNpt84
B6Y/dB4v9mW6TVVM4xy/VV2i3eJeH4+Jspmb+z7GpQLI+vFIVQw/BQJZ3+Oo
CLa/ANCP4oCPR1Ixe4NDOI90wPshscynehHhCu+6Eu84zsvrUEg8cvPE+pSQ
FkbZ2XFAPE4gngzEE4B4PBBPUnhvuLMT/XFXZ9p0d2f6854utHV0V9p2X1fa
fn8J7XygG+1+qBvteRiYA/e9wH0fcN8H3PcD9/3A/QBwPwjcDz0NxJ9D6H4R
YftlIP5aXzqmMX9PYn7yE4TtsUD8C+TpGvOvJebEmE9D+Z5xL5WozzRCtuhL
K5U3NiwvlffWrkZZUyqxPo8O/YqW9q/9aM/yvrRzKfBe3JNWz+hCTVv1oLj8
7m5w3g1vi2sBwpt3VaUzCghv1hGlGKW9G4siVx+ArYK1Ajw2XwFeAMBbA/A2
ALzQBjyhCIC3B+DFALxDNgDPpKTOBuDdGPA0AJ4mAM8WgKcC8FRk56kCcA7a
LYdwWzxVZugjdIbuELQBuAzaGXbQHu0btEsRtCXkORbkuoftVmToJuSjNeRv
OkD+biDIC/wgb03PjXWA/MsAkDPevowH+TLuM5UryDdD/07fX1Qp5l4xb0s9
Ba1SyHlCyEzfJ33y1yQa/WqiWF8/9xNPvhQPqLZR/2ZOx4CTuVpJyheql2ry
DHfda2e6wYNqneEE2F6DuNqubDhBHWqSWI8ikxtQckY45cANMlPjKC0hDm4Q
BzdAaSznkKy7pSP9fmtH2ngbHOGOzrT5zs605a4u9NfdXWjbvV1px+gS2nVf
Ce2+H44AZ9j7IBzhITgC3GEf3GH/o3ADuMPBx+EGT9qOcOQFBH3hCHCDN+AG
bytH+ACO8DGCvnAEuME4uMEE5QjfwhG+G267wnQj4M9VPewL1YTPpcoBrqaz
y4bSiWWD6PDyAbRveT/avbQP7fylN21b1JOWTu1E8a17UdOCHnCE7tQ0vxtc
gYM/l66whS5IAGAHLTqidIAtwA6at0cpYi/AKY1p0dbVG0v4QUvpB6KVHiB5
t4J9B5SO2ZTk4wfplNYtHX6QrvwgDX6QRjl90ww/SIUfpAo/4KDfengqFZal
ilZ7x+vSRCKv/aC7SOLTqdftHPQzqN9d/kE/S/S4D38om8oeMfrnrF73PNsT
rP65FqJ/zvKEt7QnyEEy4QnvsSe08vWEjwJ4wmcOnjDO3xPasifIwA+r9p00
VsEWArlCxeBvZ/JW8NczOuXzG8UDtcepL90xoz0fqu99vS6HR0F55besVvy6
VKcWer70gQXiV4AH1XutB9Xzo7bPO+88N1100UXYUHBwsH7Em+OjMbTxmA5x
v1iGWg7Bx1Q/rjaaArXRtK9NoQl1KTypHsWkNqT0rEjKhUtkwSXS4RIp0XGU
GCanf665oZjW/rcDrb+pA224GU5xSyfadGsn+vO2zrT1DjjFnV1o+11daefd
cIp75fcx7rkPTgHH2AvH2AfH2P8QAvGBh3u46tDBx9goYBJjUJ5VRvES0oZX
tVHAJN4dYBvFp0gbPldG8RVMYhJM4lsc5hRlFKLlP1yNzqHMHa563BvAJPA/
P5LjF35s1SA68ssA2r+kH+1a0od2LOpF2xb0pMS2fSmhsA8ltOkFp+hB8QVw
iYJucIsSuAVcIh8u0bILSieUjihwiZbt4RZFKO1Q2uJ/LoUofIMtPMLVw24S
+GUM8RUyhiw0CbRLZFBqSYbhEumU1SvdcIk0anZNmu0Sg1PhEqkic2hTmiqb
/GgedLweTuGTOaTLzAEuITIH0a+XqTKHLJU5ZMvM4VE7c7gOTf4bxvg6xR0V
nKKl7RRvOzjF+w5O8XEAp4BL+DpFIb3qOz7n9hmgq+gQ8kkccBH5NIAKFqHH
5c7JJAK28kUbwOs8v0W1Cex2wTk6xc/i16XVeeq++HvixIm0bNky8TdnGNOm
TXN8npy+U8T0itFimUP1o0KoXkw90a7gi9hAeUXjhDoUllSXolLqU3x6CGXl
RFl+kQG/SI2WXrFqZBH9Nqo9rbmumNZdX0y/3wDP+G9H+uOmjrT55k605RZ4
xq2dadvtXWjHHfCMO7tKv4B37LmnhPbeC88YDc+Af+y/vzsdeKA7HXy4Bx16
FKbxBJsGDOMZtDWet03j+OswjbekaZx8H22NjwZZpnHmS8M0vvExDWUSd7Bh
ILNAWYj3LEbhh2otHEzHFg6gAwv70+5FMIsFveiv+T0oqag/JbXrB9OAYRT2
gmnAMNp0g3GgFMAwCrrCOLh0RoFhtOoAAylGaQ/jgGG0hGHkwyzyYRb5SCda
ceGUogBm4dzECGQYbBYpXbVhZMAwMmAYGcow0mEY6ZTXP10ZRhoMIw2GkWYZ
RutSmVqIPoVr06gTNzes1CJdpRYZ1OdOlVrAMERqAcOQqQUMw0otctTQX67s
U4BhmP2Ed6C5YZqG2acgTOOdiqZh9xP6pRaftHbuU/BLLSoO/XmNoT9hGvao
n+vKqgzD/8kFPuMA2jH0o5fFE85n8Bi9bwtDtly4heH1b2G4fb8dSn4fZZDV
vNAlUDOjpTSNGeqlGn6tgP5KwHfeeUd7TIUnnZO42aSih9zLSzfVj62rvtQG
jRHxOyS+NoUl1kFzhJON+pSU2ZjycmMoLyuOslPj5AAFDmpFWTv6tbyIVqP8
NqI9rR1ZTOuvhYlc14E2Xt+RNt3Qkf78L0zkpk70182dafstMJFbu9Cu25WJ
3AkTuQsmAjPZdw8MBOXAaDYRNE8ekiZymE3kKWkiR59H8+RFZB2v9BcmcoJN
5B1pIqfYRD5B1vGZMpHxQ9FMGaZMoxEMBEYh5gShzFbfETUff/MTUuYNpuPz
B9Ch+f1pz/w+tH0+zGNuD0pufw0KDKSoH0ofSmwHA2nbA0YC82hTAhPh0hVG
0gVGAgMp6IjSAQUG0goG0qodjITFHNeq0NUXyzYwjdYo2jwCGEh7GEgxDES3
STrBQDo7G0imMJAMPwNJp+YD0oWB5AsDSYOBpMFA0oSBtB3B7ZM06oD2SWfR
PkmHiaRTj1v9sw5pIANHZ9Hg+znryBZtE5l15KisQxrIDWPy6MZn7KzDMpGA
HZP5fh2TrarXZ1FFf4WvgQTb5uGbdUgPuUp4yAeVeAjLpEoPMXxEfaFW4I6K
6tmIx7QRl85Dvp1jd1I6TQxq4WspNfwSBd1cufHGG2nHjh3iP5GWiJ3FORjJ
3WodnERMOGgYV0fN7U6Gl1xNTRJrU0RyXYpOrUdx6Q0oLasJtWgWS82y5D2m
S4YV0rLhbWnF8Ha0srQdrSqFn5QV0Zry9rQOvrIevrJhZAf649oOtOk6eMr1
nWjrDZ1o243wlJu60M6bu4gLtfvWrrTntq6093b4yR0o8Jf9d8NT7kVScj97
CpKSR+Anj/eiI+wpT8NTnkNSoj3lNfjJm8pT3oOnfKg8Zexgt5rMd2YCcpNv
hiIvQZmKMh3lR5RZ8rt9aA5e52cOzh5Ih2f3p31zkIvM6UVbZ/eglGLYSXF/
lH6wlb6U1L4PbKUXbAWW0rYbbKUEpStyFFhKmy4onVA6wmJgKa3boxTBWtqh
tIV9FKIIO2F7aV3g6i/tpE1l+Uiu3c0BS0nuAkvpmmnbSXfkI9pSerOlZFCu
aSkD06nloHRYSrplKW2Gs6WkoSGTJo6f8xKrMQNL6a4aMnZekinyErYUkZc8
oPKShzkvyaERj3FekuuQlzSjW1/gbo/mdOfL5nhHS7+u0Hy7K7RCt0clXR6q
IeM8zmE8JsLXThxmF/q5iTGH/3xxhqpwEushVsZ3hVU6tBGws8OpReNlJ/l/
1L0FeFtXtoatK9tJuTOdmcLgLYTZbEu2JVlkgS0zQ5gTB5zYYU6aUsqQlNIk
DXPiGEJlpik35aYM03Z6Z+bOvXf939p7n6MjWXYy8D//8+d5viP7yFYk+ej9
vrX2PvuYGSRnUdYonDytCNDN1SC0iuWxxx6j4uLiMEJEShgWAxfzxDYFuPgt
o4J+P+QKUbP8Aajgd+iq4ZdRnxFXoHb5NQ1O+S0NS/sdpVuuIXuOxMVzo9z0
whgPvTTGS6+MBTbGIoYAHW+MAzaAjrcnABlAx7sTA/T+JCAD6PhoSj59MjWf
Pp0GbEwP0ReNIYkM4OPr2cBGE7ABfTcHyAA+vp+vsLEEMWS5hg0g4zogQ8PG
rcDGHQob66H76lXcGEB/3zaK/o4o8j+7Rolu6f8dHC2Z0SGZIVhxEvtOjqL/
PtlAP52spT+drKavHgErHgEr8uspKVgHKV4EqqFKMKMCzCgDM0pQ04AXXvDC
UwiFoAIoSEM9AXDDD4EXLi/kgdyQi4a4WU4oF0fEEI/DVImt5AU/pwheBMGL
fAtYAV6EJC+SmBdgRUqp1vAALyoMvKhJ03lhi+BFquTF+Ehe+KfIGCJqmZnh
GMK8EDEEvJAxJCMcQ5ZnqhapRcYQ8KJrDMmWMQS80GII1zKLYjVA7pfM6BpD
nKL5EbtFGm58xOLFBgMv5InvD4i1nwxt0ahB0fjI/BGe4xADGqbwQt3h+LH7
uHYd3fD5sqDF2TY78ASiSpc4xYnDT/QcO3IiOdHN1S3i1N1aUaP9u/LKK+mb
b76J1SSNBY8WsT0fwPg1JMHxnwZwXDPicoDjChqU8hsamobaJeP3ql7pQ083
uOjZkW56fpSHXhyNzDEa8IBeHYPMAYi8MRaZAxB5ZzwAAoi8NyFAH0wEQACR
jyfn02lA5NMpBfT51AL6clqIvpoOeDQW0jczCunbmYDHLKiJAQJ4zAc8FpaF
AbISAFkjAfLTDQDIOgEQk3Zlor/di8zxQAP990Mj8Xz/e8tI00oAZKQEyN5R
AAjUOlqCoxPgOAbAHG2g/zpWS98fq6avj1XSZ8fKKLmggZIZHvm1UA0AAnAE
q6BKAATwCJQBIoCHrxgQKQJEAA8v4OHNh4JQAPIBInmQFxABPNxuCQ4PwOHJ
ZWwgXLAADi+CRp6Chy8b4MhSQSMMj8TCDBE0koolPGTjIxXgSAU4UgU4LNUa
PNIi4TFawsM1NjUCHly/8P8p4ZGKwJFqCBwSHlXz0qlmAQcOBQ8RODJprKhh
FDzWWGkK4DHNAI9ZgEeTqGFy9EbIAobH3d3DY1WsGkbrnJ5hzDXGeCvdq8ZU
YnZLw2cydM0acYapUYvVCtKsMDZ6d8EG90pF3ghfOfFfqlVEwjAzOHBv6xnw
kR2Jj24uvqHhY+vWrfTdd9+Ju06fPk1xcXHc+IiFj+Ex8DFX3cOZg9scUhIf
V4vccRn1S7ycBib/moak/oaGp/9OPObjNbn0ZK2Tnq530TPAyHPAyIsjkUGA
kldGAiOjvPTaaCAEenMMMghQcmocMsh4ZBDowwnIIEDJJ5OAEOizyQX0BVDy
5WRgZEqIvp4KjEwDRoCU74CSPzFG5gIj80rp+4VAyWJgZJnCyOpK7Yy//7oF
EeQ2RBDREakTFPkbKPJX6G/cWhUDtw2gCEiydyT9r6DIKKI2Pp+xgf7SXkc/
tNfQN+2V9Hl7OfG7lxyqB0XqoFoIBMmvhqpAkgpQpBwCQQIloAgI4gNBfIVQ
AZQPgR55fsgH5YEkIIjXDZK4IKcZ3+SacrF1IGnYIZuUL0fAg/8KDBAJDyvg
AYCEJEBk8khH8ogFENn80ACSU58WARCnDpBUAZC8SRIgnD74/zQCRDZB0lTF
ogEECUSvWDJVxWKhCatVxbLWqoZesmTFwgC5WTZBmm9XFYsBIIZBWnxggA/T
FQIg/Fy6A8hNPXZRu5lpqQASAx69u0ytjHG+hKxEosKHdhG7Y7zAq5EgexRF
zpofZxdDwjAxM0vOonCJIko31xCRREmgH374gRwOB40fP56uuuoqBk7MYZgR
vBV9AHESxnl8Z576OcbJlUNZl+NlXDnsMjyuwEkicJJ0OQ1IvoIGp/5aJZGr
6JFKBz1WnUtP1DjpqTonPQOsPFePsqYBWGlAMoFeaUAyAVpeHwWsQG+NRjIB
Wk6NRTIZi2QyDlgZj2QCtJyeCKxAn09COhmfT1+MB1omFtDXk0L07VSFlRlI
J7MVVlqAlQWlEiMj6M+rKmV1cz3CyU3VqG5qZFPkDomVvwIrf0GF89f7gZiN
CCqbIWDl7zuBlr0N9L8HGuj/Do+kvx2upz+31tB3rVX0ZWsFfdxaKpCSAqSk
hICUUA2QUg0BJwWVwEoFJJGSGARSAsXASiEUgoAUfxAKQH6gBUjxeSEP0OKG
gJQ8JwSe5PHnaKjPbqrGVvJkmJ+lmBJgpmRJpoQs4AmYUpShAolkiqxkonmi
dT80pqSRfZSBKeM0pqSGmTIVFc30VCqYYWRKml7RMFNEVbNQVjUaU0RVE9UF
mcpdEJ0psbogkUzh7ocxkHAHpFumbJFMWdcDU+7qbrHMg9rC7hvFNYk2tuZp
nVRTT9WMHMONjz6tUsaSXrQjvHqXESxaM1WyRa6s9y9WNQIncWeJkyyJE20i
SNTFULTkwSO4x48fpyeffDLmCExSjDQirhR2sWDCedSBN7l9j1tqt5va8Edo
2+mith0uOoI/zpFtTjq0xdmLf1yOOA+mPwz+reTOsMvoKpaogC6jvuBO/6TL
wJ3LUQldIZ7IsVIbHS+308kKBz1a5aDHq1WkqUVVVOei5+vAHjDopXqwp85D
f6xHpAGD3mhApBmZR2+PAnvAoHfH+On9MeAPGPTROEQaMOj0BEQacOezMUH6
bFSQvhiTT1+OLaBvwJ9vJoM/0wR/JG8SZXG0iIsjJJrlFbK7ohVHN4I/62ro
v26FEGv+Av6I2/XQfXVyMvrmOvCnHvypp//ZDRYdqKefDtTSnw5U01cHKujT
A2WUVtIg2VNYB9VCYE8I7AlVgT9gT0E5xJ2WUkrMLwF/iiGwJwD2BAqgIBSA
fDQ8kAcGeSGwx+eCnFCuGRuHqRaYsUM2iZwAKxu4kegZnq+wUxBGT5JATwaw
k64PAqcDOxnATiawYwF2rMBOFuqg7HrZeLWNZPSkUW4UerwTGT2pEegJAT1F
+pgO0NMim6+MHT3OcENlCTdUMiMaKoyeyRp6rpfoEQ2VKPTMB3oWAj2L1ZhO
rMYrDwrze2BspoQbsK7ux3QUeqIGhXX0PGBAj2EARy1yFi+XsNcHgf2COmax
YEp8RNtVyzFiUjn4Ywwy4TAT3UGJKH0Odl/6xCu8HHky6gSR2Hh5N+ouhkJy
DGaI+aYJ4u6f0QkQ8wReyfFOHx3vgPCKj+HVHzuSR0dZeHeOHvZS5yHoIIR3
sGO/hzoQEtv5ojqAjelCajPg5ojCTSv+MIe3OukA/nj7lY/svddBe/AH332P
3SQ4ZBVP6RxRRmn8uXr4pWDQpeIX+idfRgNTLpex5w/UUZxDR0uAoTIbnQCK
RAyqQgwCip5CFHqmBjEIOHqBUVTrppdr3PRKrYderUMMAo7eqEcMAo7eGQkU
AUfvjfbTB6MRg4Cjj8cCQ8DR6dFQQ4BO1wXos3qgaGQ+fTWuQDVa0unbRm7U
IAY1lchGjaiwFIuWVeiNmj+v5UZNNf20DrpNsugnMOmnO/H1PchGYn5srWTR
w3X0d15QcU8t/bCnmr7Zg3JqTxmllzVQWmkDpRbXSxYVMYeqITCosBIsqoDK
IXCooBQqBo+KwKNCKATlQ+BQvp9GBH1QHuQBj9yQCzxyQrkAj0NCKGAzM4HM
jB8zs8dUDvJkKfpYQR8QqChT0Ce5RBEI9EkTLdwe6GNs5Y5OI+fYWARK7Uqg
JhBoriSQRh8OPnWqnTtySWRLd7yxpauGgBqNBIpu6QoCyZmvTCBtBvxqRR8t
+PCxqNHHWFBFDwFFEKjrqLKRQKqgCjdi+P8wNmJMsZaUiF1NqUufGtoyZjnV
NXIUWXYK//U6SiNTK8ik6BRzior8dJtO8Y24JzUGjxLCPIqnE3L4m04c97Pi
GFDYfZwRBTwdk3gyM5tMvxN06jTQqUPRqV3SSSShNpbC0xGFp1aBJye1bhWJ
iPbhL75XzWIEmmjX3XbaCX/acbuNtt+aQ9tuyaGt63Lo4RuzJbZSFIwZWzw4
fbUBW/0SZTdoUMpl4s04jI/PkVA2tRflUCf4xTHqRJmKUeDX4+DXk1WIUdVO
erYaMQoMexHceqka7IL+WOOh12rBLjDszTrEKDDsVANiFBj2/kjwaxRiFBj2
MQvc+qTWeDXgn9HXKOW+Hh8SUUqWcuDXzOJwKcf8WgB+LS6nH7hDtEJ0iAS/
/nxDtZn+fHM1XuqP6/DtrUDZndUCX/wS//pADf1tUw39dUct/bizhr7dWUlf
7Cyn93cXU0ZFA/BVjxhVJ9CVWlxDqUVAV1EV8FUJAV2FZUBXKVRCSSGgq6AI
CkEFlFgAdBUEID8EbOV7IQ/kBsKArmAuEOaA+AqOw4M2uMjwYA6YlS00oiBb
kiuUJckVspoZX6Yg4pMCWCkAVpaO+JSO+JSmxydrTUrENBgZn1L1yk2ORUmA
ceWmA2xKKgWmpkYBLC0CYBJeshvUoOClVW9jowAW3VZmgDXFAtg9EmDLNYBF
weu6TQaAxYKXcQw79rl6ejR6QBt/knPnYhZr7T0Ua5HA4mdlBBYKH2N+0q/4
80hQHMzxZ1Gv9dhNlhVbgg6uI2cAmMUAsKi70mKgLJ7E2fcnTgYEyXDvCXlp
br41SZhdJPPWUZ8OtKNtMmt1GmjWoWjWHqaZmVFmukLA7IiCWasBZpy1DuMv
e3BzLu1Vsyt3AWY77wLI7gDIblMguxkguymbttyQTZuvz6ZNa7PooTVZtHFV
Fj240koPLrfKF6K1vzXIXTP8UjW54ErqlyQhNzhVQu5gwEqHUKm04hPXVphN
HUUqqCnYPQLYPQY9WZlLT1cCdADec4DdC9CLVQhqlYAdbl+t9tDrNYAdgPdW
LYIagHeqHkENwPugwU8fjgTs6v30UY1fXeQghz4p99GnVX76oiHIQY2+HqOA
NxGaooA3QwFvDkJbiwLeIgBvqQTejwDejygef7yxin64rpJ+uB7f38TE49Mc
5fVR/rKhmv66Sa6G/d3WKvpqawV9sq2UMqsakH3qKb28DsQz0K64CgLpiiqg
cgi0KwTtCksgkC4E0oUKoHxKKgSWCgP42gdS5UFeUM8DuUA8J5QLgXZBO+hm
g3LwPV/oAZwz1QvKJbIKrVJFVmDOAsyxMpHVMpHVMpDVgLsKibvM6jSV1YC7
uhRktZQeUac1qjTc+Q24K1C44/cpAncCdekCdSOBulHLMnTUcbNKw53eBFe4
mxExiiZnAs670zCdWOGOK8boUTO9UoxqUt3c03kHZxqCNwy7R03QMZnPrj0V
p7en5JxgLhnP61IyGi5ypmFPnnoM6CX8I4VjAoMtill9Y3CsB8Sl6Mksjo4/
EsCGz384Li7MxkFNhbRwYOM1zY6DcRfKwIaa8pjGOAPfOhTf2g18a9vLl4Rk
wP2OjijAtRoAd9gAuEPQAfyd99wHuMH+diCpbcfxsQ1JbSsA9zCOmy03Krhd
B7hdC7itVnBbYaUHllno/iUWum+xhe5dmEnrWzLlCx8iXnUvfRyPX1e/pEtp
gChCL5NF6G9on89CB/zgXdBKh/NVuCtEuAPzjoF5J0rBOzDvsXIHPVGOwrQi
l56pAO/AvecrwbsKF70EvVKBcAfuvVbloTeqEe6gt2vAO3Dv3TqEu3qfCnHZ
9GFZHn1ULmuE02U++rw2QF+Bc1+NQnE6GrwD9wTvRK+sKFykMu+awbv5ZfQ9
N8zAux/Aux9QoDLn/oRi9fs1+P56MPCmSvH4P91eSf+1vkqsa/r9pmr6elMF
fbapDJxoIEt1PXhXj3QH1pXXCtallVRTaglYV1IJ3oF1xcy6UgicKyqCCqEC
KB8KQgHIDz75wLw8CJwrdINfLsgJ5jlANTtkY7zl4E0Ygbc4kVWYZeIUl2XG
byPPAW/ypHwHgpykW3plOoJcmG5hsoVPiGCyOUC2XJDNCbK5xkfRbfJZ0G2B
DHJGso2OIps2vKeHOa0db6DbnKghvjDd5DnZHOaYbGtjkg3aGlGFypx2cZc2
WDfziuTlbxTUugLNxJMB/NqywaaeemC8XPBxWbxFtd33RF4iTk42VGg7oJ1c
HZXl4nsoQeOMvXdDksODS+S1PdnzhIHM7pEnxuhE+kHRKZ7bcTxTwE+TgGA8
QxAbLlCPC+iB77/UgWcMdAy7dgPs2iTsRFl6hAXYtRpgdzgMOzOTznQZHdyS
S/s3Omg3jortCHLbblOcQzmwBUFuM4LcpuvBOQS5jQhyD66yCtY9sBycW6o4
tyiTNizIpHtaMujupgy6c1Y63TEjXb56mXyvVPMmJff6g3tgHgLe5eIN2unO
oN2eTNqbl0n7AUAOfIeDKvDhk9kBAB4tRuADAE8CgI+WorItQ+ArQ+ADBJ8t
BwABwRfKAcAyF70MvVKOwAcIvl4JAFYh8FV59S7be9UAYEUevV+aRx8w/Mok
/D4uzkPYC4iu3JfcmWtQABwLTeAqFwCcqgDIVW6TBOCf5kMA4PcA4PcCepX0
3dIy+tMKfL8GULxOLvj8480VYqXJ7++vom8erKTPHyynU5uKyFoH+NUCftV1
lFlZCwDWIOzVSACWAnwlFVA5VAaVUEpJMUBYCAF8xQBfMcBXDPAV+yGftnRx
YmEu5ADc7JANoMuRM/aYbVZTHoKbRTyv5FILAhxCXFmmQB3vk0FO4a4mLdx0
A+pygDobUGcfDdyN0U7hiB3kfN3gjmtX/n+icSdq1uUIckDdWIG6TIG6iUDd
pGtlkOPmG4c54+ijPgRgnNGg4e7eMO6ujdnu74I68dwQ4vC5R4wzXRKz8aa1
/6OnRIW5pxZ9/AeKV8m7hIgZUIJ7+goT50WUrtpqEtoMawU+Bl6vGDVrXOxR
xq6kixeka3uKVUDdlLAZ3cNuiA47DniPg3OPCeHhsY37RwF4vqxqDRDsZAge
DkOwLQxAfglIe1dTqwGAhw0APLRVJr2DLBCQy9p9Dzpo13q7SHsPwzu3wEM3
36joh6S3EUnvwdVWQcAHVoB+SHr3Ienduxj046Q3HwScB/rNZvql0e3T0+i2
qWl06+Q0umVCqnx7+qiu5FX6bC5OgJfSoNTL1PSLy2l7bjrtcGXQLlBxjzeT
9uVxJLTQoYCKhAWIhKCiiISg4gnokRJEwhJEQpDxqVJEQpDxOVDx+TJQsdRJ
L5WCiNAfy9zatIq3K730ThXSIKscKvHSe9AHpQzEPHHQfYRq8XS5nz6vC9KX
qIC/5Nv6fJEM9UoYUNQrYdH6K6HvAMXvFBT/tKycvoO+XYh9SxiKcsHO79eW
iTW9eE3tbzdU0pf3ltMH9xdT9sgGyqqvBxTrkLFqAUUAsRJALK+WQCyrBBQr
oDKTdl3flJIgFIA4R6SU+vAhScHrSMHrSS7xQG6A0QnlIts5IDtkAx2zOexl
m84BEbNwN1RilSq14iEkH1PLLGbkv0wzqJiBgz69MgNcTFcxEGwEF7NEL88Y
Aw2nto3T5pZLLnonyRjIPT0/uBiYlkr5Z2JjdIELLo43cHEyuDhF56IcmJBR
sOvw6ALDXPNYbAQXVTPm1116ebcaenndDUisN+TBe7vNhAY2nk1TL3wi/c5j
aqkt7ugpPMYocVUeTIjAo0KkKc5Y6Uo+muJ1NsbHGogIszFB56Im/uTGSoM9
AFKcOB+nAHkMeD7GkHxcAPJxVOIGSh77B2KiRsnOcP+PSdmhamOOikzKIyAl
R8RWlqLkYQMlD0lKmhmRKJsZkgcASS6N9z7gEKUxR8XNiIib4MIPAZIbEREf
XKMAuRKARES8b6kCJCLi+gUSkHcjJt41N4NubwQgceTfik/CzfhUrMMn5CZ8
Wm7Ep+eGhhTJQ7mk8G8By0tVbLyUhqi+4OacVHrYnkbbHGm0w5lOO10qRnpV
jEQdfTiAGAlothWoGAkdxyf/JAjwKPR4MWIkwPl0CWIkQPlcCYBZrC6lmEmv
liJBlrnpjXIPvVUOYFZAZVCxl04Veeg93L5fkkcfcpLM99KHAS99UuKjz6qR
Inl8txaqYXACmpwoGZrjQvT1RAVNLqdnFNO3SJLfNkOA5neLy+gb3H7Tgu8X
8uoFpXLVk9WlYoHTb++ooK/urqDT95TSGxtClD2qnrJG1oFAdUhptSBSDcro
akCzSgAzvRywLC+DSgHPYqgIRAtBBRDAWYZqKrWMPTYVQTgV7E/FS5TyAIIu
yAmW5gKMDsgOUPKVG5OLQc/kkiwmrtWUggcCMsssjEv8ZxKd6RWZwGWmQmYG
kJmBJwjVpgObaQKb/HNdIiUOBOc4eVawewLQOTEF2EyJwKacYR9GZ+GsNH1I
hO8zolOLlOMMkVJi0yKwOTUKmzMlNk1altZwKSayCVw6TLI7cEHMIQ/+/7vp
A5qZk6ii7zkDJbu0BMNn/qrx2gSdlF1Ov9HLZuNsta6DtuGy+ZwumORymdOk
QmSCTkdRIycwHc0MR9kM7BWRF1nt3efGdAMW4/QFSFVpfIz5CxgyFh+Lyo2y
cqZjmnjE5hgT8RgT8Rj3BY4dZxhGYfHYUYVELUBqaGyVaGwXaPRINOLvomHx
sAGLhxQWD2pY/AMdMGBx/0MO0TXccZc834SxuBG58cFrrSI3PrAKSERuvA+5
8d4lQCKwuB658Z75QCKweFczsuOcdLp9JvIijvCbcbTrSBydTDeMTKbr65Lp
upokWluVJN/R34s38jdibLhvokTkIEZkmkTkxqwU2pSdQltsqbQVqORsuROo
FNkSqNznRbYEKg8Bla2ouI/kI1sClUdDwCRKxpPQo4XAJFD5BILTU8W5qoq+
kl4oRK4sctIrRciVxS56DSHr9VIPvQlovM0qhkJuOlXooXeZk9CHYOUHQQ99
kOehjxEuP61AuGRGMi8roWoVMrXKm1k5QbYevwErv0HA/Aas/Aas/GZBKQ6K
r5uKkVK+acH+BXK1F15V8tt15fTVreX0+R1ldOquQrKNbaCc0fVgJTjZUEvW
+hogqFr8oTKrFCcryqFSqAQ5rwgIK4QKoHyEvwDk5xSIlJJWnoeAmQY/SIMv
sFLLXZAT6MuFHACiHcqBspmOWZxRy7Jwl5Vl4sexYF9ahQVktKimfUZVJj6G
GSBkZo2kpLU2A0V3BmXXp6PwTgMlU+MVkGLA0aTdx3V2fqOEYmimAKO679wI
IMaury0q+/2Cpt9o1WE46+YsvaWojRHHOnNghZpmx4MmIkvKQRI8JvCIv1RU
fR0Bx5g9xVjnN0fQMXxhhfDUOuO0ut7RLcWoM5o5SJ57xrGS/eKUZl6vMcG4
RqtGSUNhHYXHXobGocIjf/dUgZkJGQXGa3QOquT4Dt+Y9dIxTg6YHHsCD6tx
MoExGcc85HseYSoGWHi6GhXjmYq485hfmhZ46GfxL3T6TMmKiaqo1pjIRXUU
Ew/vljw8pHh4UPJQFNIHWAqI+xUQ93FrEUcFD6Pw/8s5kTOigCEy4n3IiPcu
VTBERrxngYIhMuKdc1FINwGIKKhvgd2vw5F+07jkMAzrAcLaJLq2OonWVMir
364qSaSVhSPE2yQvSh4vuMgjLWJIOeVSWWb/gh7ITKYHrcn0EBApkqRNJUkg
chcnSTeSJBC5H+X3QR8nSSsdASLbgchO6FhBDp0oQOldYDNpa0c+XYQUCT1X
mEsvhHLpxZCTXgYmXyl00avA5OvFiJKoR98sctObBW56C3h8h/FYBDxCHxTl
0ft+D70PPH4U9NJpRMnPgcbPq/iv+XlFAEb5RVWAvqxViBxVQF+NlYj8Goj8
GjX410Dk13MgxMcvpxfSVzOL6Ksm7G9G1FyMqLm2lL66oYw+v7mMPri1mF69
LZ9s4+opZ0wdEFmL+rsGiJRzcCy1VUhsFUCkPPsqo7IEvCqGCqEQ+JUPBSE/
18aMxoo85Mg0xOT0Cg9+huWGXNjnhHKBSwdkBwFzwMJsZmFZlmkovrdiv1Uw
UajSIpIjqCgxXZMJJkK1kotWcDGrHmxsyEDhnYHCO13MQbaL8ZeeEmRKROFt
hGUhvLdIpciSOWpyDZ8SgSTJz0GCUyu+MxmaMgReQ9MQHs+WlzyvJiJQqrk1
azbKQeYbYkxB1s7p5qdxR4ypyFFnV8kVZi4I4zK67I4MlNoyMoKY8sKNcUZk
mgxTkRNisVIuICOjZHx0lIyePCNPBI9AZVSdndAdNOMYmiDn0/w9H5M9TV5O
MzA06q7/1EEraKquQIWvNCXofO2l8zWcNeOiqBoviBomKz4JAKuZuWq6KFyE
G8ZsmKyiCN8ri3BOmocUWQ9qKRNIBfcZqvsVVPcpqIpu5QYJ1S03ZyNpWul+
QPU+JMx7lwGoSJjrAdV7FgKoSJh3cWeyGUCdI4F6G47yW1GAr8On4oYxgOmo
JLquQQNqIq2pTKTV5YkA6gjxf6wIDaflweG0zD+MlniHynfzV+KtvFzQtX+S
7GTyDw9V6XN9aiLdm55I92ck0YOWZNpoVWk0R6VRB9Kowu0et0qjeSqNonBv
gzqC2dq16h4FbR8vsNOTIdTrhQ56BrfPFuTS8/mgLfRSAWgL4v4xhDAK4r4O
yr5e4KI38l30Fmj7TgikBW3fY9oWQj5J2g9w+3GhDKOfIYR+xh3PUgihj2kr
Cvj6fPpS0BaayKfFgqzTi3AYfzWrCAH880kh+mJaiL6cgf2zEVaXltBXq/lS
RaX0yQ0l9OZNIXJMaCD7+DrQFqQdA9KOkpTNaqgCzSpBtnJQrkyStqoYKoJC
lF5VAAVBwwDExV96JS9Zm14JylaxPEpukSJdiDwZVU7cnws5IBuImgNlQzzI
nVZhRdJMr7SK9JlexQJpqzMlZWszQdhMMyPWVBUF2QxANoMco6Ex6YBsmhjk
dgKyLkDWjcPJEw1ZHvnRyvRGOXtRgHa2BG0pQFuOQ7O8JV2Hba0xpa7KNHQ5
LeHRH9C20UDb2TFoOz+KttpokJZSxcqA6ioD4hzWqEWGtS4n/5nONPoTMf3a
gNuI+r0tArfGuj1OrZoRcZ6ZfmGB3RK8XQOqKt97dynfwwE1co0uLukPy4mK
sbFrZuLGR8JWsBY/3PF0QY+j36ndE/d3xn7nUfyHR58Q4u84Kh8TXxoobAoj
uDcj2Bwj4oZhHKfD2KySraSxqPlNAsfI1CLnGgaQOlpV7X8w3BZt3Ruu/ZnI
B1XOPYCcux8Zd7/C8T4DjvcCx6Iveo9E8uZ12fTgWivdi3y7Afl2PXB8zyKg
eIFCMY71O5Bvb0e+vQ2fg1u56MdnY91kxjGjOJHW1iXStTUaikfQqtIRtLJY
4nhZ/nBaGgCK84bSYs8QWuQcQgsdg2lBziCTGFM3XSIwwn+Au5KH0z0pI2hD
WiLdl56E4CtpLIJvNgffVNoGGu8AjXc5EXxBYxF8vSL4Svo6qdOPzBtA5oUe
CdrosXwbPQEaP1UAGkPP5jvouaCDng8g9wZz6eV85F4Q+VUQ+DUQ+LWAk94I
ShK/DRKfgt5jCoe89F6eW5BYjDnlI/eW+ugzpnEZVAyVgMb4WrQIQOMvQOMv
QOMvx/GZxKAuaPxlYxF9MSVEn40vEGca82N9xes5LpXXmzm9poTeva6IXr4+
SI5J9WSfUAca15JtbA1oXA0aA3UjK0HjcoCvDBSUpwdnVhdBhaBjAZQPgcLV
OMrSq/NA22ovbzy8cZt+ia0LcirlQg6w2AblgLHZ4G2W5G6VFfssuN8iuJtR
Y2BvXSagy8owM3lNuSj8wV5w1y64m0G5kHNsOrnGQePTEHBTzyrghnCccZu0
eLbWKk0X7K3E8Vg1X577q/OXR+N5wXfFX61Vqo8wxWRveAReOwmvO/auNkyt
vH6zHIXvcelmyV58lnnO+IVn2TuN6A6YtIlHWw3rNMdFneSiwGsOTxy/oMfO
AB9oEfB9LBixQDNDl1cpkl2CrtCN75J1xei7wi/uAH9J+zSbeZvAHD6Lc4NT
uqfxr3UaxzOMezOD4yNz79lC18zQjRPQjdcbrUelzExb5HDut3YahqKYuW0H
PWHmar2FXSoBa8xVvN1n4O1exds9OIb23G+nHTjGtoqxqCx6YI2VNiD+3rMY
rEX0vQvR905kijtwjN8+R7EWx/8t+CzcjM/FOnw+bhifTGsbmLUjaHUVOFsB
zpYNpxXFiLyFiLwFYG0QrPWBtd6htMgF1uaCtbZBND97EP4k8ywDUZjPtwyk
BZmDaBG0OGMQLYGWpg+iZemDaXnaYFoBrUwdTKug1SmDaU3KEFqbPISug65P
GkI3QDcmDqWboHXQzSOG0i0jhoq//B0jhtGdScPp7uQRMlWnqVSdqVI1WL4F
LN9qQ6q2y1S92ylStZzJ7qFDeQjVUFteFnX6wHLohD+HToLnjwaQrINI1vl2
ehocfwYcfzYAlvsd9IIfyRpMfzmIZM3yOek1v2T5m/lgOXjOLH+XeV7gUSx3
ixYvfzQ+KUKyBrs/LfHRp0XgesgnmM48/xw8/xw8/xw8/3w0mA6efwGefzG1
kD7D159iHz/G55PB+eZC+nxREZ1eWkQfLiui11bnU+7kBqgOPK8Fz2vINr4a
PK8Czyspe3QFeF4GnpeStb5EvI2W2kJQNgTlQ0FQ1w8xFjJqmOM14HhmjZs3
Lt44TT/HNpcyax24ZdmgHPhBNqidBVkFwTNrLILembVhgluZ4A2ZAHgmHh8A
N5XrCLePURgfC4yPywDCM4DwdCA8jbysGBMEgtHxWcP4HAPG50mM1yBm1OLw
5zMZ6xbLCV1GlEdPFPinMH6fo+sC29oilurie8aF6Iwz4WNNHNUx3k2M3tRD
jNaX24912WuzfmGOuPD19BK6TKCSPXi9W9E7YnqoxvBWxfFum7pRkfm8GKSO
NVG+B1JfppP6HCb1OXpajiJ1rA6wILVZJ7VJ5GM6KoVXe1Qw++hRndesOMHs
atkPblNdC43Z3LWIYvYhndkyI+vM5rkCitd7DLzerQbJmNmbcPA9sNpC65GR
71qgWI0scjsO6NuaFKtngtWNktU3TU2hG5FzrhuVRKurmdXDJatLwOqiYbQs
NEyy2g9WIxsvcoPVTrDaPpjm5QyiFutAasmEwOp5uJ2fAWZDC9MH0iKwenEa
uA0tTR1Ey6EV4PRKaFUymA2tSRpM10JrwerrEsFt6IYRQ+gmaN1wMHu45PXt
4PUdicPpriSVvVNV9gazN3L2BrM3ZyF75yB729JUA9lHe93I3R4LHYJavYC1
N4s6oKN52XQcOulD+PYjfAPYTwQQvqGn/XZ6xmen5/IAbOhFH2ANaL+M2z/m
5dKrgPXrAcA6CFgD2O8A0u8yqPNxC1Abw/fHBXkifH9aDBVC+P5TBjaDu0y1
RwDOzxry6TPA+fNxBaL1cbo+CMmpOJ9Pwz7A+vT8QvpoYSG9vaSAXljuJ+dU
wHpKHYBdS46J1QB2FYBdCWBXANjlAHYpgF0CaBYDnkUS2HUFUBBgDUA+KA8C
qjNrGdW1brxzmbUuQBeq41lLlrpc3jhM/It2yIY7c6Bs/GAWKG3FrQXfWwSp
LRqp6wWpwelMUDpTkNo22hC4jaQeD1KD1t6J6ZQ3CZqcdsbAzc2OYtXsYFpX
tEhaVyOg1ChSy9M2M8WMf34jR0cRW6f1TWeg9V2xab2yB1prrWZufPCEVzPz
2vSLblvMPTU9NsZuepj0S5yrpoccitO7HPLaKPERWbun658aeh78bsXuefSK
QDeLYzc+bOZ/hOBm6niG7+58puf2R3L3GBfDTpfoLL+AWX6u1v8Qs7+EuFOh
qH7OmakuZjswwY/rVGdJsMcZwW6SVP+VnPnQHu5HtxtG+pjsrVo/erfqfhjI
Lrofm8NkV1Rnh73fbrKLhvT2O3PoYRyUPNLHDWnufNyBA/12xJPbcPDfig/C
LbNAdHw41uGDctM0EH1KCt2AyvW6sUm0pg7puxxELx2mE31JPmgeAM1B9IWe
IbQARJ/vANGRwFuyBlIzaN6cMYCaMweI25b0ATQPRJ+fBrJDi1IH0mJoCYi+
NAWJHFqeDLpDK0HzVdCaRJAdWjtiMF0HXT8cZIduHAa6QxrZRRJPVEkcZBdJ
HGR/MANUtySbtJlj2+1ptNMhU/heF6gOHXRb6DB0xG2ldg9iOHTMixgOsj+S
l0OP+RDDQfcnQfSnQPRn8uz0rNdOz3vs9ILXQS+B5i95HPQKU90nqS5aKiD7
OyD7KSZ7MJLqegwH0U+D4qd5Sm8+qB6AChTpOZ6D7J/WBunThqAgO0fvjyvl
mMbp0YjpjQV0uilEHzWH6L25BfTK4iC5ptXLqQI/B9hrAPYqJPFKgL0CYEfa
HVcKsJcA7MWUNaoIYC8Ub6EVad8Cs7DU+8FfAL3OC3kEvN04mi11gHk9y8ky
4xdyeePgjR0/YK23QTlQNqJ2Fv+exRTQU7e1PgP/VwZlj8ygnFEZXVK3AyzP
Bcud47l5kq6SN3guWJ5OPsg/JZ0CU9OieJ4WwXOteV3WbOD5gkiej0SwGaVO
wef5Z/x2CqZfK5keMU0XPG/qgeeLDau7aisanYnnMVcvko0U2Ue5PGYf5Uyz
LCKGDSNw7o9eIC2uZ4jH6RDfL0/UElt+m8Kn3jPIz+kCcq2Hwg3tbjrW5zK8
4xjeCczus2iZyIXQTG/rw4M/NzRKOp/MD3M7nrFtmLp7TEzd7YnbZkPf5Cg3
qzmEJzCrIyK4LESY1qWyb8K0bo/sV7cZRhCZ2IcNI4hM7AN6vzrcO9GIvfsB
O/OadvEprutttA2HGb/fPIR430qL6J3cjsP51iZFauTvdY2K1MjfN3CPemIy
XTc+mdY0JNLKyuG0rBi5u3BomNQ+5G4vSO0CqXMVqbNBaeTvuSD03HRJanEL
taSB2ND81AG0AKRemAJqQ4uTQW1oWRKIDa1IBLGhVSMG0WpQes1wUBtaOwzU
hq4fOlgQe92wcA6/c4TK4SD2hpRERehi2mRRGTxbZHDaYU+nXbnptCc3g/Y5
M+kAdMiJHO5CDoc63Mjh0HEPcrg3hx4FsR/PQw4HtZ/C7dMg9TMg9XNuEBt6
weWIoLVomgQkrd+GTnH+DrjpXa+7S9OE58Z9UghxHgepT/u9dDqYJ+nNJAex
T1cF6DRy8WkQ+xPcflSiTuHltaamF9BHMwvovZn59EZTkJ6ZL+9zTa8BtauR
xauA7EoguwLILgeyy4DsEiC7GMguArILgeyQxDUe39rgh3xkafACyR7Ija9Z
Luzn2V3WBifeWWtDLuRgYV9Wg503Nt7k4POT1ZANZUEWBjXvzjR5EfrB6lGK
1Rqnx8oM3B2nvZMVq8Fp/1Swelo6OJ0OTqdF5m5Dl6RUdUkqtGa31iXRc7di
tTj1zCLOsuXnIAYf1cBjo+F0s38Lq7dEDTxGrbx91x41X/hyvVnCT+nef2HM
MfLaHjqrzf8wp+O6uajYYRFjtSVx9aD9lIZq0dPugmmRsc+LgelY/RIjpqPu
utg4ztiJ/xTUZuGJavxWPRS8kSJ780awmin+mJCpd8xJH0cVus3hlB0fzW6J
7kIgO4zujrZw2G4Dvo8Ywjaj+9Du7tG9l9G9MYxuxvaue220A0fZ1tslusVQ
4woL3Y3UcXtzGt0MbK/Dp+Cm6UA2sH0DAvb1k5Lp+gkS29eOTqKV1SNoWQnC
dQGQHRxCi/wK2W4gGwF7nh3IzpHInoNgPSe9P81J7S+QPReonpOGr/F9M5Dd
kgJ0QwuSB9BCaFES0A0tSRxIS6FlIwbSciB7xXDgG1o9bBCtga4FrtdC10E3
DJVBm/+Utw0fxkFboXoI3ZuKkJ2mQnZmMm2yptAWoHtrThptB7p3At27HQja
0H4HgnZuJh3OtVCbE9iGjroQtN0I2tAjHgRt4PtxL4K2B+h22+gZl42edQLd
Lsa2XWD7ZW+u7HVDb/hd9CbQ/TZwfYrR7ZPYjgjaPg99xKd/ANmfBHn1x0/8
XtNF/DV9wjgHnj8p99MnwPYndQGx4sKHIS99VAWcj5cXgXl/apDemRKgF2f7
zORurEHB6J5eDWpXkXNaJahdQblTy0HtMlC7hOwTi0HtIlC7kHLGhkDtfFA7
KKk90gflQR7IDUCPdPHGyfl5ZC6gy3KwwOGRdnw8skbakJmhUTlKPDsvexTP
Xs4eacH9mbjNFPsyTG7KAattYLV9bDhT89HonJBBLrDaDVZ7emI1VNAIzUjv
0ifptqu9KJLXo1WuHse8jjgdTk0UUT2TWVG8brlDLnGlTV+OyWvtqgmGxYmN
l1sxLkxsWOhc5uqLw60SNYOZ35p/bJzy/Jj5mtslxhl4PB7Jp7vF/dOcFqOS
cRGn/cpTOESfpCulLzzLMJ0oKf2kuqvrxep7GS9WL/6pnzknxqNdoIM9gbl+
DuP8PMb5eaKNImfwcStFSWAdm8fkDL54HeaygUJHpUxnh3V4SQfPlNaw3qGw
3o5U3oZU3ga0HzkIpAPth/cD60D7IaD94C4gHWg/sANIB9r3Ae37tgDpQPue
TcA6UvnuB+0S7Ujl3BXnF/LAtVbagIP7LgSU2+amCZwLlCOBXz8ZKOcEDpyv
HZdE145JolV1I2h5OXAeQvr2D6YFecC4BxgHylscg8Rjzs0Cyi0DqAkobwK6
m1L6m5njpksF2eekgOhQc3J/aoHmJYHq0IJEUB1aPGIALQHJlw4H0aHlwwbS
CmjlUARyaPUQUB1aO0QGcdBcAny4yOB3JyKDJ4kMTvcB6A+kJ9FGAF3kcABd
5HAAfYcNORzaYwPM7Rl00A6YOyx0BGrPtVIndMyJHO5CDgfQH3UD5oD6EwD5
kwD5004APddGz0EM8xfdCuZa1wR6E0B/CzB/h4EOgJ+Khjn0IU8LzM+jjwNe
M33s542PLxP9cdArpgt+DKB/DKB/XM1DKR+EvKbf8NJh9NG4AL0/MSAu1PPq
RB89OctL7hnVUBWYXgmiV4Do5SB6GYheBqKXgujFIHoRiF4IoodA9AIQPUjZ
YwKC5lmj8iBE5VFuso5y4ZYzd9YoJ29ymd2jHKCyXQkMH81n6GWPzkGSyR6d
DVazspSskAV5W4xMjs4wM8ZNeRLkgHju+AwFcQl0NyDumaxADoj7AHE/IB6Y
roVuDeLpgHg6Qne6PsNEa5CUt2gglw2SWq3hrUK3XN7GQuPU0jYydFsjT87T
Tsy7pQeQc+NbvwRO7MvfXK+flxLZ+I6+Zpa4ULix4a1fuvNi8b5EX7rTOFS5
+UxDldqVblSnxEBylbr3y6nUxil9Z5u5AdboVQhVn9ss8neCODlPm1ciVhkU
44tat0QAHkgUlD/6bKjHpvcISXmPIjpfJ5ivxLdq1Spas2YNbdu2jV588UV5
aax4mjdvHt1+++1i9z333CN9oDfNmjWLGhoaxCNG/UjMBevP1c3gHDaDc3Uz
OFeZAZuAwRB4RzCBzSBONwNDe+aocIWj3FY/yhO7o9oznUI+Idme6eRxUnaE
EXACn3QCqO2IV7jBEbhB6yG4ARzhMBzhEBzhIBzh4B44ARxh/064ARxhn3AE
uAHC/l64wp7NDuEKux+CI2y0SydYY6X1+ITcuSCdbsWn6aZGOMAU0H+ScoDx
cADunCPUr2pIpOWVw2lJ0VBa6GcHGETzXAjyuYOo2T5QPN4cKxwgoz/NRoCf
ndKPZif3wwuCH5h+wY5ATcn9hOYkwQ6glkRYATR/RH9aAAtYOBwBH1o8DHYA
LR0KO4CWD4EVQKsGD6TVgwep8J6k92JUqKe72AcSR9D65BF0b4oK9uky2G+2
qGAPL9iRnUa7cuAD0L6cDDpgy6RDUKsdwR7qcCDY58IHoBNOBHv4wWMueAH0
pDOHngL/n3Eg2OP2eafyAU8uvQIveDVP+sAbPvgAvOAdP7zA65I+ENWPYR/g
k3FgAXhN8AAzfeTzIJzxTMWPYATcePkQ4vnkHxR5xRqS74/20zujffQGIvhz
E7i37ZlZhTjvmVEJVcAIymECZVApjKAERlAMIyii3CmFMIIQjKCAbBP4zJwA
jMAv3sDs0TCA0R4IST5rNCf5rNG52M1ysED8Mdwgzx5joxyhHBYgP4YXF84Z
kwXSs6xKFihT4j8Ugf/cCWwB6eRChmf884HTE/7zgf8C4D80S1nAbFhAU7re
d+m2R74kygJWGiwgelkL47nZhtXN2ALm3Rk+tWZxDzNVjGs5RvRftnbtlce4
9Lthhkr46meiAteu2nzR2c357qb/orVe1AmH/3B87xUR37WzsKMmcDPveVpK
QiTvzRrvnwkJ5kOS/mfRj1Ee4FJ3ffPNN1RYWEhms9mUoFox/fv3F1de/NOf
/mRqEj93Ph04cIBKSkr09B8MBrULxfPP0ddff639jEm7GrThZ0yxLqx2rmFf
J1483EF6xAXsEedE9u+FLZzDtqA5wlG89UeNjiDKAzaUE345zioVT51cK3Qe
FRufcAR2UFQLHR1K7ZopyBLhSKtXni2Gv6XmCfvcdGAvPGGPSy018J+0V/gB
fGCLQ/jB7k12ul/NkbkDZfAtTbISWDtRsR8VwBpUAKtHJdKqkYm0omYELSkd
Rgvzh9A8D7N/oGD/3Byk/6wB4nCdjQpgFtg/KwlK7Cd9AOyHF5hpdlI/04XU
hN1zoLkj+lEz0N8yHDYAzR8GG4AWDcVDQUuGwAKgZYMHmLS4r1UBN8gqQNDr
VuBfa8dzKbCeS4FkVQqkqVIgE/hHKbDVmkrbs9JoJ7Q7K532ZqfT/myUAjko
BaAjNpQCUKcdpYAD+IcFnMxFKQAbeDwXpYADFmDPoaeN+Nfa8bCAV2EBr8EC
3sgD/mEBb+v4dzH+zcx/vBitrQMHwAEA6JvFl7+nD/3Yyct9FMplP4RdlHjp
/VofnarziRWG+dIQj493kXdWJVRB3pnlIH85yoAy0L8U5C+BikH/ItC/EPQP
gf4FoH8+6B8A/f0oBXyS/GM9YLqb8e7kDZ+Enz3WAWewszjFj7XxhrvsOWOz
ySaUxQLdx1rxWbONtZB9HCtTCrS3j0snx/h0ED/dSHt2q8npJqc4VPJAex9o
75+uiN8j7dMR+NP1zg2fzlM530D8xUz82J12uSKHtXviGxYxMob+6LmJMTs4
G3vu4Nyud3DchqsqeKKnlovraeMd5pzPb40kvbpEblx4cFRv4FzUbQNnV3QD
R81CNE4gF8wPnpH5CfocFn5Oivl4lqR4bxKIF3NX+NN5SXes7xWD9bG6OnLp
brUyT2/as2cPXX311bosFoQKm408Hg8KYtm4GTFihHiIc845hyZMmCDSfXt7
u+D4U089RTt37qSRI0dSYmIiXwjPcRYPfbF6ZoFAgLxeL18kD9/hp/B7+/bt
I+O/rj8TZ/wZZRm9qKioiNauXav/3ty5c2n58uVxPd8d63J850WYUH7YhC5k
E+odw4R6y0bV0S4mFB9uUlGnFA9FKwfiMQ5VnHQc5cXyYUCmbGE/7bCftjZ5
pMJ6qBU1yeFDEGoS9p+D8J8Dwn/ctB91yb7dLtq7y0l7UJvsQW2yZ3su7d4G
bXXQLvjRLnjRTnjRTtQm9yC28aweHmjgjtS18KE1qEFWj5YetLJhBK2oG0FL
y4fRotAQmp83mOY64D821B7woNkW6UMzU/vRTNQaMxP70swRfYUfsRfNSg57
0ywY0GyoaTgMCWoe1o9aoHlDYUbQgiH9aSG0aHB/Odc9jZYOGkDLoZWyFKFr
4Ufa0DD/lW4ZPpRuGxFVjiSpciSVy5Ekegh+tBl+9DBKkm0WlCMWlCPWNNpj
RTmShXIEOpwNL4LaclCO2FCOQMft8CJ40iMOlCPQ4/bssBc5uC2lxhjc0ov+
CL3mRTkCP3oTfvQ2+xF8SC9HIttSOA4/FNUHGxOXJx/Ai9iD+O3kn32/LI9O
VebRmxUeerXMzZctAjLyZleYfgkfKofK4EWlqEdK4EXF8KIicjUWwotC8KIC
eFE+vAiaEiTHZD+8yAcvyoMXecV7lzPORdnjcnGbC8cZ5+AN1xw542yoVlg5
LNjOuGzewIDs4628sfAG1YZjfAY+csJ34DlOeI4LFYZ7smoyocJQnoPnDdcx
2SgAzwnCc/JnGnwHnlPUZPAdVWUYG02xRnjFBTFWWGL6jjy1NCvm4nnccIq+
WPviGBdsDzecHJENp82xG053RDec9kb6DixHVha96SG9v5QXfWFUk3ZB9q1d
zy5V/abzeuo36X2mg9whiTxxSb9SsvSbc2Ku9MTHBh+CxBNlIl2nU5s7KfOh
vu98vct0PluPmY6dlf8MM/pPvOg1mdRCAID679TuDz74QN998uRJrYfEV2V2
Op301ltvmeyxH+FXavfhw4f13Zs3b+4Ve/f5yhyGDRtGGzdu1M1h9erVVFFR
Edfz3QnqQQ2vj78+P4Z99Obtz9g+EiLtQ4xznBu2j3ijfVDnIwEYBTe2OkV5
2YkyBubB4jaWOCmg45h+NW4598qUxW4iixmonQVHaYOjHIGjHDkCN4GjHIaj
HDoEN4GjHISjHICj7Iej7ENFsw+Osnc3XASOshtusgtusgtushNusgNusgPV
zY7NdtoOR9kORxHD1jNTRWdrDSqaVahmVo6Ei9SPoOW1cJKq4bSoeCjNDwym
ZtdAasqGi1hRxWT0F899BlxjRlJfahzel2ZA7CjsIjOTwu4yE/tnQbOH9aUm
OMicoShvoOYhcJQh/VT5YqFFg/CYA/vTEmgZbGTFINnV4rLmuiFyqJr/YDwn
tNuyJkWVNekoa2AlWzJQ1mSgrMlMpZ2ZsBHYyT5LOh2wZtAhqDULNpKFsiYb
ZU0OyhpYyQkbbAT28Sj0uE3ayFMobZ4x2AiXNS/DSthGXoVeh5W8Cet4Ky/K
RqK6Wmwfi8VVd/AVqk7e976QPNudf/4UyqJTKGveLPaI5WteLHSKa43nNZVD
ZTAVVikspQR2UgwVwVIKYSkhWEoBLCUflhKEpQRgKX5Yig+Wkkf2SV5Yikfa
yXgnxFYy3gFXsI23QzaD4Cbjs2EcrCyyT+D1C+wT2FAmwFAcE9hQJnD7iltW
uROloUSYCgzFOzU9spBpjFHIzJaFjDAVGErJ3K6mIqbr92Aq45SpTFxtFaai
rVY9PcJUsnVT4Xc6wlTujjKUe7tevDJWC2udOuGKC5rbdrgiRjGMLaz79qtV
qiNGK4SbmNlO5LXhEtTFKSOcxGQOX24kPrKO0ZpX53YpZXgOp1bDKDsxxSxd
DFZikr0q0Z0SbxDfCsEzeisfgWmIwoU/sJfyV71juEesTlWEe8Tp7D///PNN
f1D7uMwwm8307bffmrSB6Oeee46WLVsmvrPF+N3L1L5zzz1XcwZ93MK4z2gX
/Pvav5UrV1JBQUFcz3cLuxCv58IYDtGLt5ewQ8QbZjnJWarhoRBRXzwePJ8N
I0HVG534c3VKs2BT4PlOsAwuM5ASOnT5YRU8MNIhVrzhh2xH7dEOp2jnDhhs
Am+v0Shaj+QZjMJLB2EUB6KMYi+MYg9KD2EUKD127YBJwCx2wCx2wCy2wyy2
bbHTVpjFVhjFwxttYjCcB8FXj02kFSg1lqPUWFYznJZWwyRKh9H8/CHU7BlE
TSg3Zmb2pxnp/YRBNLJBwAimD+tDjdAMNgVlEPgarx3WgZc2AwYxcyjMApo9
pK/0hd9QyyBUHdD8gf1oAbRwgPSJpQMjyw1tAFx4xLChMcuNDVxuJKtyAz7x
UBrKjTSUG+kptD091XSxWsUhzHvVxnKC92D+K27wHnrd46Q3wPy3wPm3PS5j
G0vnPbhuFrXDNeKP9oEa4DYi/z2FfbaKU/lusUrDq0GXOPP36ZCDTlY7yDen
jHxNpVAJsF8MFQH9hcB+CCoA+vOB/nygPwj0B4B+PunLB/TnkWMKyu/JHqDf
Ld4W24RcCMWDbYKdNzbmOXev7BMA+omsLBbgPtHKGwvuy51ogTLJOUnIDMRn
mMk9KcMU6FI+5IH0vukG2v8D5YNxoEI7jbZhMUgP2o9StB/bLe2zdNrP1C7F
cnPkyjT8RofXTbTJSxQL0ofLh9VRJUR0++rm6PbVTqZ91/aVvCaBKCNE/cC0
10AfXg1BJ72R8nFRCyVGThLtLUoHvWelwV5vUp0N5I2VAr8pzPZ4vT8VrxpS
XDNoTSqx71fMepQLz51NuTA0NvAvuOACHfgAvWhRrVu3Tgf+008/Tbm5uTGB
z7+rAf+8887rAnzjPg34o0ePFsMf2r/p06fzEHlcz3fHGuC4iLfidDJREvyS
gW/uEfjxOvDjGPggfBfqy+VBe1HHSSPwBfSZ+YC72PCQh5jjCuDHURuAP5yO
4Og5AuC3AviHURkcBvAPAfgHURkcAPD3HwDoAfx9AP5eAH8PgL8bsN8lYO/U
Yb8dsN8mYO8QsH8YlcGWh2y0GcDnse7VYxJpGfeUAPklqAYWVwyjBaEh1JIH
0DsG0kxLf2pMBdyTIQB9+vA+NG1oH5o+BLDH1zMk5EV1wN+zATQO7SPhfgXN
HoyiYFBfmgPNHdiXmgH4eQMAe2gBtGhA14KA+0o8d/XGMxQE90IoCORY2MX0
5z//WSQCHGxvAN9veSS6Y3R94hnQpqvEX/P9bnDNv8KDGNxEetnjEOcfPB6y
k39uKVQCbLOKge0iILuQvLNDwHYBkJ0PBYFt0LPRD2z7gO08YNsLZHsgN7Dt
Arad4sXZJwLX9ol23vCSl/ZJOVA2OSZl4zvHJLA6dxJY7ZyMjWsyA9s92QJl
IoILmUFnADtPbKammwp6zOOh2QZKx8jjxsEFpjRfNN5I6DHLLTqlJyhKhy+W
ZaR0dgSlm7UroKrzYgSlo68kw3SOJrRo9ORGXFVm3VZn5DRRlcvvjtHs0Si9
MUxpelgbOxZZ3Kd3deQkFIb0hbQzeljBOLQQ3eWRnR650IEpTuVzA7JNccbZ
QiY5XShe7/AoxerwhLmdwIyOU3mc4Y2vxHfn8vbnitvHn+t5WtGQ7rktOXsu
HT16lIz/vv/+e3rssceYu/Tkk0/Sd999Z/qZ+NkL+GvRwH/xxRfFkMP27dtp
/fr1dMstt9C1115LCxcupJqaGsHu5uZm2UZKEL/G/81dd93FbST64YcfTL9Q
T+mTTz4RdcHf//53fXSa207aK4j/N9jG3XffbbwKLPl8Pn4ecT3fHcs2fmbY
p1UM8by9VJwdATt4IrwmW6/YViLueDx4HluJSXgJW4mwE2kqsipQpkId3Hvq
EIUEe0m7LtQQ7eLEZRgKtWniofQ2LiTYVwYLX2llX4EOw1sOwVcORviKR/jK
XvjKHs1XUEjsgrfshLfsQCGxA96yfRs8Bd6yFb7yMAqJh3G7BT6zGdq0NZdW
jYav1MJPKofRonJ4SvFQagkMpjmugTQrG56S1o+mJcJLlJ9MHXwNTYOmD+0j
uk1cUMBP4lQtOn0wdkMzBvWhmdDsgX2oCX4yB5o7AL4CtfTvS/P7cwHRr0sB
sWZweOzcUECIS4P/jq1DntsSH93dEYPWPGYN0+Dh6/8UHvKuMgj2Fy4VuGzg
ltHTLhs9ErKRv7kEJlEMFZF/TiGMIkR5TQUwigIYRT6MIgiTCEB+GIUPRpEH
o/DCKDwwCjdMwgU5YRS5MAqHNIpJNrJPtsETJufAEyZn48k6J2eTc0oWuaSQ
2qdYceB7pljJM9VK3qkWoTyhTPJN5ampvmmwDP+0DB4GyMBnuLssz8dcjCxv
ZpsAQLoYxWJpFKNhFGM4ysMoxsEoJsAoJq5ClI9hFDOUUcxWRjH31hx5OR1l
FPr0UzwV3SgQ59koroVJrN0oDAIvChaBoyTCJKLifGQDx60bBUd6rYFjnG6q
jTtv5SvoiEV8uemfIMebj0ZcCNuQ4sVUI3aGQHi+qTlitV6tZ6N7Q7z0BpXk
25+Ss4pEo6ZXJP3jjQmdSc+Qwq3pt2J75jaNoj/PgDpwQID7l7/8pWyUg0G/
//3vqby8nJ599ll6/PHHqba2lhISEszq7iFDhtD1118v/OD5558XQ8vx8fHa
3ZdccgktWLBA8Putt96iqVOn0kUXXSTv7k2/+MUvaMyYMfTxxx+L52LEdy/l
JnwaA7d1uC8ze/Zs6tOnD/3Hf/yHGKVOT0+nCy+8UPwOP8mPPvpIc4KXX36Z
Ghsb6Te/+Y263Fec6DSVlZUBVzt0F3nttdfEWLh8QvJZX3XVVfrcqH/za44z
vmb1JM4VVVFpaal4Hfzo8+fPF1NzeSJXfX09/fTTT6a4s3xh8g04nzZt2sQ/
ow+g4CmIP+5nn30mXvDgwYPFq+DnoT228f1PULbMNtu7d2/9cfDy5KvAffg5
fT8Lb6Y+UexsbZdPSXG73TwZQbzZlZWV9H//939xPd8dy3Z/3qPtmtl1tWVA
jD5rNpzB0slrUHc+pp0Xj6/Ed/GGMq5Dui1+DVuz8Nxe1H7S6LnCd9l2UbeJ
jZg8cAR8OHLUx+KLW8F4L6FWGO9hzXRR0B2E8R6A8e6H8e6H8e5DQbd3P5uu
m3bDdHex6eJ2J7QD+3bAkLfvgyFt2+9BWNoKn34YyNqCfLvlkJc2A12bgK6l
NcNpYRn8thR+mz+E5ngG0SzbAGrM6EdT4bdTh11DU4dcQ1MG4RaaNuQak26y
qq6bpnkx7m+EZsBsZ0KzBsB4oab+fWgOzLa5X1+ah9sF/WUht9hQyBkmCKhr
0cBktYPYMHSCA4a3f9B9ldtsbMJcv70GX+W23PMuFF/OHOoMZFOgpYgCzaxC
+GsI/oqCZ04+/DUIfw3AX/3wVx+8NQ/ik0Q88Fc3/NVFzunQNCflTsuFvzrg
r3b2VvyNcqfYUGNNgbO6pmLjnsozez1Ts6Es8k6TyhOysoVa8Sp80y0wTyE8
QmB6Jg6e4PRMlFyZlN+YwTKj9uJzQPI1b42qwPjI664C00+mXmQwV2GsmQZj
tUhjXQNjhblOXZslzLVRmeusHsxVHxnhKmx92FxX3S8rML3ygm7kYfbujNXQ
KxPmusttGB2J7JdtNPTLtBm82/DBCI+nJwhz3aUqr8Xy2sSmiNOotQ6ZvHhI
xEr4Ua2yyOWIRLFlWOszetRDn5ob9tl4ZazKaMV3v4lhtrFaZIOl2Wrn5AHs
EZDOzMxkw4tXRc2kSZP0u1pbW7XdTU1N+m4UVtruW2+91bg7FtR7qf/3ww8/
1H8UzkY33XQTzwA2K+b/+OOPNHHiRG3Ihc3fpI2fc7Wn/WpxcbFmNzwHWdvN
9swu+Lvf/U7Y9fDhw/lHxUg8W9m/8eXFiyqT/yPeDa/UdrOlspUOGjSILSw+
9rNPUAbMfq3tvvzyy8Uzu//++2nUqFFigOi3v/2tSQstv/rVr8SsOu1f1/c3
XpyRoz0eCkftf2cz2717t5ic19HRcbZWeYH69b/97W907NgxeuSRR+h//ud/
EmLvjjVJ7pLurPFXbI0XsjUmwPzye7MDCu9LYOOLU77X8WiU75lEsSltT8rM
vocfZeeD6bG4pXGcT77ikvOIUcoJW4UTtsIJe9HhDjggnPDgkTzpgtD+I3lm
2tfGC/DvBRP2KO2Gdol5ODvb+Fd3gBnboW0sBPSt3M0RffcjfGIvZ3Y+TYxP
FGADnFc4hOb6BtFsxwCaYUHBmdyXpgy5Rk3JYNOLl83MYbIIhRma2fmQL9gb
pw6ED0LTB8AHoZn9r6FZ8L7Z/eCB0BxIemC4makVnasGD5SH0SDd+Mzsb/gf
tbln70rFid3n611HLiq5gflHlywqn3WiqHTKUe3gvEIKtoTYbpoLTBfCAPNh
fkEoAAP0wwB9MMA8GKAX5ueB3DBAF8zPCeXCAHmupnOa3dRLFJWuaTZyK3mE
YH7e6djkTc8WFpcNZZGvkScI+BtRYgYarfjlYKMVBaMFxiZVIITCMiQ2M+F8
oVkZpmIqnJUR2W+cI12vFG5X1hLleAvSI85i1OYAsOONX6G5ncXgdtaw292A
UvLGbN3x5ijHa1GOt+AOW0zHW2FwPC4nrze4nXA66JatTro1wu1chglm3HeM
LCeje48PRfUeue8YOXXZH55BpmaR8XtkqCTDZocj5WDsOQByIb4nIs5MlCNC
Zra7885sd72VtZ14XtaWuDX9mrfmsywwledpZGYn0NiIQkej2G233abv/vLL
LzVk8kwubffrr7+u7T5y5Ii+G0VW914XL3qKGtefeOIJra5BEUF2u13cxQUf
nyyjPTqbh+EpartvvvlmsevQoUN8Nv35/45nrlkun53PJRnvTkpKYqjrXU1t
HpzX6+35KSaIfqu2G6ZF7777rnrjEyK8LzU1lb0iZuXXS/383//+d600FlU2
QoNe3fFJpGqSnf40z2Rjf4hxbPzCsC/CmC6LNKZebEy9VWnGjdAOKT6K+bwt
0f9sF/1Prr/adMkajC+3cVyaj5ijLU0IP8wWBPPp9NEh6KDSAWg/L6m+r4Pv
3oswugfarbQLH9Wd3AHa0e7ja95xXuVRgzaph9WZaJuFR8mzkB7Cp/xBGNDc
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
ZBh/fgTyTQeWhToBYofz5MWRIWSJhCyRkvlYdAWPZ2QBKdRlbjp+2rz0SM+/
a1kyI9VC6LIIuiyBLo4sBdF8c8gHjP9nIhXKKotT2UJMnMozqVAhmCkyqVAp
mCkDM5qYnmolUqFKMLNqA4gBM1VgZm2d7Dyu1oGZ9WBmA5ipATO1YKbOlQo1
gZlmMNNiUiEyswlvezcx2zQxBEbtQuyWnpU97P7dy/Jmn3yKoYvaf0jHAWYc
BwSZgyDgoEHGS14suEIfoIs6clzH0eNPhKujJ56w1JET5IbXAR55VvC/pQ7J
4dgTPpMLueDx3Jk6kgFZTpd2qAlc8ukOHIYzndZWADT+3Oa/DRpXbebeIeL7
Tm12T8fQ1Mt/+lyqmpoaGWD74osvbEQ4E6C2tla1traGhOU/Q6Q0XXj06ZkA
+Il3O4VYGInxkhgPj7oHAP97/OL4KI6P4ODHlW/UMwFWmJAObUJTSmhKeAA5
+OWLWge4+5Aky5H8hrNnTZYjMwKaBzLHGejp2lmO0xFA0S6A3l2eoN5NJUDv
LgNA7y6NwyGF2c47yXHqnSWx6p3FseptxiJmNm8vjOUB6c07CwHQuwsJ0HsL
YxDRatRCAoQjmFnIAm30oig1eqETSM8XMGORhGa+dmgc/h+3IIIj+TKO7/Yn
aQmdgT5IjoL8UTMRs1IR7CPS/lAf4BOl5mdAoQWZUXjqF6IQWwiFHIFyo1RK
XrQ9ap9erHf2zSqNVdkAiDlOHnKcfABUAICKKolPQgA+5cQHOU4lAFoFgFYD
oCoAtLYW+ACgdfUanxrgU9vMvebqWvp5vqfqAVAD3lqNAKgZtVgLAGoFQBvx
Vm/DR2DzduCDT81WfIK2mRxn5x4HH9Kj5dkv8uw/KOLYAXP4wT/ELp3D9OaI
eHPkmDhjh1cdO4H05vjJwfjq5GC8dkdPPkGDGB6ByGuSn0NGIpMEef8Sg3C1
q4fbX5L53CWZf6zND9M2PRPVlQHdHZgBmVWCbJVc00flxPdOx9HCHY3sv49f
N7inj1ohdiP7rpPvfKdjhvaEsOXXIWwJl6OeZO6aWyT91V2dNMYjeYwQY8cY
WW8kILEJIzMWlTGj87DFDq+T1phByWLWU2RGU+Nxl1M6x2mx+6qhDMOjqfG6
qcF1mZLvuKihNBahMX8qkBFoIlzcvJ+WgCA3o5bHmx7KUalxatQyDs2PWkp4
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
1Uct6x45qx1JCeac5Qp+Bpp9K216QuZHYaHyI9x2ZyL9uGOR/slJmP6mI5Hu
pkhdKRIsaoMrq9tC+mMZhXgZCJl8yZmryNTJKckkafrmOhXYOkknttcM7ef5
T35l+JzzX8UkfLu9FLFZ25Ig2Sr9yqXSjKKeakahBKQo6IGrZxQkqBn5Ombm
o2ybmScHnpI/EyrNzI1l0BKhaWZ2jJqRhcg0AZqmg6XpaTGyJ+u05ewkmr4c
NM1YDpW0QGmkaXZalD4jVfqecfSyK9piRuQVfb4lFtkzfhZlRKjFGcYhRAod
yjIOZRuHcpidQSKPcSjPOITIRoKUgwTJ7VA+LUKiVFiC4q0sXpWuQOEGjyoq
YRE8Wg2Pqqp7qWpYtA5FG5/0GlOw1SMaGuhQ30CHEG2wqJ1Dm+EQLNoFi3Yj
QdoDi/bBov2w6AAsOrgHDsGiI7Do6AE4hM/j8UNwCBadxGf2g6MwCBadwef5
LD7jH57SBp1HXIBDF0ECMiPJiOgQDFJXmApdvQCHrl54Bk/51YvPqCs6kEng
aM7f/ujiM151+SLvcvnCM7ZQeCptp7wkyqJQlvDk1cnUhxIeIUpnUN91eLJL
ujvMlNwueUIUb6Fguqtdp7RUb07l5ujkPsMjcD8f/ybquks6YAnMDss33R8U
JjUbd+61gzXJ/V/jkYDzS0ehv9UZksfjsieM9oTTnnDaE65WtfGnVbYlBmR+
lTIh+r/cGzlJw+fumOYPM9OlPV7npDCvEYelGaCRygw3c2cvj169WOP6c9eo
2ezinmpWcU880bOKYM6swh44FLA8m1UQr2bn24HUZzbMuQfHWDU7V8/t4/+z
c2LUbJgziwF3ZsGcmRkxsn/CzPRon5qZRnBmgZ5Z4oucpyXecFbznHQJXJqb
HilnV3jZ52yx/NLJTh/xJhQ2S9tjI0lPOiIj12CTZ7DJ19jkFhhsCg02iEKA
U1QMcIBOaRnAATrlFT3USqCzajWqMqCzFuisW4/EB8lPLcDhn+/Hpq9qATit
AKcdNohtAGc7wHGw2QZsAM4+gLN/J7ABOAcBziGAcwTgHN0PbADOcYBzAuCc
BDgfHAE2AOcMPqBnTwAbfHDP4wN8AdhcxIf60hkgA2w+4uf+ioBwFdnLx4Dj
EzASxqOlPr74TDf18SVbmauXnvGpK5e4w9RHl54hOnYIPtDmIm+jPhdNXKA/
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
lxiPlCMPIg1CEaqPr7rkYlGe86gAi4rUIvLRGiwqwaL1q6xFm7BoSwK5yFm0
k3y021hELsogF2HRIbUom1yERcfVIupkHtkoH4/yGeoKGOoKGepWvymX1pCN
8OjaBmvRzS04hEW3sejuDoY5LLq/295j+BEWPd7f01gkh3DoMAYd6W09Okoo
OtZHTaIIRSe0dJQ7aS44cKq/OqS/6nI5j39j3z47wKmEQheoS6oSCl0ZaFX6
DnWuD7Iq3QpRKTDmDbY5KahSEKUwh5LdDGVSkkPp/zEoPQQlAxLJ6M6dvoDU
x4J0Q0HqBUg95eIVC9KZ893kpGJEIjqsaegIGB0CI11x0mN0O8Fo+yuyHohK
gGjNZsWovcWI8cxgRDPo6qxilObgSTIXIUowwMCMxOcqMq20cIRn/3PWlmzv
Ym6tZEVWK3Mlt+VaOi7E6MMyf0u98hodEqPlfVw/XytHu2mlggVTeu66gay1
UmUKrXyGq3DlysQnd7DennFvKkzJ8oZCZcSdt6rjQZFb9wo9h8yxFaZshZvx
r5I5zyMtpPSeJ+WtVjm0Tv4IWi428S/g8e+Uqt/am8ln6wYoe1adnlujI7JX
dtmB30UEyOJ3qlSOKpWjSuU4pZS7IrvglG22FIR4xY/ur4xXueqVNUty+Gmp
V9nOqyznVSZeZeKVP02ruW4bkAy8Sccr3S6QlmQWmixXEZIabwOTqVh996qm
fJ/SEcvPu7LQKTfJapXPn5Cngqlk+nG0yliu540g0lIztYUpVXruHlglUymL
FaogVulURlRTuyIebqzKohjYdHaM1ivwm6GNoOQqTPJx6w+Sv6SFMasw2ppV
jFlrl5OdVrY2Zm2MJTth1lY1iwy1A7N2pTDLpZKdMGs/Zh30W7OOZGEWbh3L
Zp7Lwa2c1+UkdTqXDJVLhqLOF5ChishQa8hQJcxz6zFrE2ZtITth1j3M+mEX
ucmZ9XgfVmGWHOhlzTqkNzpCLh6OmKuIHgWqY6b0A8eNVieIUCd4wp00F3/i
8e+9t7ELrc4McHJFWrk0S10aGJTr2qCgXDcHlTPhDbZZypPrcdk8Zeiyx/3+
3l6UhTJe3Vev+lmvCFE3b6lXveXKNWvVOSa40+e62emNye3wsU6yn9Cku5t2
MrVt070EhKYN20pZZZX0vSC5Jc4pjMqgk41ThCGcMqeex+pVJQMX243xe/dx
WJbR0ny/Q+/jwLNd7+Wg988xd9EJ03fxUf2UpX7dGWi+shRZ5srn5qK+NO6K
nJBLWeaahOVTwPAp1nqV19q7yJHPwFXJvgJ4VvFOnfUMVd561nPGqohQq7y1
qx+X6inx6tQzSvW8Pv7aznXZgXuHeB/9tT5GWL1yHGH6O7UqsDk+BDNDmH4G
P7dcQleuOWqaq5jlmqWqXH6QiOaVky3HfAtykC2nMFDhJoL9xgyDOfmtoK2V
+euUt1xHWw605fCTyuYnlu23vGU52jIdbX5HW4ZZeko326bSASotwVW87lqK
a4aemsB0ydzUSl2N0iEQebBMTTO+JZKUeDuHz83i8/wMh+kxenxPV6NIX5rC
FjVW2MJUNt2oiW9pi41rujgVpWfu+aP4o6MsbA43MwGa5OVww7RwKQC230tB
CGyrlxLEYghiCtsKghiwbQK2LXEWtu2JBLEkC9seYNuXRhADt4MZwAZuh/0M
htSxTGCjTmQRyLIIZNTpbAIZdS6XQJbfQS4VAltxR/lubSe5AW63NhLGwO3u
NmDb0V0e7mYg3NNDZK89G1/291LcsOKg3tsS3ygy2GEtWDvS1xJ31Fw45Zgm
suO6THWiv/mdLkycQLKTA5xsSHY20smGZBcHBmW7Oigo240Q2bwp8e5gm8c8
2exRQvVscFgZ1P7NgvZwAKD1N6Ddvt3XYsY0eEWDF5Ogbkw4rWvop7rIUV0/
141ShK49+8GMCXDbLjDbDmZAth7ISghda5kAi90ddvPXtbOgrQkBrdCBludA
yzagyXKDWAuJVrFSvft8LdL11oXJzd0F1RbwkrvAuw2i9wk8uxfrF6Qa6gLQ
6Y0X9M/LcDe50T/frxsO7c1vlLsYy12APHdFcx0pIzzwTFILJS/fHvqKM8Ex
3syXBa3NUOnw0RUuta+KahfxbNpFlNLu6dCdfkbo/rUc3iL08Tm9Dmq4/i7c
/s6DzkjX3ua1Dbr3ynPPLCW6PyrXpmmlzciX68lXEiofD7oClqv/1dwivahK
LtjlFoaUWRhU8Z63IS5EvDzEy+N7n4t4uVY8/Vx+cD8x6mXzg81CvCx+3pmp
WqiHeH6eFxlJzc3RwnQzfKabNJeuC/JxegF3HTrJWWmkucqSpnPlCl3ysslN
E5x5/crnq34puQqhfohP8QNeOuClLrHpzYC3iN9TVjsnHpVB+TXNwZ2u+IFe
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
HPm8jRwFg+NgcHIEAHwJAKMAYPQrcuErABgLAON4/R//hlz5BgAmUZMB4Fsy
wFQAAILrMwAACG7OBgAg+H5eF7mzsKvcA4D7MTT/qp7y2ADQxwKQ6QAo4Mm9
eoBBwDX+WtP4egynhFpHbeDzNvL5m/vI4600/vZevw++3v/WvJ53GuoWAr6w
CwE9afLeNHlfXQj4yiX6kCZ/d5JL9DT5x6FN7l7PA6nevJ6bJn9ODDNPNuU/
VNzDjyrs4YjQHv6xV+NKpncjQjvZbgGmj18I7WOzM60ktI/NbmDveGrpfB5u
Xp/d4qE9cOGz/fyLZ+1nbefSV1gxjZznGlmvs9KMRJarN2NMtJcN0MsF6Ggf
2s3uhfrJjO66OM7r4qmuk3nxXjGRTp5gX6WXfWU7eKl28EjTxRI9oo7p4CXa
wbxcR7kupoNl8Se1ZdGQ2rLwY+qjWrLgw1qy6APeT0V9wOdT0dTSD/hzqRhT
NPby9/XhvXqAvvxdXuaple9Qb9eTVVTsW3T1YO3o+EH1fb+yHf0WHf02Hf0u
Hf1+Y8n9iFn/E7I8Hb2Wjl5PR2/4gq4e1lI2fd5StgxtKVs/bSXbPmkl2z/R
zt4xpBWpfeeQVrKL2v1xK9ljiq6m9n3UWvZTB/j9wSGt5fAnreUI3X2U7j4+
lI4e1k5OD6ejR9DRI+noUa/KpTF09Fevy+Wv6ehxvKxPoKPp7GuT6Gg6+/qU
jnKDzr4xnY6ms7+f2VnuzO0i9+jo+0u6y0M6+vEqujmht+toujOTLs3laV5A
Nxdpal89QJcHV+srvCvdhVLCp66nkTfSyFt6yeNtPX1/0o74rTbEH8vpl/I2
XLn2eqy/mIWvJ9bWN+j9BJ98TaxSppMKbD1v99HbF7nAhlL7MqhXaSu0q19r
2oa+AlZya+ymf4rKOfDn+2nwhPLQvsmyF93Idxdno2ckl0ibaxumOaCYhnFN
k+OuvWGbp4n4y2seXgITynv5o2liQ5pm5WSetJNoHF4GY3gZXPZ1XbcF828k
+kue+DTNEpom6gvbMIuH0hSf0Sw0zSKaZuGQYMPM/4B6v5bMe49f3+V91MJ3
+Twq6l3+HCr63Tq8mr6rGfodfXi7rq+FxLxFNw3mH0GtGEQNpIOoVZF00IB6
Ete/numcxEh7WZv0txpK5ruNJft9sjDdU0j3FNM9Jfp6OJQO+qyFbPy0hWz6
pKVsHkIHfUQHfdhStn3QUrZTO6idWu+3lF3v00HUHq33Wsleah91gLcPftBa
Dn1I99BJx4bQPZ/SPZ/RPZ+3l7PD6J7hdM8Iumfka3JpFN0zhtfEr+geuuja
OLqHLvruG7qHLroxuaPcpItuTe0kt+meu3O7yg8Lu8kDuudRTE8R7Z541z1p
rntyeILn64XfCvrrvKvZWA8Vrtb9W3TMOjpmAx2zuadv2F/WJ+aN/6ucj78e
2jbu3OLKgfUfswnbF25fhVyArBISKl3z+F4ovU+xvDwZeg6eFyDDAyeleC9C
dlD0PVMH5VfUQfSNr5p9ufEu7ZXQVLLjm5oOygztoOgnO+iJ4Ej3rPRecrzu
4aUnhpeeZeN4qRnLSw0vPdEj65j/QxQvNYs/r206Z9FnIV3zMR1C58z/0Oua
mjLv3Zoy952aMudtfn2Lt6n5b/F51MK3+FpqMRU1mG4arNNm9OA63qC7bABd
RC3vT/WrKyv61XVD8K8kaUADSR3Ea85bvObQObl0TgGdU0TnrNHXnU/pniHN
Zf3HzWXDR3TPh3TPBy1k8/stZOu7LWTbOzp5b+fx32XHO3TO23SOq93Unrda
yl5qH7/f/w6d824rOUQXHaGDjn3YRk58TOd8Qud8SucMpXM+f8V8cy4Np3O+
5LVnJJ0zmpFyDJ0zlvqazhn/plyfQOfQQbcmdZTbdM7dmV3kBzrnwUK6ZkkP
Ee2cla5zklzn+GmRbL1mYq7pGl1zztdgqQfa6Zo1dE1JL3m0vqdveDkd8Pc/
0jXlbUUpr2siAl1T6Sld4+2FC8xUlYLn65c+kyG8vDNXA11jDuxGBNvkF4E2
eeJqoJmhbdLCtIm5NnJSoD/0ciLxepp9XFPfP+m172yTLC/TJAtLN4k2SKk8
Ftoc+vIygew0ngb5muZgwloyiifxl/alRRtEX1IWfsKTfQj1ca3AdWnphdlv
1ZDZg2vIrEHUwBpu/SZCFkYS0yLpCSoqkleWqAF1fK9KVH/+5H682PDrUn5d
ptW3jsT0qSPL+9AZvaledc1PNLZ3PUnoW1+S6ZA0OsRPh2TTIXl0SCEdsnoI
ry0fN5O1HzWTkg+by7r36ZL36JJ3m8umd5rL5reby5a3msvWQc1l26AWsp3a
oTWwheykdlG7tSJbyF5+3TeIDhncUg7SLYfplCPv0iHv0yEftJVTH9EhH9Mh
n7ws5z91HfI5ry9f0CF0ypUv6RA65dpoOoRO+W7sm3KDTrk5voN8P6mT3Jna
We7RIffndpOHdMjjJXRHDN2xku6IpzuSaIFUKqOffX3J0k7RlNZXHufTGoW0
RjGtsban7ItvP6KcZ/rf/Uh3hD9jd5gTe36u3VG5ou54IfRCPuV3Qpg2gk40
9roV3j738MAByJB1RneSo69ZYHx5WmfkhnZGcrOQC+M29S6Kq9fENY2RudI2
R7q7sujTmmNlSFMsD2kK88qhjTGWp+5oilePqBE8s4fRGENtY8zn1WLeh7wq
fFDT/D1zeLWYw6vF7LdrmA7R7pg5kIp8SWYMoPq/JDOpWf35ODWnH19LzacW
9OMVhVrUjz+/L9VHlzF61/b9oyzhzWi6JZpuWdqbzqFielE96R5qRY865qcd
R+ck0jkpdE46nZNJ5+TQOfnaOR/SOR80leL3m8qa9+ied+met5vJ+reayYbB
zWTjoGayaWAz2RzZTLb21wlxG49/lO39mssOaqerXX2by25qT386Z0AL2U8X
HRxI5wxuJUffonPeaSsn3msnp95nnvmwvZz7yN5y6uInr8ilz16Vy0OpYXQO
HXR1BJ1DB3038g25PuoNuUn3fD++o9yhc+5NpWtmdpWHdM7jhbyuaOcss51j
jjok0j3Jfe3ri+keOiaHjsmjYwromNU95dGaHiOfsWN+E9IxEYGR5Y1y+sSc
FPIz7ZMq9lpXZrWOf1J4OWfBmUNwlV3HFASv8+KLeOpVD3wRpXdRh14Cwdfk
qe2S95R2ySrTLn59DVnpwpZrF30t0e9vsF3suBI73QYtfQ3xXj+WTQi2iQlZ
X9EmY2gTXkeivqRVhvM05nVk4Wf2NURbZQ6hava7PP3fqWH+nlm8iMykTWYM
pD1ok+m0x/R+VN/qMq1PdZlOzehD21Czer8ks3vXkLnUvN60DbWgd80wWdCz
pu9fZGGPmrKoRy1Z3KuWRPWuLUt60TbU0p5Uj9qyjIrpXluWd7PtEtujLtNx
PQyuL6m0TAYtk0XL5NIyBdoy7/Ktfoe2eZu2eauprB3cVEoGNZV1kU1l/YCm
sqF/U9nUj5bp20y29KFtejeTbb2akcp6NfP9QXb0aiY7ezaTXdTuXnRM7+ay
j8450I/XmgGt5HBkazk6iBlmMB3zdls5/U47Ofteezn/vuuYj+iYIa/I5U/o
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
kR5JZ9Ii6WwKmE+OogtJUXQxMYo6E6LoUnwUXYmLomvg/dfxyPyJFvpNUgy9
AuZ/l4LMnxpH19Pi6Q/pCfSWNYFu2BLpbXsSvetMpvcy5HNp388G8zmpdDs3
jT4qAO+jkPnB/KcTwfxUp2D+KzDP+36zOIf+tjyXvl6VS1+tzaUv1ufSZxty
6ZONueJm5k+2Z9Mnz2fR9dWpG7stbrrn/YcGf3fqCh6FfO2TPVe676Us/LXU
fY1YZQmHO9GX9b4kX1Q/HVz4dPCMuMvq2eKIMuNL+te60d9Sr9CP2l/Qj7qn
AfTXq/Qz+cj2NaCfya9WyK8C+VVHutIfKeqeYtQ9x5h+1D1FK+XV1IOLZbbf
O0+S/zyy/A5k+e2TQD1qnS3jQL2odbjGl3UOH3MVqF9p9aGVIH4liF+R6k0r
QPyKZFgSLNGbVsFWJ0IBsLVsCT60Lt6H1ieA/sRhtAkK2JIM+qGAHSmgPxX0
pw2nvVbQb0PWhx2wBtLB9EA6BONoHkkPomOg/wToPwX6y5j+XNQ+OVBAdjhV
Z4ZTbUY41TmhAAcUYIcCbBHUnB5BLWkR1JoaQW0pEdSeDPqTQH9iJJ2Lj6Tz
cZF0ITaSOmOj6DKTH6eQj2z/G2T7V5JAPuh/DfRfTwX5oF8l/08g/x1HEt10
SvJvZaTQ+5kp9EFWKn2Yk0YfK/T/dRzqnkmoe6Y5xX5fzZG1/1eg/8tlOfTF
yhz6bDVoX5NDH6/Npo83ZImv9n28NcO0uVvEu8f+R91hr3w855bmXbiblY+0
Obl3iA8XxKpNncL4YpC+0k+TKyNL1pW1413AK7m+Hby3i4dZyFur2ttS1AmG
8uUVLwV6AA/omyT0yq1FCyToSPHVAnQAfswiQK8E6BWHUODvQ4G/C2XNdqR4
gH6cQV+nL2uQ4lHWMOS7FMi3T0Ehj9S+ZTwAR2rfNAqpnUuZPC7kUb6gjOFz
XAG4lwPs5QB7OcBeljiUliXA4mFxQ2k5bAVsVRxgZ4v1pjUx3rQ2FqDHIdXH
A/QEgJ7oS9uSAHoyQIftBux70wA60v1+/DzAlgrYUyToR5HqiwF6CUA/nYUC
H1aeCdgzwqjKGUbV9jCqsQF2K2BPD6eGtHBqTA2nppRwak4Kp5bEcGpLAOjx
EdQRF0FnYiPorCWCzscActhlgH41rktJgxT/KiD/PSB/HZC/AcjfRIr/oxWQ
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
TiZZ/sn0X/8PJlmPKQ==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binary linear logistic regression ", "Section",
 CellChangeTimes->{{3.560432494432562*^9, 3.56043252360868*^9}}],

Cell[CellGroupData[{

Cell["Example data", "Subsection",
 CellChangeTimes->{{3.560359371203454*^9, 3.5603593779996843`*^9}}],

Cell["There are two data files in CSV format.", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$dataFile1", "=", 
   RowBox[{"ToFileName", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"NotebookDirectory", "[", "]"}], "}"}], ",", 
     "\"\<ex2data1.txt\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$dataFile2", "=", 
   RowBox[{"ToFileName", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"NotebookDirectory", "[", "]"}], "}"}], ",", 
     "\"\<ex2data2.txt\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.560345149052356*^9, 3.560345175583057*^9}, {
  3.560360498399116*^9, 3.5603605032567797`*^9}}],

Cell["The data files happen to be CSV file, import as so.", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, 
   3.5603605694392233`*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"$dataFile1", ",", "\"\<CSV\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"$dataFile2", ",", "\"\<CSV\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5603605557756453`*^9, 3.560360573992013*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ex1", "=", 
   RowBox[{"data1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560359438431135*^9, 3.560359448467271*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "ex1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", "=", 
   RowBox[{"data1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.560345258061064*^9, 3.560345306481882*^9}, {
  3.5603457301135683`*^9, 3.560345762534699*^9}, {3.56034580475298*^9, 
  3.560345880945651*^9}, {3.5603463562067633`*^9, 3.560346356446744*^9}, {
  3.5603485218250437`*^9, 3.5603485224573507`*^9}, {3.5603535380815268`*^9, 
  3.560353565626176*^9}, {3.560359436638604*^9, 3.560359437683859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X1", "//", "RandomChoice"}]], "Input",
 CellChangeTimes->{{3.560354021493826*^9, 3.560354032216298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "80.1901807509566`", ",", "44.82162893218353`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5604637038171663`*^9, 3.5604704967882757`*^9}]
}, Open  ]],

Cell["Visualize the feature matrix X:", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.5603606909698544`*^9, 
  3.560360702400217*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"X1", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5603542068892717`*^9, 3.5603542288805943`*^9}, {
  3.5603591977771797`*^9, 3.560359256136169*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztkvs71Ikex4daBy2No1oiuU2USeQyMy7jbWYw5uY7HLdySy6hsnaJrMts
Umy0UykTWnJ/wibrHGXbGs6OEJlQSac1SbXbareLbeyijh/Oj+dP6PM87+f1
y/uH1+d53haxqYHxmiQSacVy4paTs24XvWrYBWQ1RZ2o5uNl61Od+Vk3vPx+
InVaxw7aB11SFV/Qkev+bXRWjw9iMgXpekW6qAve8A+9Oh6k1ibkIqUtjLUp
Ky5RBFitTw+2GBZhJHyqJ1okhoNW41clYTTUFO0IOTlFwuHGg3qHBmnQ9iLb
f+dJgWesR9G2Y36olO3sNjnFQ01TrjikwgQTZJYB05yHtYZWgoY8Af4+sLG6
YYU3EmJMV+zN8Qc7lJVEGVn2Dfr0mcYDJtJrRyzKpzwhsfvSZEjCx1zQK1V2
gQhrKkeNtw1wIUsJUBxO9kZ/udmA6Ufu+Kkn5E7Abh9kmCs458NZ8NgfcsIs
nomJTr+5xWYP7KnsPn/mlh8kxbLuuJbfvDxuZ41n/rod186oT54wF2LvtUYv
w3I6JHOntxX3+kD0xj4oIoeH9b3Oo9YW3mC938karxDCX/vQ22YSH4t/LTXb
TvshrKt15nyUJ1S5PvdpTluA1tSGp1nauFzGLYxgb0KZrkRAvcDA+A+m79cl
syFKMdaYpwmQGf/RE/cuNp5vVm5Y1PSHvVpenKLJQf/srowoNRNKt8f+yudk
VG2R7L5HYqJ/RnzndrQLlPZXjvdZUkE7bLgqNJGH2mlrIp8rgorq2kY288fs
L/zRHe3A14LJ6K1RQqjEzmVxoZqQvx+0fT6//H/vH6JHE2aQ2rUwDVLYmCVv
GGpgCUDYivtv33QBDp1pCB3+GHLGwUtV37uB3iei283TEHOp2jExwx0OjMMJ
9M5NaJYqiypX0uGsv+bi42YBTjR+yx4tFaDd0XTXZi0msttebjcy4COd0Ss+
+g3wQl0BK1sOyBtvZ3GuWiCmfmzuVCYVEzoPyi8sOKMoyW04/5Yl5I/+qCpM
00FEXLlR1lE2bLdUxDi1uIL0cXZ1RJ0tqsqSaBlkAgTT1clGvRUjaoWGiQcf
AUf1dXlX/OHw4q7Wpc82Q7owhX16Xhiafp7f9pk3mu/tDj0rswbPyPW0gZBA
Zz3FpjZWjHzr0h35SwEYvPpwrHyUDTnBNS696Yyo4P17RNF8EPqlq4kINuYf
hP1bNkxHzUqPxPpuGuCyPYE1aA/zTWmzi92rEfYqMDpVSYdyjeDToEJHkA07
h2QHmGivz32tTxFhX2TXrZYXvmhuXDjyZw8TYWxaVPEjL8hHY4dOb/GEwIb8
a8R9V5he4zWEuQF4zKzZIbTGmU9chQUNXNh1rqYlJRKIqbZyj3zmgievjVp8
b7Cwcrx4mFnnhPYZvW/KJ9ejubpR77v3LBhVFmrFFopwpXRVezKDDXJM48j1
CSqWjJ+8tf6PH27gaorNjB8+kU7+s/6mEHneGiatMl9YPck3iMsmcPx3ZmvA
mDeMjndoTOswIHlh99AtiQD3XWTq3fvbMMf5+dgDKy4I6oK8q3gtwoLq7x3N
cMRZeUPB5G4uxIqHFQeGlz2E++QFta6oEQVeoH1OQqTl0rpzKhay9vbVyY6Y
o/VC4lP9aSeQPo/19FE88mpnlZNff20J+v6uxaQgAhLNZyF8BRcc/XCNqeV9
kyKiFI4ZGrh7it+nqySQc4QHThkDnVvXlupoe2A+j9zRtJ+Ol9et37RYEriz
Uc8me8AHwS2rVLQ0MdIpj+v3lfHh/LZt0q4WCNfqcE24KES72CqvLcYfREda
UETJso8bVRH7FaCZ3HPlch8B59ilwd9mvJGVXlnv9oU71m+XMndeZON8bs5g
YB4HpP/dpuqyVisuD4uvStiBF7k4uCfmVNNyTxY59u7ZWUe0b1i89nqMAmWs
jpbjn4b4l9MNpbE3MG02TiTxfeBQkvyj7gEnENKptKWdXthMf3ddpBLgx/Dw
kbpwOjjSQjHb0QVUmuR+yg9+kHY0nbP4fR2yfI2/dO61xMmkqwNe1OWdRb2J
Hw5mQF59KGHkrRVWxq+63BnigPCmv93J7BdAcmzOn5Wk8jp3rKAkjemLxeBK
qVCPgXcqTvVCZ9gHfuAH/h/+F64MpBA=
   "], {{0, 0}, {100, 3}}, {
   0, 99.82785779692128}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.5604637038538713`*^9, 3.560470496869256*^9}]
}, Open  ]],

Cell["\<\
Find the data points in the \[OpenCurlyDoubleQuote]admitted\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]not admitted\
\[CloseCurlyDoubleQuote] types:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ex1Admitted", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"data1", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_", ",", "1"}], "}"}], "\[RuleDelayed]", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ex1NotAdmitted", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"data1", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_", ",", "0"}], "}"}], "\[RuleDelayed]", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], ";"}]}], "Input"],

Cell["\<\
Plot it in the parameter space to get an idea of distribution:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360646855781*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotTrainingData1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ex1Admitted", ",", "ex1NotAdmitted"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", "500"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"20", ",", "110"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20", ",", "110"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Yellow", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotMarkers", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<+\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "20"}], ",", 
         RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}]}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Yellow", ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"Scaled", "[", "0.02", "]"}]}], "]"}]}], "}"}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.560359455161227*^9, 3.5603597060718403`*^9}, {
  3.5603597706674843`*^9, 3.560359781208486*^9}, {3.560359821537181*^9, 
  3.560360096999992*^9}, {3.560360172735804*^9, 3.5603602574156303`*^9}, {
  3.560360583276351*^9, 3.560360586154799*^9}, {3.560396123037622*^9, 
  3.560396137284377*^9}, {3.5604637336280003`*^9, 3.560463739906844*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
ao27GFj0Y9GPRT8W/Vj0Y9GP/8eP/wJVaInJ
   "], {
    {GrayLevel[0], PointSize[Large], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 101], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 102], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 103], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 104], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 105], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 106], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 107], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 108], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 109], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 110], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 111], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 112], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 113], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 114], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 115], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 116], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 117], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 118], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 119], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 120], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 121], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 122], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 123], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 124], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 125], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 126], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 127], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 128], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 129], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 130], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 131], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 132], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 133], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 134], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 135], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 136], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 137], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 138], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 139], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 140], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 141], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 142], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 143], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 144], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 145], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 146], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 147], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 148], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 149], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 150], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 151], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 152], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 153], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 154], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 155], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 156], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 157], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 158], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 159], InsetBox[
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->20,
       FontWeight->Bold], 160]}, 
    {RGBColor[1, 1, 0], PointSize[Large], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 161], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 162], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 163], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 164], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 165], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 166], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 167], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 168], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 169], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 170], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 171], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 172], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 173], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 174], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 175], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 176], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 177], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 178], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 179], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 180], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 181], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 182], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 183], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 184], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 185], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 186], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 187], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 188], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 189], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 190], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 191], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 192], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 193], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 194], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 195], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 196], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 197], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 198], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 199], InsetBox[
      GraphicsBox[
       {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
        DiskBox[{0, 0}, Scaled[0.02]]}], 200]}, {}}],
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{20., 20.},
  Frame->True,
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{20, 110}, {20, 110}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5604637040060387`*^9, 3.5604637767822733`*^9, 
  3.560470497271843*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cost function", "Subsection",
 CellChangeTimes->{{3.5603448327102613`*^9, 3.5603448346562843`*^9}}],

Cell["\<\
Hypothesis function h as a function of fitting parameter and feature matrix:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.5603607370330477`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"\[Beta]_", ",", "X_"}], "]"}], ":=", 
   RowBox[{"Sigmoid", "[", 
    RowBox[{"X", ".", "\[Beta]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560344893016271*^9, 3.5603449257945633`*^9}, {
  3.560345362631785*^9, 3.5603453660810413`*^9}, {3.560388281671052*^9, 
  3.560388295500667*^9}}],

Cell["\<\
Cost function J as a function of fitting parameter and the example data set \
including the feature matrix X and the observed dependent variable y:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.5603607982902308`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", 
   RowBox[{"\[Beta]_", ",", "X_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"Length", "[", "y", "]"}]]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"y", ".", 
      RowBox[{"Log", "[", 
       RowBox[{"h", "[", 
        RowBox[{"\[Beta]", ",", "X"}], "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}], ".", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"h", "[", 
         RowBox[{"\[Beta]", ",", "X"}], "]"}]}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.560344971702932*^9, 3.560345093055242*^9}, {
  3.5603453973447437`*^9, 3.560345400386454*^9}, {3.560388296882201*^9, 
  3.56038829872591*^9}}],

Cell["\<\
Define the fitting parameter in to the vector with right dimension:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Symbol", "[", 
     RowBox[{"\"\<\[Beta]\>\"", "<>", 
      RowBox[{"ToString", "[", "j", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"X1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.560346379559832*^9, 3.5603464091311693`*^9}, {
  3.560346930412478*^9, 3.560346951829324*^9}, {3.5603472280277777`*^9, 
  3.560347232498569*^9}, {3.560354069071241*^9, 3.560354085023467*^9}, {
  3.560388300079707*^9, 3.560388301303596*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}]], "Output",
 CellChangeTimes->{3.560463704254057*^9, 3.560470497831667*^9}]
}, Open  ]],

Cell["Cost function at {0, 0, 0}", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "X1", ",", "y1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5603608870072393`*^9, 3.5603608903323593`*^9}}],

Cell[BoxData["0.6931471805599453`"], "Output",
 CellChangeTimes->{3.560463704288597*^9, 3.5604704982694073`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find \[Beta] to minimize cost function\
\>", "Subsection",
 CellChangeTimes->{{3.56036190675616*^9, 3.560361914647367*^9}, 
   3.5603883041381063`*^9}],

Cell[CellGroupData[{

Cell["Use NMinimize", "Subsubsection",
 CellChangeTimes->{{3.560384167876216*^9, 3.560384176864921*^9}}],

Cell["\<\
Using NMinimize naively causes NMinimize::nnum error as the function J has \
singularity at {\[Beta]0, \[Beta]1, \[Beta]2} = {0.673558, 0.659492, \
0.0861047}\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NMinimize", "[", 
   RowBox[{
    RowBox[{"J", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
      "X1", ",", "y1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.560361695809493*^9, 3.560361709031636*^9}, 
   3.560384287788104*^9, {3.560388307061796*^9, 3.560388309767226*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NMinimize", "::", "nnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\(Indeterminate\\)\
\[NoBreak] is not a number at \[NoBreak]\\!\\({\[Beta]0, \[Beta]1, \
\[Beta]2}\\)\[NoBreak] = \[NoBreak]\\!\\({0.673558088715556`, \
0.6594922363525665`, 0.08610469561565809`}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NMinimize\\\", ButtonNote -> \\\
\"NMinimize::nnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560463704697867*^9, 3.560470500167552*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"regularize", "[", "Indeterminate", "]"}], ":=", 
   "$MaxMachineNumber"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"regularize", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", "x"}]}], "Input",
 CellChangeTimes->{{3.560384486532398*^9, 3.56038451821692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res", "=", 
    RowBox[{"NMinimize", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
         "X1", ",", "y1"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}]}], 
     "]"}]}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.560384527243575*^9, 3.5603845445608473`*^9}, {
  3.560388319760144*^9, 3.560388322413134*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.809698`6.359868060041468", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.560463705501652*^9, 3.560470501152319*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["res"], "Input",
 CellChangeTimes->{{3.5603845477842073`*^9, 3.5603845479643717`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.20349770158943997`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", 
      RowBox[{"-", "25.16133356663958`"}]}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "0.2062317132939834`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "0.20147160044196386`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.560463705583727*^9, 3.560470501201878*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use FindMinimum", "Subsubsection",
 CellChangeTimes->{{3.560384167876216*^9, 3.560384176864921*^9}, {
  3.560392698102888*^9, 3.5603927014366817`*^9}}],

Cell["\<\
Using NMinimize naively causes NMinimize::nnum error as the function J has \
singularity at {\[Beta]0, \[Beta]1, \[Beta]2} = {0.673558, 0.659492, \
0.0861047}\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"J", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
     "X1", ",", "y1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]2", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560351944454616*^9, 3.5603520197894783`*^9}, 
   3.560352248329137*^9, {3.560352396052024*^9, 3.560352396266281*^9}, {
   3.560354166769329*^9, 3.560354169009766*^9}, {3.5603616105824347`*^9, 
   3.560361652181757*^9}, {3.5603616821834784`*^9, 3.560361688530661*^9}, {
   3.560361809948946*^9, 3.560361810504293*^9}, {3.560388325663086*^9, 
   3.5603883274733133`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\(Indeterminate\\)\
\[NoBreak] is not a real number at \[NoBreak]\\!\\({\[Beta]0, \[Beta]1, \
\[Beta]2}\\)\[NoBreak] = \[NoBreak]\\!\\({0.0030368192572521237`, \
0.3646982020287102`, 0.34203216101095646`}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMinimum\\\", ButtonNote -> \
\\\"FindMinimum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560463705776738*^9, 3.560470501616672*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.693147180559946`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5604637058221703`*^9, 3.5604705016253138`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"regularize", "[", "Indeterminate", "]"}], ":=", 
   "$MaxMachineNumber"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"regularize", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", "x"}]}], "Input",
 CellChangeTimes->{{3.560384486532398*^9, 3.56038451821692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res", "=", 
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
         "X1", ",", "y1"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]2", ",", "0"}], "}"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.560384527243575*^9, 3.5603845445608473`*^9}, {
  3.560388319760144*^9, 3.560388322413134*^9}, {3.560392755258164*^9, 
  3.560392760025282*^9}, {3.560392882711721*^9, 3.560392924363173*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient decrease in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMinimum\\\", \
ButtonNote -> \\\"FindMinimum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.560463705989628*^9, 3.560470501792194*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.044742`5.102260386970272", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5604637059909573`*^9, 3.560470501797822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["res"], "Input",
 CellChangeTimes->{{3.560392940707638*^9, 3.56039294090515*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6931471805599452`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.560463706022217*^9, 3.560470501931003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["res"], "Input",
 CellChangeTimes->{{3.5603845477842073`*^9, 3.5603845479643717`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6931471805599452`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5604637060723543`*^9, 3.560470502119749*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use LogitModelFit", "Subsubsection",
 CellChangeTimes->{{3.56038477300878*^9, 3.560384776544219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"X1", ",", 
     RowBox[{"List", "/@", "y1"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560384811436164*^9, 3.5603848275220346`*^9}, {
   3.560384980270713*^9, 3.560384981516802*^9}, {3.560386473536764*^9, 
   3.5603864742713327`*^9}, {3.5603866087269278`*^9, 3.560386609033145*^9}, 
   3.560387204440949*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5603872052180643`*^9, 3.5603872309476757`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {100,
    4}}, {0, 99.82785779692128}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.560463706139228*^9, 3.560470502315516*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logit1", "=", 
  RowBox[{"LogitModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
    RowBox[{"IncludeConstantBasis", "\[Rule]", " ", "False"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.560384777377281*^9, 3.5603847809624434`*^9}, {
   3.560384984405201*^9, 3.560384990204208*^9}, {3.560385099333572*^9, 
   3.560385153552175*^9}, {3.560385229016078*^9, 3.560385229176591*^9}, {
   3.560385270418498*^9, 3.560385271327805*^9}, {3.560385625982806*^9, 
   3.560385627620432*^9}, {3.560385731375792*^9, 3.560385754328167*^9}, {
   3.560386044603505*^9, 3.560386056434235*^9}, {3.560386092863887*^9, 
   3.560386107891098*^9}, {3.560386482432671*^9, 3.560386523240644*^9}, {
   3.560387043995241*^9, 3.5603870490882053`*^9}, {3.560387405669426*^9, 
   3.5603874083959007`*^9}, 3.560387468756604*^9, {3.560388334079473*^9, 
   3.5603883365058537`*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}]],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{3.560463706190525*^9, 3.560470502750515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "logit1", "]"}]], "Input",
 CellChangeTimes->{{3.560385972554613*^9, 3.560385973185831*^9}, {
   3.560387026445285*^9, 3.560387028630348*^9}, 3.5603878913216677`*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"25.161333562249688`", " ", "\[Beta]0"}], "-", 
     RowBox[{"0.20623171325872433`", " ", "\[Beta]1"}], "-", 
     RowBox[{"0.20147160040615925`", " ", "\[Beta]2"}]}]]}]]], "Output",
 CellChangeTimes->{3.560463706222419*^9, 3.560470502815394*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]Fit", "=", 
  RowBox[{"logit1", "[", "\"\<BestFitParameters\>\"", "]"}]}]], "Input",
 CellChangeTimes->{
  3.560387919514698*^9, {3.560396227498973*^9, 3.5603962347149973`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "25.161333562249688`"}], ",", "0.20623171325872433`", ",", 
   "0.20147160040615925`"}], "}"}]], "Output",
 CellChangeTimes->{3.5604637062555227`*^9, 3.560470502880906*^9}]
}, Open  ]],

Cell["Include constant basis:", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.560388645580673*^9, 3.560388649369261*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"ex1", ",", 
     RowBox[{"List", "/@", "y1"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560384811436164*^9, 3.5603848275220346`*^9}, {
   3.560384980270713*^9, 3.560384981516802*^9}, {3.560386473536764*^9, 
   3.5603864742713327`*^9}, {3.5603866087269278`*^9, 3.560386609033145*^9}, 
   3.560387204440949*^9, {3.5603875043191442`*^9, 3.560387504828947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5603872052180643`*^9, 3.5603872309476757`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
Psy4CfczR3IKkhheWAgolQq06PgnluiuEA==
   "], {{0, 0}, {100, 3}}, {
   0, 99.82785779692128}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.560463706310665*^9, 3.560470503013795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logit2", "=", 
  RowBox[{"LogitModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
    RowBox[{"IncludeConstantBasis", "\[Rule]", " ", "True"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.560387471150239*^9, {3.560387865673573*^9, 3.560387897266039*^9}, {
   3.560388339791821*^9, 3.56038834144503*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"25.161333562249688`", "\[VeryThinSpace]", "-", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "-", 
        RowBox[{
         RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}], " ", 
         "\[Beta]2"}]}]]}]],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{3.560463706360763*^9, 3.5604705030991583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "logit2", "]"}]], "Input",
 CellChangeTimes->{{3.560385972554613*^9, 3.560385973185831*^9}, {
   3.560387026445285*^9, 3.560387028630348*^9}, 3.560387903497484*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"25.161333562249688`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.2062317132587243`", " ", "\[Beta]1"}], "-", 
     RowBox[{"0.20147160040615922`", " ", "\[Beta]2"}]}]]}]]], "Output",
 CellChangeTimes->{3.560463706388439*^9, 3.5604705031812477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logit2", "[", "\"\<BestFitParameters\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.560387438378517*^9, 3.560387440853952*^9}, 
   3.560387911965341*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "25.161333562249688`"}], ",", "0.2062317132587243`", ",", 
   "0.20147160040615922`"}], "}"}]], "Output",
 CellChangeTimes->{3.560463706422112*^9, 3.560470503264035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logit2", "[", "\"\<DevianceResiduals\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.43691499462736066`"}], ",", 
   RowBox[{"-", "0.009193432303287305`"}], ",", 
   RowBox[{"-", "0.29967306872379035`"}], ",", "0.13871854412353415`", ",", 
   "0.0600477773741111`", ",", 
   RowBox[{"-", "0.14735153492959296`"}], ",", "0.04521904097614226`", ",", 
   "1.3113707501018783`", ",", "0.024084067425805888`", ",", 
   "0.7840369144550353`", ",", 
   RowBox[{"-", "2.192868235665649`"}], ",", 
   RowBox[{"-", "0.24088822123951875`"}], ",", "0.038213124093329096`", ",", 
   "0.01709181193137684`", ",", 
   RowBox[{"-", "0.5824886594217548`"}], ",", "0.196082760840938`", ",", 
   "1.3032988333998647`", ",", 
   RowBox[{"-", "0.5676184389750794`"}], ",", "0.02422803876374311`", ",", 
   "1.053220617874897`", ",", 
   RowBox[{"-", "0.3719493945883842`"}], ",", "0.052415526610305734`", ",", 
   RowBox[{"-", "0.12202998235054112`"}], ",", 
   RowBox[{"-", "0.014223919406235028`"}], ",", "0.12770976440106227`", ",", 
   "0.5596370491625683`", ",", "1.010275019258329`", ",", 
   RowBox[{"-", "2.00192481885541`"}], ",", 
   RowBox[{"-", "0.4403171786114429`"}], ",", 
   RowBox[{"-", "0.18423946996485127`"}], ",", "0.46594751148155716`", ",", 
   "0.19567681616105204`", ",", 
   RowBox[{"-", "0.5801950867211242`"}], ",", "1.3686857628276967`", ",", 
   RowBox[{"-", "0.3924798754616705`"}], ",", 
   RowBox[{"-", "0.25950447165316093`"}], ",", 
   RowBox[{"-", "1.9556869760944582`"}], ",", "0.1582000814271859`", ",", 
   RowBox[{"-", "0.6754858539926867`"}], ",", 
   RowBox[{"-", "0.31890801746722064`"}], ",", "0.24555870411655223`", ",", 
   RowBox[{"-", "0.11078820076932297`"}], ",", "0.032822505482496156`", ",", 
   RowBox[{"-", "1.1812941061022364`"}], ",", 
   RowBox[{"-", "0.09485563642484465`"}], ",", 
   RowBox[{"-", "0.5428960707916273`"}], ",", "0.1185989136679792`", ",", 
   "0.0027637705798161647`", ",", "0.0398847764276544`", ",", 
   "0.00429864799444886`", ",", "0.06156307541235488`", ",", 
   "0.03161124409297634`", ",", "0.4467720514251231`", ",", 
   RowBox[{"-", "0.0749677567145419`"}], ",", 
   RowBox[{"-", "0.130837481183675`"}], ",", 
   RowBox[{"-", "0.3296694747942726`"}], ",", "0.01693395844984628`", ",", 
   RowBox[{"-", "1.5383206900297752`"}], ",", "0.17093568208091225`", ",", 
   "0.0925259437065722`", ",", "0.030609169536562966`", ",", 
   RowBox[{"-", "0.021090302454064375`"}], ",", 
   RowBox[{"-", "0.08380396936352316`"}], ",", 
   RowBox[{"-", "0.01594203692259278`"}], ",", 
   RowBox[{"-", "0.38562569373808825`"}], ",", 
   RowBox[{"-", "0.2889116952383776`"}], ",", "0.3381647268283461`", ",", 
   RowBox[{"-", "0.14227841593580337`"}], ",", "0.0097522850338411`", ",", 
   "0.8288252814919747`", ",", 
   RowBox[{"-", "0.011139220636831738`"}], ",", "0.2138372153291562`", ",", 
   "0.014604572768867263`", ",", "0.4959546064675323`", ",", 
   "0.44621615250517294`", ",", "0.009496988994182434`", ",", 
   "0.41446425558540295`", ",", "0.9666616710502097`", ",", 
   RowBox[{"-", "0.1787003117444921`"}], ",", 
   RowBox[{"-", "1.352748809559281`"}], ",", "0.037888327072833565`", ",", 
   "0.23189043202783635`", ",", "0.4721320087419104`", ",", 
   "1.7852739775736566`", ",", "0.010858527730056104`", ",", 
   "0.06355396465073153`", ",", 
   RowBox[{"-", "0.9357593843374585`"}], ",", "0.018972953413795707`", ",", 
   "0.007319733326320887`", ",", 
   RowBox[{"-", "0.47565309531593014`"}], ",", "0.010587561683769921`", ",", 
   "0.00543600262470253`", ",", 
   RowBox[{"-", "0.053390860229134286`"}], ",", "0.03683709943259008`", ",", 
   "0.39604610628310805`", ",", "0.5520987188480235`", ",", 
   "0.7569766301674314`", ",", "0.014380479315593529`", ",", 
   "1.470335644290696`", ",", "0.022320281929467983`"}], "}"}]], "Output",
 CellChangeTimes->{3.560463706457942*^9, 3.560470503347879*^9}]
}, Open  ]],

Cell["\<\
Alternatively, use the GeneralizedLinearModelFit with ExponentialFamily \
\[Rule] \[OpenCurlyDoubleQuote]Binomial\[CloseCurlyDoubleQuote], LinkFunction\
\[Rule]Automatic:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.560388645580673*^9, 3.560388649369261*^9}, {
  3.56039267334613*^9, 3.560392679380805*^9}, {3.56039908170227*^9, 
  3.560399102854616*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneralizedLinearModelFit", " ", "[", 
  RowBox[{"data", ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
   RowBox[{"IncludeConstantBasis", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"ExponentialFamily", " ", "\[Rule]", " ", "\"\<Binomial\>\""}], 
   ",", " ", 
   RowBox[{"LinkFunction", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.56039902426961*^9, 3.560399056599761*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"25.161333562249688`", "\[VeryThinSpace]", "-", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "-", 
        RowBox[{
         RowBox[{"\[LeftSkeleton]", "20", "\[RightSkeleton]"}], " ", 
         "\[Beta]2"}]}]]}]],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{3.560463706507782*^9, 3.560470503694619*^9}]
}, Open  ]],

Cell["Examine deviance residuals:", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.560388645580673*^9, 3.560388649369261*^9}, {
  3.56039267334613*^9, 3.560392679380805*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"logit2", "[", "\"\<DevianceResiduals\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.5603879789888763`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1lAlMVFcYhQEhUrUFKWARq4Aso2URFQQFOezLsA8wQ4WQClUKFetWFzJ0
wjIYAaEBCi1VKgw2Dg1YWToxAkNlSQVHZCnCMAooWw0je0FFajP/vOTl5bzv
P/f89973rvHRk6FfqqmoqMS9v/9/Kq4ZF5vr7kEJS9ImegGmfkWxam8qaU1M
eyfM91v1kNbG7KoVN7O52UWhdcEY+UC7sLGK9Cfwl7W4Jwz9SfXbUM30d5o3
/5W4EUrGfMdi3iyQNgHLreN4yq1i0qao+zSwsFd/irQ5bJbjeO+uqIoVmoHT
eYZDX/dJaPzdSOKn/1aZV071luhzMtBL531P2hqLh7pcm8pHqX4PdNNzE5wN
/iJui+bhiuGgQWU/e2FppmIm36Ws34fB1iyG0yNlf/uxNN0ztDowQ9oO67K+
6FOX9FO9PSw273G0+1tI/ABYIlbMEecm4g7QKIs2SzLOIe0IG3GDeQdHTPUH
0aq1spA1OUL6EJJHL+3U363Mc4K+dxdjdp0KrYczEvbxtjKsh2i8w9Dq1v6d
UdhO2gXSLlmqXreM/IDoxtrWmY00fx5gk83xXcxTztcVXpdlG3aOLxJ3hSgr
aip2+wBxN5jeuCsQlXQpNM8NH5U6nEjxWyPujnTz1+fHXVrI7w6TsYupBdfG
iHtgcFO05Wp8L/k9UDtcX3c+6RH15wkh9POvRd0j7ollrnPmNskvxL1QLtxw
s2B8jrgXfrLz5Z3zEdH43ki5VVFwPGaEuDeys7KKvotqJL8PnBONNDcJjlF/
PuBO3FVvTxQQ98XjzoHL50pOEffF+OaP1+/NqCbuh+ajxuxIG+qH54eyrviH
U0VDxJmQvGS76NvWUD4TkzaxbJ8mMfXnD41267UAgz7i/ujgv6o3YSu/1wDs
V5uwWPp5mXgAvnlhlOQw0ko8ECOhaGyv/oPyAxGmc6FYjVNKPAhPHO2d7xQX
kj8I9q9vM63O1lF+MEb9pW8NWXkKjWA05LTFbql6QvXBKG25fimT263Q4mCk
y4qFXEEfjR8CQXK11Mqe/m+EoFuMK6oradRPCHLj7hffy/hHocUhKLhQO8ro
4lN+KJ53I189pkPBEYr53OB8lakc8odCsr41VtTwjPyh0DjItZVcVa4vC9L6
Hb6MM5QHFj5LbNMr5A+Sn4WaMvnZF3I5+VmYNY6W3XzWRvlhMN2V/UoqWKT+
w7BlxxGmwTE6P3hh+DFgUl5Y9ZD8Ydh+2MnyqwNPKT/8/Xnlejo57y3lh+Nk
p+zlOyc++cOR1lhbpON5m/zhSJnVFTbMTlN+BDRHqyIrTuSTPwLm5poLzDdc
8kdANGxRZXDqKa1/BKwl8RflVRmUz8bnNRP9Wh7fkp+N6QdWqxsjKmn/2Ojh
VM8FDZVRPhuLidktjzkD5OcgsLZG/kBI5ws40F3p/NDCcZLyOdAZf+6Wdob2
Q8yB7ZxZZQr/X/JHwrD5zn0j6Q8u/wHSw/D4
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 100.}, {-2.192868235665649, 1.7852739775736566`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560463709051537*^9, 3.560470503751177*^9}]
}, Open  ]],

Cell["\<\
Cost function\[CloseCurlyQuote]s value at fitted parameters:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.560388645580673*^9, 3.560388649369261*^9}, {
  3.56039267334613*^9, 3.560392679380805*^9}, {3.560428207740823*^9, 
  3.560428216306834*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fittedParam", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Rule", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
      RowBox[{"logit2", "[", "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5604282648326693`*^9, 3.560428266342293*^9}, {
  3.560428480991098*^9, 3.560428491073793*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", 
    RowBox[{"-", "25.161333562249688`"}]}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", "0.2062317132587243`"}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "0.20147160040615922`"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.560463709148283*^9, 3.560470503831593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", "X1",
     ",", "y1"}], "]"}], "/.", "fittedParam"}]], "Input",
 CellChangeTimes->{{3.560428218204431*^9, 3.560428270013414*^9}, {
  3.5604284839043083`*^9, 3.560428496779705*^9}}],

Cell[BoxData["0.20349770158943997`"], "Output",
 CellChangeTimes->{3.560463709196096*^9, 3.560470503917363*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decision boundary", "Subsection",
 CellChangeTimes->{{3.560394945665381*^9, 3.560394948241453*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"\[Beta]Fit", "*", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x1", ",", "x2"}], "}"}]}], "]"}], "\[Equal]", 
  "0"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "25.161333562249688`"}], "+", 
   RowBox[{"0.20623171325872433`", " ", "x1"}], "+", 
   RowBox[{"0.20147160040615925`", " ", "x2"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{3.560463709243634*^9, 3.560470504036112*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"\[Beta]Fit", "*", 
       RowBox[{"{", 
        RowBox[{"1", ",", "x1", ",", "x2"}], "}"}]}], "]"}], "\[Equal]", 
     "0"}], ",", "x2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5603985948280354`*^9, 3.560398598440325*^9}, {
  3.560398831115744*^9, 3.5603988321082172`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x2", "\[Rule]", 
    RowBox[{"4.963478713545915`", " ", 
     RowBox[{"(", 
      RowBox[{"25.161333562249688`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.20623171325872433`", " ", "x1"}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5604637092932262`*^9, 3.56047050424721*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.560398868843871*^9, 3.560398869604501*^9}}],

Cell[BoxData[
 RowBox[{"4.963478713545915`", " ", 
  RowBox[{"(", 
   RowBox[{"25.161333562249688`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.20623171325872433`", " ", "x1"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.560463709343295*^9, 3.560470504414425*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotDecisionBoundary", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"sol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "30", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560398810704563*^9, 3.560398880588352*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0vk71AkAx/FJSq2oBqXrKdlqd3RJviM0PuNmHGMO800aMTuO5CrSRtbK
KKVUVsrtUeYp0yV5lHg0lZqxj8bZxpMkVzrG2mQx2PaH9/P6B94mQVEcsRaF
QvH83v8O3BhfTqEwsFL2QX74jADbpMYGv81jIOJNYaXuaQGOlu7Sn/mBgTp9
XlnpKQEW5idoa4wYEMXUpbdKBNh8dnZk3IwBGZHFtkgW4FCUjlItYIDx2LZ7
NFaAGYvliW9vMxDUkTkRIxTAqJboqQuwQzmF2B5tLkDeyTlf0yOBi55p7M6X
vlD3tvRcWMcEtf74aE2sL4yz/3qx6iUT4YXnN4as8oXN4FVVdIY9jOOkeskP
+SgO92ea7nZAYIz4yJL9fMxmdjYXaxwwI950UX+GBwvds/uKqx1xqEEbHQU8
XK+mcaZDnJDikR5l5MjDivmZwRs2OmNAuZQj7+XiT0n3+xuvnNEfyawaOMkF
1z/Iv0LigkdJGbK2rVy0tci+ptq7Yiiti7+9iYPLCb1jlaOuuFXZnDw3lgP+
0+5ld+66QdnZKHSkcjAoWmyxJcIdtQffNXlV+OCRpVm1zmoWWD8W1qtIH5yW
6u27+ZqFrW1Ccf04G3msrgN3Tnug/HrDmU0FbFzLjLqc5O6JpPgdYo01G6k0
q8dN873gE3S4xPK+N8rGP3ISq7zQuU6VEDjHG/JfgrXHYr2hr9r5KJThhSVa
wZliAzbilIOzwlOeoE3vyL1wgI2z+c0hQ+0egOv7naYKNtgBTyw9DT1wdPPC
VJGJD1wi5uqUBLAg208VLfzdBx/CWQxVnjtY9fftRrp9YGOvvHKxyw26D5pU
EoIDuSjnX4ef3PBiTuPfydkcjMYdrFWJXVH23vY57QsHgtZMiccdF6hHXHON
nLg4uGA4Zu+MMyy9rKbFpVzQtno8ddrtjHzHAkPxFBdrijQr1qY7gXKmv0bh
x0MN5X576zNHSA6ULn9zj4dzN2v+iF/siNi4qWhzXT6W7piIv+XvgP0qwu9j
GB92Usbj+lx7RD4dHOfKv38S0qIn72fi6ILEDevX+0JmHFlfaMLE5/gbbPNk
X4SWIEc/EDiR7LVd/coXd4flvZ1+dlj2ur2ISheg/7ChyLt9N5TKlid9mQKk
ZWkNl4TZ4sNgWP/4gAAngoQPVs6zgTa/71K0E4kuqpLnnrILzL1tmpwCEll7
Wr4JVliBRlXkmxSRCK+rcVhkYAWqota2vJiEq+m18/WLrNBLSBPrSklMf4qn
/UyxQgr1mKbvOomI5DXCyQE65Iq1GvMqEixp6LP8SjocrcKnGptITHydyXrn
TcdmdUAeX0WiY89QT7YbHYZlPJu3zSTu1TVvcXego8+AkTDaRiL01NXnFQQd
EvWSKeMuEq2r3KdOrKGjoaxqUjxIQmafHbTxI4Fb+8pz1UMkUqVJtzv7CFwy
LLb+dZhE4KJQzbluAsEp6ccyPpNY3WF9abyZwHyh/2TFPyTSwnoUL6oJfDH0
ybUdIyFqUiw7XkGgo9HJuuEbCVjcE5nLCJTt2nbs9QSJMY1k+koRgXMjpitF
UyRaAqPcva4QOCI1fvhJQ+J2A5mjlUVAKNTzOzJD4qSZfV9VBgEXI63J2VkS
AefNzMPTCPwHpAU2lg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{30., 22.},
  PlotRange->{{30, 100}, {22.525073121200304`, 94.17894051379736}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560463709392414*^9, 3.560470504656479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"plotTrainingData1", ",", "plotDecisionBoundary"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.560396209834659*^9, 3.560396215018712*^9}, {
   3.5603962461404657`*^9, 3.5603962584032927`*^9}, 3.5603988848071747`*^9}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
ao27GFj0Y9GPRT8W/Vj0Y9GP/8eP/wJVaInJ
    "], {
     {GrayLevel[0], PointSize[Large], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 101], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 102], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 103], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 104], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 105], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 106], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 107], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 108], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 109], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 110], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 111], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 112], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 113], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 114], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 115], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 116], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 117], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 118], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 119], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 120], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 121], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 122], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 123], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 124], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 125], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 126], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 127], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 128], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 129], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 130], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 131], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 132], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 133], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 134], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 135], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 136], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 137], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 138], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 139], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 140], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 141], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 142], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 143], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 144], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 145], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 146], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 147], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 148], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 149], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 150], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 151], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 152], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 153], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 154], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 155], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 156], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 157], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 158], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 159], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 160]}, 
     {RGBColor[1, 1, 0], PointSize[Large], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 161], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 162], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 163], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 164], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 165], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 166], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 167], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 168], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 169], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 170], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 171], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 172], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 173], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 174], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 175], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 176], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 177], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 178], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 179], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 180], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 181], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 182], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 183], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 184], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 185], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 186], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 187], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 188], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 189], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 190], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 191], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 192], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 193], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 194], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 195], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 196], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 197], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 198], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 199], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 200]}, {}}], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0vk71AkAx/FJSq2oBqXrKdlqd3RJviM0PuNmHGMO800aMTuO5CrSRtbK
KKVUVsrtUeYp0yV5lHg0lZqxj8bZxpMkVzrG2mQx2PaH9/P6B94mQVEcsRaF
QvH83v8O3BhfTqEwsFL2QX74jADbpMYGv81jIOJNYaXuaQGOlu7Sn/mBgTp9
XlnpKQEW5idoa4wYEMXUpbdKBNh8dnZk3IwBGZHFtkgW4FCUjlItYIDx2LZ7
NFaAGYvliW9vMxDUkTkRIxTAqJboqQuwQzmF2B5tLkDeyTlf0yOBi55p7M6X
vlD3tvRcWMcEtf74aE2sL4yz/3qx6iUT4YXnN4as8oXN4FVVdIY9jOOkeskP
+SgO92ea7nZAYIz4yJL9fMxmdjYXaxwwI950UX+GBwvds/uKqx1xqEEbHQU8
XK+mcaZDnJDikR5l5MjDivmZwRs2OmNAuZQj7+XiT0n3+xuvnNEfyawaOMkF
1z/Iv0LigkdJGbK2rVy0tci+ptq7Yiiti7+9iYPLCb1jlaOuuFXZnDw3lgP+
0+5ld+66QdnZKHSkcjAoWmyxJcIdtQffNXlV+OCRpVm1zmoWWD8W1qtIH5yW
6u27+ZqFrW1Ccf04G3msrgN3Tnug/HrDmU0FbFzLjLqc5O6JpPgdYo01G6k0
q8dN873gE3S4xPK+N8rGP3ISq7zQuU6VEDjHG/JfgrXHYr2hr9r5KJThhSVa
wZliAzbilIOzwlOeoE3vyL1wgI2z+c0hQ+0egOv7naYKNtgBTyw9DT1wdPPC
VJGJD1wi5uqUBLAg208VLfzdBx/CWQxVnjtY9fftRrp9YGOvvHKxyw26D5pU
EoIDuSjnX4ef3PBiTuPfydkcjMYdrFWJXVH23vY57QsHgtZMiccdF6hHXHON
nLg4uGA4Zu+MMyy9rKbFpVzQtno8ddrtjHzHAkPxFBdrijQr1qY7gXKmv0bh
x0MN5X576zNHSA6ULn9zj4dzN2v+iF/siNi4qWhzXT6W7piIv+XvgP0qwu9j
GB92Usbj+lx7RD4dHOfKv38S0qIn72fi6ILEDevX+0JmHFlfaMLE5/gbbPNk
X4SWIEc/EDiR7LVd/coXd4flvZ1+dlj2ur2ISheg/7ChyLt9N5TKlid9mQKk
ZWkNl4TZ4sNgWP/4gAAngoQPVs6zgTa/71K0E4kuqpLnnrILzL1tmpwCEll7
Wr4JVliBRlXkmxSRCK+rcVhkYAWqota2vJiEq+m18/WLrNBLSBPrSklMf4qn
/UyxQgr1mKbvOomI5DXCyQE65Iq1GvMqEixp6LP8SjocrcKnGptITHydyXrn
TcdmdUAeX0WiY89QT7YbHYZlPJu3zSTu1TVvcXego8+AkTDaRiL01NXnFQQd
EvWSKeMuEq2r3KdOrKGjoaxqUjxIQmafHbTxI4Fb+8pz1UMkUqVJtzv7CFwy
LLb+dZhE4KJQzbluAsEp6ccyPpNY3WF9abyZwHyh/2TFPyTSwnoUL6oJfDH0
ybUdIyFqUiw7XkGgo9HJuuEbCVjcE5nLCJTt2nbs9QSJMY1k+koRgXMjpitF
UyRaAqPcva4QOCI1fvhJQ+J2A5mjlUVAKNTzOzJD4qSZfV9VBgEXI63J2VkS
AefNzMPTCPwHpAU2lg==
      "]]}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{20., 20.},
  Frame->True,
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{20, 110}, {20, 110}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.560463709506024*^9, 3.560470504940838*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction", "Subsection",
 CellChangeTimes->{{3.5603991611676483`*^9, 3.560399163574177*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "logit2", "]"}]], "Input"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"25.161333562249688`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.2062317132587243`", " ", "\[Beta]1"}], "-", 
     RowBox[{"0.20147160040615922`", " ", "\[Beta]2"}]}]]}]]], "Output",
 CellChangeTimes->{3.560463709538886*^9, 3.560470505064754*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictedProb", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]1", ",", "\[Beta]2", ",", "sol"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sol", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{"Rule", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Beta]1", ",", "\[Beta]2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Normal", "[", "logit2", "]"}], "/.", "sol"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5604277568707542`*^9, 3.560427905843457*^9}, {
  3.560430117666955*^9, 3.560430120638379*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedProb", "[", 
  RowBox[{"45", ",", "85"}], "]"}]], "Input",
 CellChangeTimes->{{3.560427714942388*^9, 3.560427732310598*^9}, {
   3.560427843257237*^9, 3.560427846343747*^9}, 3.560430124653967*^9, {
   3.56043033734347*^9, 3.560430339343094*^9}, {3.560431899362463*^9, 
   3.5604318999698353`*^9}}],

Cell[BoxData["0.7762906907349081`"], "Output",
 CellChangeTimes->{3.560463709592929*^9, 3.56047050518771*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction accuracy", "Subsection",
 CellChangeTimes->{{3.560429826880619*^9, 3.5604298299508743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"predict", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"predictedProb", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "\[GreaterEqual]", " ", "0.5"}], ",", 
    "1", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560430127462318*^9, 3.560430146189047*^9}, {
  3.560430345071875*^9, 3.5604303506338787`*^9}, {3.560431901715722*^9, 
  3.5604319020507717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"predict", "@@", "#"}], "&"}], ",", "ex1"}], "]"}], "-", 
      "y1"}], ",", "0"}], "]"}], "/", 
   RowBox[{"Length", "[", "y1", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.560427912839872*^9, 3.560427942056789*^9}, {
  3.560428064067721*^9, 3.56042813919593*^9}, {3.5604301524948473`*^9, 
  3.560430192941256*^9}, {3.56043192588513*^9, 3.5604319434827843`*^9}}],

Cell[BoxData["0.89`"], "Output",
 CellChangeTimes->{3.560463709737561*^9, 3.5604705053795767`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binary non-linear logistic regression", "Section",
 CellChangeTimes->{{3.560432494432562*^9, 3.56043252360868*^9}, 
   3.5604325853576117`*^9}],

Cell[CellGroupData[{

Cell["Example data set", "Subsection",
 CellChangeTimes->{{3.560359371203454*^9, 3.5603593779996843`*^9}, {
  3.5604602325632067`*^9, 3.560460233172299*^9}}],

Cell["There are two data files in CSV format.", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$dataFile", "=", 
   RowBox[{"ToFileName", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"NotebookDirectory", "[", "]"}], "}"}], ",", 
     "\"\<ex2data2.txt\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560345149052356*^9, 3.560345175583057*^9}, {
  3.560360498399116*^9, 3.5603605032567797`*^9}, {3.560432590669347*^9, 
  3.560432592810213*^9}}],

Cell["The data files happen to be CSV file, import as so.", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, 
   3.5603605694392233`*^9},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"$dataFile", ",", "\"\<CSV\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5603605557756453`*^9, 3.560360573992013*^9}, {
  3.560432596043829*^9, 3.56043260163536*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureData", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560359438431135*^9, 3.560359448467271*^9}, {
  3.560432619356072*^9, 3.560432639787874*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", "featureData"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.560345258061064*^9, 3.560345306481882*^9}, {
   3.5603457301135683`*^9, 3.560345762534699*^9}, {3.56034580475298*^9, 
   3.560345880945651*^9}, {3.5603463562067633`*^9, 3.560346356446744*^9}, {
   3.5603485218250437`*^9, 3.5603485224573507`*^9}, {3.5603535380815268`*^9, 
   3.560353565626176*^9}, {3.560359436638604*^9, 3.560359437683859*^9}, 
   3.560432644454664*^9, {3.5604327364309053`*^9, 3.560432741469396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "//", "RandomChoice"}]], "Input",
 CellChangeTimes->{{3.560354021493826*^9, 3.560354032216298*^9}, 
   3.560432743180771*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0.52938`", ",", 
   RowBox[{"-", "0.5212`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5604602589577093`*^9, 3.560463709853406*^9, 
  3.560470505605544*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.5604344477514153`*^9, 3.56043444964193*^9}}],

Cell[BoxData["118"], "Output",
 CellChangeTimes->{3.5604602599778337`*^9, 3.560463709897818*^9, 
  3.5604705056816187`*^9}]
}, Open  ]],

Cell["Visualize the feature matrix X:", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.5603606909698544`*^9, 
  3.560360702400217*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5603542068892717`*^9, 3.5603542288805943`*^9}, {
   3.5603591977771797`*^9, 3.560359256136169*^9}, 3.5604327503556633`*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
zMUoTUTlZ/2sn/V/oP8CRN0pqA==
   "], {{0, 0}, {118, 3}}, {0, 1.1089}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.56046026309389*^9, 3.560463709945492*^9, 
  3.560470505749217*^9}]
}, Open  ]],

Cell["\<\
Find the data points in the \[OpenCurlyDoubleQuote]admitted\
\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]not admitted\
\[CloseCurlyDoubleQuote] types:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"exAdmitted", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_", ",", "1"}], "}"}], "\[RuleDelayed]", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exNotAdmitted", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_", ",", "0"}], "}"}], "\[RuleDelayed]", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5604328115888777`*^9, 3.560432812911175*^9}, {
  3.560432845259141*^9, 3.560432847464438*^9}, {3.560432939232842*^9, 
  3.560432945218055*^9}, {3.560459646166378*^9, 3.56045967945944*^9}, {
  3.56045976319803*^9, 3.560459765986484*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"exAdmitted", "//", "RandomChoice"}], "\[IndentingNewLine]", 
 RowBox[{"data", "//", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Max", "[", "#", "]"}], ",", 
     RowBox[{"Min", "[", "#", "]"}]}], "}"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.560432825775445*^9, 3.560432827486052*^9}, {
  3.56043294823088*^9, 3.5604329963531017`*^9}, {3.5604597052722273`*^9, 
  3.560459716224428*^9}, {3.560459771224359*^9, 3.560459790209992*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.16187`"}], ",", "0.8019`"}], "}"}]], "Output",
 CellChangeTimes->{3.560460277054573*^9, 3.5604637099809103`*^9, 
  3.5604705058384438`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.1089`", ",", 
   RowBox[{"-", "0.83007`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460277054573*^9, 3.5604637099809103`*^9, 
  3.560470505841893*^9}]
}, Open  ]],

Cell["\<\
Plot it in the parameter space to get an idea of distribution:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360646855781*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotTrainingData", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", "exAdmitted"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", "exNotAdmitted"}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", "500"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1.25"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Yellow", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotMarkers", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<+\>\"", ",", 
         RowBox[{"FontSize", "\[Rule]", " ", "20"}], ",", 
         RowBox[{"FontWeight", "\[Rule]", " ", "Bold"}]}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Thick", "]"}], ",", "Yellow", ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"Scaled", "[", "0.02", "]"}]}], "]"}]}], "}"}], "]"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<x1\>\"", ",", "\"\<x2\>\""}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.560359455161227*^9, 3.5603597060718403`*^9}, {
   3.5603597706674843`*^9, 3.560359781208486*^9}, {3.560359821537181*^9, 
   3.560360096999992*^9}, {3.560360172735804*^9, 3.5603602574156303`*^9}, {
   3.560360583276351*^9, 3.560360586154799*^9}, {3.560396123037622*^9, 
   3.560396137284377*^9}, 3.56043281783044*^9, {3.5604329327809143`*^9, 
   3.5604329345823717`*^9}, {3.560433001611775*^9, 3.560433038566146*^9}, {
   3.560459458024044*^9, 3.560459533790782*^9}, {3.560459580000993*^9, 
   3.560459619090393*^9}, {3.560459826939349*^9, 3.560459862484744*^9}, {
   3.560460031072781*^9, 3.5604600318308487`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
r+P5Op6v4/k6nq//f77+C00x6k0=
   "], {{
     {GrayLevel[0], PointSize[Large], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 119], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 120], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 121], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 122], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 123], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 124], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 125], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 126], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 127], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 128], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 129], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 130], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 131], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 132], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 133], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 134], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 135], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 136], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 137], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 138], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 139], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 140], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 141], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 142], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 143], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 144], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 145], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 146], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 147], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 148], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 149], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 150], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 151], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 152], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 153], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 154], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 155], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 156], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 157], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 158], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 159], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 160], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 161], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 162], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 163], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 164], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 165], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 166], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 167], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 168], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 169], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 170], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 171], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 172], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 173], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 174], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 175], InsetBox[
       StyleBox["\<\"+\"\>",
        StripOnInput->False,
        FontSize->20,
        FontWeight->Bold], 176]}, 
     {RGBColor[1, 1, 0], PointSize[Large], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 177], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 178], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 179], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 180], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 181], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 182], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 183], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 184], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 185], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 186], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 187], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 188], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 189], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 190], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 191], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 192], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 193], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 194], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 195], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 196], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 197], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 198], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 199], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 200], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 201], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 202], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 203], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 204], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 205], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 206], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 207], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 208], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 209], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 210], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 211], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 212], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 213], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 214], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 215], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 216], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 217], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 218], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 219], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 220], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 221], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 222], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 223], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 224], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 225], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 226], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 227], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 228], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 229], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 230], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 231], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 232], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 233], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 234], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 235], InsetBox[
       GraphicsBox[
        {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
         DiskBox[{0, 0}, Scaled[0.02]]}], 236]}, {}}, {
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[119]},
       RowBox[{"{", 
         RowBox[{"0.051267`", ",", "0.69956`"}], "}"}]],
      Annotation[#, {0.051267, 0.69956}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[120]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.092742`"}], ",", "0.68494`"}], "}"}]],
      Annotation[#, {-0.092742, 0.68494}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[121]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.21371`"}], ",", "0.69225`"}], "}"}]],
      Annotation[#, {-0.21371, 0.69225}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[122]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.375`"}], ",", "0.50219`"}], "}"}]],
      Annotation[#, {-0.375, 0.50219}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[123]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.51325`"}], ",", "0.46564`"}], "}"}]],
      Annotation[#, {-0.51325, 0.46564}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[124]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.52477`"}], ",", "0.2098`"}], "}"}]],
      Annotation[#, {-0.52477, 0.2098}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[125]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.39804`"}], ",", "0.034357`"}], "}"}]],
      Annotation[#, {-0.39804, 0.034357}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[126]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.30588`"}], ",", 
           RowBox[{"-", "0.19225`"}]}], "}"}]],
      Annotation[#, {-0.30588, -0.19225}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[127]},
       RowBox[{"{", 
         RowBox[{"0.016705`", ",", 
           RowBox[{"-", "0.40424`"}]}], "}"}]],
      Annotation[#, {0.016705, -0.40424}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[128]},
       RowBox[{"{", 
         RowBox[{"0.13191`", ",", 
           RowBox[{"-", "0.51389`"}]}], "}"}]],
      Annotation[#, {0.13191, -0.51389}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[129]},
       RowBox[{"{", 
         RowBox[{"0.38537`", ",", 
           RowBox[{"-", "0.56506`"}]}], "}"}]],
      Annotation[#, {0.38537, -0.56506}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[130]},
       RowBox[{"{", 
         RowBox[{"0.52938`", ",", 
           RowBox[{"-", "0.5212`"}]}], "}"}]],
      Annotation[#, {0.52938, -0.5212}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[131]},
       RowBox[{"{", 
         RowBox[{"0.63882`", ",", 
           RowBox[{"-", "0.24342`"}]}], "}"}]],
      Annotation[#, {0.63882, -0.24342}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[132]},
       RowBox[{"{", 
         RowBox[{"0.73675`", ",", 
           RowBox[{"-", "0.18494`"}]}], "}"}]],
      Annotation[#, {0.73675, -0.18494}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[133]},
       RowBox[{"{", 
         RowBox[{"0.54666`", ",", "0.48757`"}], "}"}]],
      Annotation[#, {0.54666, 0.48757}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[134]},
       RowBox[{"{", 
         RowBox[{"0.322`", ",", "0.5826`"}], "}"}]],
      Annotation[#, {0.322, 0.5826}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[135]},
       RowBox[{"{", 
         RowBox[{"0.16647`", ",", "0.53874`"}], "}"}]],
      Annotation[#, {0.16647, 0.53874}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[136]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.046659`"}], ",", "0.81652`"}], "}"}]],
      Annotation[#, {-0.046659, 0.81652}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[137]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.17339`"}], ",", "0.69956`"}], "}"}]],
      Annotation[#, {-0.17339, 0.69956}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[138]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.47869`"}], ",", "0.63377`"}], "}"}]],
      Annotation[#, {-0.47869, 0.63377}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[139]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.60541`"}], ",", "0.59722`"}], "}"}]],
      Annotation[#, {-0.60541, 0.59722}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[140]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.62846`"}], ",", "0.33406`"}], "}"}]],
      Annotation[#, {-0.62846, 0.33406}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[141]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.59389`"}], ",", "0.005117`"}], "}"}]],
      Annotation[#, {-0.59389, 0.005117}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[142]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.42108`"}], ",", 
           RowBox[{"-", "0.27266`"}]}], "}"}]],
      Annotation[#, {-0.42108, -0.27266}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[143]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.11578`"}], ",", 
           RowBox[{"-", "0.39693`"}]}], "}"}]],
      Annotation[#, {-0.11578, -0.39693}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[144]},
       RowBox[{"{", 
         RowBox[{"0.20104`", ",", 
           RowBox[{"-", "0.60161`"}]}], "}"}]],
      Annotation[#, {0.20104, -0.60161}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[145]},
       RowBox[{"{", 
         RowBox[{"0.46601`", ",", 
           RowBox[{"-", "0.53582`"}]}], "}"}]],
      Annotation[#, {0.46601, -0.53582}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[146]},
       RowBox[{"{", 
         RowBox[{"0.67339`", ",", 
           RowBox[{"-", "0.53582`"}]}], "}"}]],
      Annotation[#, {0.67339, -0.53582}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[147]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.13882`"}], ",", "0.54605`"}], "}"}]],
      Annotation[#, {-0.13882, 0.54605}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[148]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.29435`"}], ",", "0.77997`"}], "}"}]],
      Annotation[#, {-0.29435, 0.77997}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[149]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.26555`"}], ",", "0.96272`"}], "}"}]],
      Annotation[#, {-0.26555, 0.96272}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[150]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.16187`"}], ",", "0.8019`"}], "}"}]],
      Annotation[#, {-0.16187, 0.8019}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[151]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.17339`"}], ",", "0.64839`"}], "}"}]],
      Annotation[#, {-0.17339, 0.64839}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[152]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.28283`"}], ",", "0.47295`"}], "}"}]],
      Annotation[#, {-0.28283, 0.47295}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[153]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.36348`"}], ",", "0.31213`"}], "}"}]],
      Annotation[#, {-0.36348, 0.31213}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[154]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.30012`"}], ",", "0.027047`"}], "}"}]],
      Annotation[#, {-0.30012, 0.027047}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[155]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.23675`"}], ",", 
           RowBox[{"-", "0.21418`"}]}], "}"}]],
      Annotation[#, {-0.23675, -0.21418}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[156]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.06394`"}], ",", 
           RowBox[{"-", "0.18494`"}]}], "}"}]],
      Annotation[#, {-0.06394, -0.18494}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[157]},
       RowBox[{"{", 
         RowBox[{"0.062788`", ",", 
           RowBox[{"-", "0.16301`"}]}], "}"}]],
      Annotation[#, {0.062788, -0.16301}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[158]},
       RowBox[{"{", 
         RowBox[{"0.22984`", ",", 
           RowBox[{"-", "0.41155`"}]}], "}"}]],
      Annotation[#, {0.22984, -0.41155}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[159]},
       RowBox[{"{", 
         RowBox[{"0.2932`", ",", 
           RowBox[{"-", "0.2288`"}]}], "}"}]],
      Annotation[#, {0.2932, -0.2288}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[160]},
       RowBox[{"{", 
         RowBox[{"0.48329`", ",", 
           RowBox[{"-", "0.18494`"}]}], "}"}]],
      Annotation[#, {0.48329, -0.18494}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[161]},
       RowBox[{"{", 
         RowBox[{"0.64459`", ",", 
           RowBox[{"-", "0.14108`"}]}], "}"}]],
      Annotation[#, {0.64459, -0.14108}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[162]},
       RowBox[{"{", 
         RowBox[{"0.46025`", ",", "0.012427`"}], "}"}]],
      Annotation[#, {0.46025, 0.012427}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[163]},
       RowBox[{"{", 
         RowBox[{"0.6273`", ",", "0.15863`"}], "}"}]],
      Annotation[#, {0.6273, 0.15863}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[164]},
       RowBox[{"{", 
         RowBox[{"0.57546`", ",", "0.26827`"}], "}"}]],
      Annotation[#, {0.57546, 0.26827}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[165]},
       RowBox[{"{", 
         RowBox[{"0.72523`", ",", "0.44371`"}], "}"}]],
      Annotation[#, {0.72523, 0.44371}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[166]},
       RowBox[{"{", 
         RowBox[{"0.22408`", ",", "0.52412`"}], "}"}]],
      Annotation[#, {0.22408, 0.52412}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[167]},
       RowBox[{"{", 
         RowBox[{"0.44297`", ",", "0.67032`"}], "}"}]],
      Annotation[#, {0.44297, 0.67032}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[168]},
       RowBox[{"{", 
         RowBox[{"0.322`", ",", "0.69225`"}], "}"}]],
      Annotation[#, {0.322, 0.69225}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[169]},
       RowBox[{"{", 
         RowBox[{"0.13767`", ",", "0.57529`"}], "}"}]],
      Annotation[#, {0.13767, 0.57529}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[170]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.0063364`"}], ",", "0.39985`"}], "}"}]],
      Annotation[#, {-0.0063364, 0.39985}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[171]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.092742`"}], ",", "0.55336`"}], "}"}]],
      Annotation[#, {-0.092742, 0.55336}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[172]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.20795`"}], ",", "0.35599`"}], "}"}]],
      Annotation[#, {-0.20795, 0.35599}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[173]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.20795`"}], ",", "0.17325`"}], "}"}]],
      Annotation[#, {-0.20795, 0.17325}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[174]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.43836`"}], ",", "0.21711`"}], "}"}]],
      Annotation[#, {-0.43836, 0.21711}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[175]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.21947`"}], ",", 
           RowBox[{"-", "0.016813`"}]}], "}"}]],
      Annotation[#, {-0.21947, -0.016813}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[176]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.13882`"}], ",", 
           RowBox[{"-", "0.27266`"}]}], "}"}]],
      Annotation[#, {-0.13882, -0.27266}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[177]},
       RowBox[{"{", 
         RowBox[{"0.18376`", ",", "0.93348`"}], "}"}]],
      Annotation[#, {0.18376, 0.93348}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[178]},
       RowBox[{"{", 
         RowBox[{"0.22408`", ",", "0.77997`"}], "}"}]],
      Annotation[#, {0.22408, 0.77997}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[179]},
       RowBox[{"{", 
         RowBox[{"0.29896`", ",", "0.61915`"}], "}"}]],
      Annotation[#, {0.29896, 0.61915}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[180]},
       RowBox[{"{", 
         RowBox[{"0.50634`", ",", "0.75804`"}], "}"}]],
      Annotation[#, {0.50634, 0.75804}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[181]},
       RowBox[{"{", 
         RowBox[{"0.61578`", ",", "0.7288`"}], "}"}]],
      Annotation[#, {0.61578, 0.7288}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[182]},
       RowBox[{"{", 
         RowBox[{"0.60426`", ",", "0.59722`"}], "}"}]],
      Annotation[#, {0.60426, 0.59722}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[183]},
       RowBox[{"{", 
         RowBox[{"0.76555`", ",", "0.50219`"}], "}"}]],
      Annotation[#, {0.76555, 0.50219}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[184]},
       RowBox[{"{", 
         RowBox[{"0.92684`", ",", "0.3633`"}], "}"}]],
      Annotation[#, {0.92684, 0.3633}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[185]},
       RowBox[{"{", 
         RowBox[{"0.82316`", ",", "0.27558`"}], "}"}]],
      Annotation[#, {0.82316, 0.27558}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[186]},
       RowBox[{"{", 
         RowBox[{"0.96141`", ",", "0.085526`"}], "}"}]],
      Annotation[#, {0.96141, 0.085526}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[187]},
       RowBox[{"{", 
         RowBox[{"0.93836`", ",", "0.012427`"}], "}"}]],
      Annotation[#, {0.93836, 0.012427}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[188]},
       RowBox[{"{", 
         RowBox[{"0.86348`", ",", 
           RowBox[{"-", "0.082602`"}]}], "}"}]],
      Annotation[#, {0.86348, -0.082602}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[189]},
       RowBox[{"{", 
         RowBox[{"0.89804`", ",", 
           RowBox[{"-", "0.20687`"}]}], "}"}]],
      Annotation[#, {0.89804, -0.20687}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[190]},
       RowBox[{"{", 
         RowBox[{"0.85196`", ",", 
           RowBox[{"-", "0.36769`"}]}], "}"}]],
      Annotation[#, {0.85196, -0.36769}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[191]},
       RowBox[{"{", 
         RowBox[{"0.82892`", ",", 
           RowBox[{"-", "0.5212`"}]}], "}"}]],
      Annotation[#, {0.82892, -0.5212}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[192]},
       RowBox[{"{", 
         RowBox[{"0.79435`", ",", 
           RowBox[{"-", "0.55775`"}]}], "}"}]],
      Annotation[#, {0.79435, -0.55775}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[193]},
       RowBox[{"{", 
         RowBox[{"0.59274`", ",", 
           RowBox[{"-", "0.7405`"}]}], "}"}]],
      Annotation[#, {0.59274, -0.7405}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[194]},
       RowBox[{"{", 
         RowBox[{"0.51786`", ",", 
           RowBox[{"-", "0.5943`"}]}], "}"}]],
      Annotation[#, {0.51786, -0.5943}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[195]},
       RowBox[{"{", 
         RowBox[{"0.46601`", ",", 
           RowBox[{"-", "0.41886`"}]}], "}"}]],
      Annotation[#, {0.46601, -0.41886}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[196]},
       RowBox[{"{", 
         RowBox[{"0.35081`", ",", 
           RowBox[{"-", "0.57968`"}]}], "}"}]],
      Annotation[#, {0.35081, -0.57968}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[197]},
       RowBox[{"{", 
         RowBox[{"0.28744`", ",", 
           RowBox[{"-", "0.76974`"}]}], "}"}]],
      Annotation[#, {0.28744, -0.76974}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[198]},
       RowBox[{"{", 
         RowBox[{"0.085829`", ",", 
           RowBox[{"-", "0.75512`"}]}], "}"}]],
      Annotation[#, {0.085829, -0.75512}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[199]},
       RowBox[{"{", 
         RowBox[{"0.14919`", ",", 
           RowBox[{"-", "0.57968`"}]}], "}"}]],
      Annotation[#, {0.14919, -0.57968}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[200]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.13306`"}], ",", 
           RowBox[{"-", "0.4481`"}]}], "}"}]],
      Annotation[#, {-0.13306, -0.4481}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[201]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.40956`"}], ",", 
           RowBox[{"-", "0.41155`"}]}], "}"}]],
      Annotation[#, {-0.40956, -0.41155}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[202]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.39228`"}], ",", 
           RowBox[{"-", "0.25804`"}]}], "}"}]],
      Annotation[#, {-0.39228, -0.25804}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[203]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.74366`"}], ",", 
           RowBox[{"-", "0.25804`"}]}], "}"}]],
      Annotation[#, {-0.74366, -0.25804}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[204]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.69758`"}], ",", "0.041667`"}], "}"}]],
      Annotation[#, {-0.69758, 0.041667}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[205]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.75518`"}], ",", "0.2902`"}], "}"}]],
      Annotation[#, {-0.75518, 0.2902}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[206]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.69758`"}], ",", "0.68494`"}], "}"}]],
      Annotation[#, {-0.69758, 0.68494}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[207]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.4038`"}], ",", "0.70687`"}], "}"}]],
      Annotation[#, {-0.4038, 0.70687}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[208]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.38076`"}], ",", "0.91886`"}], "}"}]],
      Annotation[#, {-0.38076, 0.91886}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[209]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.50749`"}], ",", "0.90424`"}], "}"}]],
      Annotation[#, {-0.50749, 0.90424}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[210]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.54781`"}], ",", "0.70687`"}], "}"}]],
      Annotation[#, {-0.54781, 0.70687}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[211]},
       RowBox[{"{", 
         RowBox[{"0.10311`", ",", "0.77997`"}], "}"}]],
      Annotation[#, {0.10311, 0.77997}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[212]},
       RowBox[{"{", 
         RowBox[{"0.057028`", ",", "0.91886`"}], "}"}]],
      Annotation[#, {0.057028, 0.91886}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[213]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.10426`"}], ",", "0.99196`"}], "}"}]],
      Annotation[#, {-0.10426, 0.99196}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[214]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.081221`"}], ",", "1.1089`"}], "}"}]],
      Annotation[#, {-0.081221, 1.1089}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[215]},
       RowBox[{"{", 
         RowBox[{"0.28744`", ",", "1.087`"}], "}"}]],
      Annotation[#, {0.28744, 1.087}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[216]},
       RowBox[{"{", 
         RowBox[{"0.39689`", ",", "0.82383`"}], "}"}]],
      Annotation[#, {0.39689, 0.82383}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[217]},
       RowBox[{"{", 
         RowBox[{"0.63882`", ",", "0.88962`"}], "}"}]],
      Annotation[#, {0.63882, 0.88962}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[218]},
       RowBox[{"{", 
         RowBox[{"0.82316`", ",", "0.66301`"}], "}"}]],
      Annotation[#, {0.82316, 0.66301}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[219]},
       RowBox[{"{", 
         RowBox[{"0.67339`", ",", "0.64108`"}], "}"}]],
      Annotation[#, {0.67339, 0.64108}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[220]},
       RowBox[{"{", 
         RowBox[{"1.0709`", ",", "0.10015`"}], "}"}]],
      Annotation[#, {1.0709, 0.10015}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[221]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.046659`"}], ",", 
           RowBox[{"-", "0.57968`"}]}], "}"}]],
      Annotation[#, {-0.046659, -0.57968}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[222]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.23675`"}], ",", 
           RowBox[{"-", "0.63816`"}]}], "}"}]],
      Annotation[#, {-0.23675, -0.63816}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[223]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.15035`"}], ",", 
           RowBox[{"-", "0.36769`"}]}], "}"}]],
      Annotation[#, {-0.15035, -0.36769}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[224]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.49021`"}], ",", 
           RowBox[{"-", "0.3019`"}]}], "}"}]],
      Annotation[#, {-0.49021, -0.3019}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[225]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.46717`"}], ",", 
           RowBox[{"-", "0.13377`"}]}], "}"}]],
      Annotation[#, {-0.46717, -0.13377}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[226]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.28859`"}], ",", 
           RowBox[{"-", "0.060673`"}]}], "}"}]],
      Annotation[#, {-0.28859, -0.060673}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[227]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.61118`"}], ",", 
           RowBox[{"-", "0.067982`"}]}], "}"}]],
      Annotation[#, {-0.61118, -0.067982}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[228]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.66302`"}], ",", 
           RowBox[{"-", "0.21418`"}]}], "}"}]],
      Annotation[#, {-0.66302, -0.21418}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[229]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.59965`"}], ",", 
           RowBox[{"-", "0.41886`"}]}], "}"}]],
      Annotation[#, {-0.59965, -0.41886}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[230]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.72638`"}], ",", 
           RowBox[{"-", "0.082602`"}]}], "}"}]],
      Annotation[#, {-0.72638, -0.082602}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[231]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.83007`"}], ",", "0.31213`"}], "}"}]],
      Annotation[#, {-0.83007, 0.31213}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[232]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.72062`"}], ",", "0.53874`"}], "}"}]],
      Annotation[#, {-0.72062, 0.53874}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[233]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.59389`"}], ",", "0.49488`"}], "}"}]],
      Annotation[#, {-0.59389, 0.49488}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[234]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.48445`"}], ",", "0.99927`"}], "}"}]],
      Annotation[#, {-0.48445, 0.99927}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[235]},
       RowBox[{"{", 
         RowBox[{
           RowBox[{"-", "0.0063364`"}], ",", "0.99927`"}], "}"}]],
      Annotation[#, {-0.0063364, 0.99927}, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[236]},
       RowBox[{"{", 
         RowBox[{"0.63265`", ",", 
           RowBox[{"-", "0.030612`"}]}], "}"}]],
      Annotation[#, {0.63265, -0.030612}, "Tooltip"]& ]}}],
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"x1\"", TraditionalForm], 
    FormBox["\"x2\"", TraditionalForm]},
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.560460283786356*^9, 3.5604637101840353`*^9, 
  3.560470506407056*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Feature mapping:  generating non-linear features from original features x1, x2\
\>", "Subsection",
 CellChangeTimes->{{3.56043309729828*^9, 3.560433112608149*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sortfun", "[", "expr_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"expr", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", " ", "10"}], ",", 
          RowBox[{"x2", "\[Rule]", " ", "10"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"expr", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", " ", "1"}], ",", 
          RowBox[{"x2", "\[Rule]", " ", "10"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"expr", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", " ", "10"}], ",", 
          RowBox[{"x2", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.560444740440506*^9, 3.560444760243924*^9}, {
  3.560444802812895*^9, 3.560444810880014*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nonLinearFeatures", "=", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x1", "^", "p1"}], " ", 
          RowBox[{"x2", "^", "p2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"p1", ",", "0", ",", 
           RowBox[{"6", "-", "p2"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"p2", ",", "0", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
    "sortfun"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560433937305526*^9, 3.560434109614493*^9}, {
  3.56044042258217*^9, 3.560440423509881*^9}, {3.560441156997121*^9, 
  3.560441161142538*^9}, {3.560441605651526*^9, 3.560441627956543*^9}, {
  3.560442425767783*^9, 3.5604424558086967`*^9}, {3.5604424932860003`*^9, 
  3.5604424969573593`*^9}, {3.5604425336747932`*^9, 3.560442566040172*^9}, {
  3.5604426238203783`*^9, 3.5604426275749273`*^9}, {3.560442739040504*^9, 
  3.5604427616681833`*^9}, {3.560444787481765*^9, 3.560444790501588*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x1", ",", "x2", ",", 
   SuperscriptBox["x1", "2"], ",", 
   RowBox[{"x1", " ", "x2"}], ",", 
   SuperscriptBox["x2", "2"], ",", 
   SuperscriptBox["x1", "3"], ",", 
   RowBox[{
    SuperscriptBox["x1", "2"], " ", "x2"}], ",", 
   RowBox[{"x1", " ", 
    SuperscriptBox["x2", "2"]}], ",", 
   SuperscriptBox["x2", "3"], ",", 
   SuperscriptBox["x1", "4"], ",", 
   RowBox[{
    SuperscriptBox["x1", "3"], " ", "x2"}], ",", 
   RowBox[{
    SuperscriptBox["x1", "2"], " ", 
    SuperscriptBox["x2", "2"]}], ",", 
   RowBox[{"x1", " ", 
    SuperscriptBox["x2", "3"]}], ",", 
   SuperscriptBox["x2", "4"], ",", 
   SuperscriptBox["x1", "5"], ",", 
   RowBox[{
    SuperscriptBox["x1", "4"], " ", "x2"}], ",", 
   RowBox[{
    SuperscriptBox["x1", "3"], " ", 
    SuperscriptBox["x2", "2"]}], ",", 
   RowBox[{
    SuperscriptBox["x1", "2"], " ", 
    SuperscriptBox["x2", "3"]}], ",", 
   RowBox[{"x1", " ", 
    SuperscriptBox["x2", "4"]}], ",", 
   SuperscriptBox["x2", "5"], ",", 
   SuperscriptBox["x1", "6"], ",", 
   RowBox[{
    SuperscriptBox["x1", "5"], " ", "x2"}], ",", 
   RowBox[{
    SuperscriptBox["x1", "4"], " ", 
    SuperscriptBox["x2", "2"]}], ",", 
   RowBox[{
    SuperscriptBox["x1", "3"], " ", 
    SuperscriptBox["x2", "3"]}], ",", 
   RowBox[{
    SuperscriptBox["x1", "2"], " ", 
    SuperscriptBox["x2", "4"]}], ",", 
   RowBox[{"x1", " ", 
    SuperscriptBox["x2", "5"]}], ",", 
   SuperscriptBox["x2", "6"]}], "}"}]], "Output",
 CellChangeTimes->{3.560460301354577*^9, 3.560463710291092*^9, 
  3.56047050664063*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"XNonlinear", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"nonLinearFeatures", "/.", "#"}], "&"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"MapThread", "[", 
        RowBox[{"Rule", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "x1", ",", "x2"}], "}"}], ",", "#"}], "}"}]}], 
        "]"}], "&"}], "/@", "X"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560434117558343*^9, 3.560434120366324*^9}, {
   3.56043415471796*^9, 3.560434230704266*^9}, 3.56043427912873*^9, 
   3.5604411666401777`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"XNonlinear", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.560434237810058*^9, 3.5604342649044867`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
L5/s/7f+W/+t/wf1v+hTUVM=
   "], {{0, 0}, {118, 28}}, {0, 1.8593206849359918`}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.560460321252719*^9, 3.560463710424543*^9, 
  3.5604705067433357`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cost function", "Subsection",
 CellChangeTimes->{{3.5603448327102613`*^9, 3.5603448346562843`*^9}}],

Cell["\<\
Hypothesis function h as a function of fitting parameter and feature matrix:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.5603607370330477`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"\[Beta]_", ",", "X_"}], "]"}], ":=", 
   RowBox[{"Sigmoid", "[", 
    RowBox[{"X", ".", "\[Beta]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560344893016271*^9, 3.5603449257945633`*^9}, {
  3.560345362631785*^9, 3.5603453660810413`*^9}, {3.560388281671052*^9, 
  3.560388295500667*^9}}],

Cell["\<\
Cost function J as a function of fitting parameter and the example data set \
including the feature matrix X and the observed dependent variable y:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.5603607982902308`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", 
   RowBox[{"\[Beta]_", ",", "X_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"Length", "[", "y", "]"}]]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"y", ".", 
      RowBox[{"Log", "[", 
       RowBox[{"h", "[", 
        RowBox[{"\[Beta]", ",", "X"}], "]"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}], ".", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", 
        RowBox[{"h", "[", 
         RowBox[{"\[Beta]", ",", "X"}], "]"}]}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.560344971702932*^9, 3.560345093055242*^9}, {
  3.5603453973447437`*^9, 3.560345400386454*^9}, {3.560388296882201*^9, 
  3.56038829872591*^9}}],

Cell["Cost function J with regularization:", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.5603607982902308`*^9}, {3.560437021420858*^9, 3.560437027784616*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", 
   RowBox[{"\[Beta]_", ",", "X_", ",", "y_", ",", "\[Lambda]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"Length", "[", "y", "]"}]]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"y", ".", 
       RowBox[{"Log", "[", 
        RowBox[{"h", "[", 
         RowBox[{"\[Beta]", ",", "X"}], "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "y"}], ")"}], ".", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", 
         RowBox[{"h", "[", 
          RowBox[{"\[Beta]", ",", "X"}], "]"}]}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["\[Lambda]", 
     RowBox[{"2", "*", 
      RowBox[{"Length", "[", "y", "]"}]}]], 
    RowBox[{"\[Beta]", ".", "\[Beta]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.560344971702932*^9, 3.560345093055242*^9}, {
  3.5603453973447437`*^9, 3.560345400386454*^9}, {3.560388296882201*^9, 
  3.56038829872591*^9}, {3.560437030356494*^9, 3.5604370780301037`*^9}, {
  3.560438221638652*^9, 3.56043822738102*^9}}],

Cell["\<\
Define the fitting parameter vector \[Beta] and components with right \
dimension:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5604603777826557`*^9, 3.5604604056462727`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Beta]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Symbol", "[", 
     RowBox[{"\"\<\[Beta]\>\"", "<>", 
      RowBox[{"ToString", "[", "j", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"XNonlinear", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.560346379559832*^9, 3.5603464091311693`*^9}, {
   3.560346930412478*^9, 3.560346951829324*^9}, {3.5603472280277777`*^9, 
   3.560347232498569*^9}, {3.560354069071241*^9, 3.560354085023467*^9}, {
   3.560388300079707*^9, 3.560388301303596*^9}, 3.560434357987668*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Beta]0", ",", "\[Beta]1", ",", "\[Beta]2", ",", "\[Beta]3", ",", 
   "\[Beta]4", ",", "\[Beta]5", ",", "\[Beta]6", ",", "\[Beta]7", ",", 
   "\[Beta]8", ",", "\[Beta]9", ",", "\[Beta]10", ",", "\[Beta]11", ",", 
   "\[Beta]12", ",", "\[Beta]13", ",", "\[Beta]14", ",", "\[Beta]15", ",", 
   "\[Beta]16", ",", "\[Beta]17", ",", "\[Beta]18", ",", "\[Beta]19", ",", 
   "\[Beta]20", ",", "\[Beta]21", ",", "\[Beta]22", ",", "\[Beta]23", ",", 
   "\[Beta]24", ",", "\[Beta]25", ",", "\[Beta]26", ",", "\[Beta]27"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.560460369566325*^9, 3.5604637104876633`*^9, 
  3.560470506906847*^9}]
}, Open  ]],

Cell["\<\
Cost function at \[Beta]Init = {0, 0, 0, ..., 0}\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560434930522821*^9, 3.560434942638568*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]Init", "=", 
  RowBox[{"Table", "[", 
   RowBox[{"0", ",", 
    RowBox[{"{", 
     RowBox[{"Length", "[", 
      RowBox[{"XNonlinear", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560434386662261*^9, 3.560434421108294*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.56046041048246*^9, 3.560463710528717*^9, 
  3.560470506965208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "[", 
  RowBox[{"\[Beta]Init", ",", "XNonlinear", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.5603608870072393`*^9, 3.5603608903323593`*^9}, {
  3.5604343713050623`*^9, 3.560434384961134*^9}, {3.560434424393808*^9, 
  3.5604344321296577`*^9}}],

Cell[BoxData["0.6931471805599453`"], "Output",
 CellChangeTimes->{3.560460417418207*^9, 3.560463710560417*^9, 
  3.5604705070323133`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]Init", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.560437136530282*^9, 3.5604371428430243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J", "[", 
  RowBox[{"\[Beta]Init", ",", "XNonlinear", ",", "y", ",", "\[Lambda]Init"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.560437105859045*^9, {3.5604371469574947`*^9, 3.560437181724147*^9}}],

Cell[BoxData["0.6931471805599453`"], "Output",
 CellChangeTimes->{3.56046042162251*^9, 3.5604637106285543`*^9, 
  3.560470507106661*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find best fitting parameter vector \[Beta] to minimize cost function J\
\>", "Subsection",
 CellChangeTimes->{{3.56036190675616*^9, 3.560361914647367*^9}, 
   3.5603883041381063`*^9, {3.560460110863311*^9, 3.560460136747086*^9}}],

Cell[CellGroupData[{

Cell["Use NMinimize", "Subsubsection",
 CellChangeTimes->{{3.560384167876216*^9, 3.560384176864921*^9}}],

Cell["\<\
Using NMinimize naively causes NMinimize::nnum error as the function J has \
singularity at {\[Beta]0,\[Beta]1,\[Beta]10,\[Beta]11,\[Beta]12,\[Beta]13,\
\[Beta]14,\[Beta]15,\[Beta]16,\[Beta]17,\[Beta]18,\[Beta]19,\[Beta]2,\[Beta]\
20,\[Beta]21,\[Beta]22,\[Beta]23,\[Beta]24,\[Beta]25,\[Beta]26,\[Beta]27,\
\[Beta]3,\[Beta]4,\[Beta]5,\[Beta]6,\[Beta]7,\[Beta]8,\[Beta]9,\[Lambda]} = \
{12.6559,18.8815,-29.085,-51.1986,29.671,16.936,-80.5918,-33.3686,-37.909,-32.\
1894,12.2811,50.7038,-23.9778,-28.0593,\[LeftSkeleton]18\[RightSkeleton],-18.\
4441,43.3584,59.3545,-63.1989,39.4808,-6.06265,-69.0835,-23.0398,35.274,-3.\
6493,24.3274,-77.6666,-24.3271,-72.0648}\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.5604383939549093`*^9, 3.560438403851671*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"res", "=", 
    RowBox[{"TimeConstrained", "[", 
     RowBox[{
      RowBox[{"NMinimize", "[", 
       RowBox[{
        RowBox[{"J", "[", 
         RowBox[{
         "\[Beta]", ",", "XNonlinear", ",", "y", ",", "\[Lambda]Init"}], 
         "]"}], ",", 
        RowBox[{"Evaluate", "[", "\[Beta]", "]"}], ",", 
        RowBox[{"MaxIterations", "\[Rule]", " ", "1000"}]}], "]"}], ",", 
      "300"}], "]"}]}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.560361695809493*^9, 3.560361709031636*^9}, 
   3.560384287788104*^9, {3.560388307061796*^9, 3.560388309767226*^9}, {
   3.5604349565836277`*^9, 3.560434991169346*^9}, {3.560435026841714*^9, 
   3.560435029673339*^9}, {3.560437992973352*^9, 3.5604379960628138`*^9}, {
   3.560438068801566*^9, 3.5604380762081633`*^9}, {3.560438106520369*^9, 
   3.560438159120975*^9}, {3.560438364918077*^9, 3.5604383786235743`*^9}, {
   3.560445946165629*^9, 3.5604459536589737`*^9}, {3.560456184705401*^9, 
   3.560456187858981*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20.484823`7.762977209261071", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5604605122696257`*^9, 3.5604637350566607`*^9, 
  3.560470527595902*^9}]
}, Open  ]],

Cell["Regularize J removing its singularities: ", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.5604395770345583`*^9, 3.560439597938939*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"regularize", "[", "Indeterminate", "]"}], ":=", 
   "$MaxMachineNumber"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"regularize", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", "x"}]}], "Input",
 CellChangeTimes->{{3.560384486532398*^9, 3.56038451821692*^9}, {
  3.560445970754393*^9, 3.560445972328702*^9}, {3.560446063884033*^9, 
  3.560446064867325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"res1", "=", 
    RowBox[{"NMinimize", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{"\[Beta]", ",", "XNonlinear", ",", "y", ",", "0"}], "]"}]}], 
      ",", 
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"res2", "=", 
    RowBox[{"NMinimize", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{"\[Beta]", ",", "XNonlinear", ",", "y", ",", "1"}], "]"}]}], 
      ",", 
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"res3", "=", 
    RowBox[{"NMinimize", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{"\[Beta]", ",", "XNonlinear", ",", "y", ",", "10"}], "]"}]}], 
      ",", 
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"res4", "=", 
    RowBox[{"NMinimize", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{"\[Beta]", ",", "XNonlinear", ",", "y", ",", "100"}], "]"}]}],
       ",", 
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]}], "Input",
 CellChangeTimes->{{3.560384527243575*^9, 3.5603845445608473`*^9}, {
   3.560388319760144*^9, 3.560388322413134*^9}, {3.560435000164302*^9, 
   3.56043502069762*^9}, {3.560435375466391*^9, 3.560435397622551*^9}, {
   3.560438414947391*^9, 3.560438423845697*^9}, {3.560438601912835*^9, 
   3.5604386024486837`*^9}, 3.560438633671171*^9, {3.560439100751445*^9, 
   3.5604391013111143`*^9}, {3.5604460528219433`*^9, 3.560446078844186*^9}, {
   3.56044722506559*^9, 3.5604472298385563`*^9}, 3.560447560200741*^9, {
   3.560449181271593*^9, 3.560449181706094*^9}, {3.560471489522752*^9, 
   3.560471515342925*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.216057`7.9982857216461065", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5604605300814323`*^9, 3.560463752680594*^9, 
  3.560470542905148*^9, 3.560471551919758*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.82945`7.524509546448686", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5604605300814323`*^9, 3.560463752680594*^9, 
  3.560470542905148*^9, 3.56047156374901*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.182835`7.537293355814941", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5604605300814323`*^9, 3.560463752680594*^9, 
  3.560470542905148*^9, 3.560471575932714*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11.364553`7.507097351863056", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5604605300814323`*^9, 3.560463752680594*^9, 
  3.560470542905148*^9, 3.560471587298283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["res"], "Input",
 CellChangeTimes->{{3.560446446191*^9, 3.560446446535656*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4886088756741433`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", "1.5759799962067582`"}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "0.9410817920831274`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "1.6479291901441242`"}], ",", 
     RowBox[{"\[Beta]3", "\[Rule]", 
      RowBox[{"-", "2.543454347248704`"}]}], ",", 
     RowBox[{"\[Beta]4", "\[Rule]", 
      RowBox[{"-", "1.4816811291925662`"}]}], ",", 
     RowBox[{"\[Beta]5", "\[Rule]", 
      RowBox[{"-", "1.9305634540431045`"}]}], ",", 
     RowBox[{"\[Beta]6", "\[Rule]", "0.2762473959252431`"}], ",", 
     RowBox[{"\[Beta]7", "\[Rule]", 
      RowBox[{"-", "0.5729609846152576`"}]}], ",", 
     RowBox[{"\[Beta]8", "\[Rule]", 
      RowBox[{"-", "0.48984281858114764`"}]}], ",", 
     RowBox[{"\[Beta]9", "\[Rule]", 
      RowBox[{"-", "0.19249728820417095`"}]}], ",", 
     RowBox[{"\[Beta]10", "\[Rule]", 
      RowBox[{"-", "1.948756487144024`"}]}], ",", 
     RowBox[{"\[Beta]11", "\[Rule]", 
      RowBox[{"-", "0.012340009937425428`"}]}], ",", 
     RowBox[{"\[Beta]12", "\[Rule]", 
      RowBox[{"-", "0.8942296880398626`"}]}], ",", 
     RowBox[{"\[Beta]13", "\[Rule]", 
      RowBox[{"-", "0.46297597319325173`"}]}], ",", 
     RowBox[{"\[Beta]14", "\[Rule]", 
      RowBox[{"-", "1.60821543178697`"}]}], ",", 
     RowBox[{"\[Beta]15", "\[Rule]", 
      RowBox[{"-", "0.3029236198842339`"}]}], ",", 
     RowBox[{"\[Beta]16", "\[Rule]", 
      RowBox[{"-", "0.29723997352111475`"}]}], ",", 
     RowBox[{"\[Beta]17", "\[Rule]", "0.0016611347469751927`"}], ",", 
     RowBox[{"\[Beta]18", "\[Rule]", 
      RowBox[{"-", "0.4401673100674348`"}]}], ",", 
     RowBox[{"\[Beta]19", "\[Rule]", 
      RowBox[{"-", "0.4715427419415693`"}]}], ",", 
     RowBox[{"\[Beta]20", "\[Rule]", 
      RowBox[{"-", "0.4918924203657763`"}]}], ",", 
     RowBox[{"\[Beta]21", "\[Rule]", 
      RowBox[{"-", "1.4316186952895016`"}]}], ",", 
     RowBox[{"\[Beta]22", "\[Rule]", "0.08762290005455388`"}], ",", 
     RowBox[{"\[Beta]23", "\[Rule]", 
      RowBox[{"-", "0.41975839948176935`"}]}], ",", 
     RowBox[{"\[Beta]24", "\[Rule]", "0.05804701445614692`"}], ",", 
     RowBox[{"\[Beta]25", "\[Rule]", 
      RowBox[{"-", "0.49370549194482355`"}]}], ",", 
     RowBox[{"\[Beta]26", "\[Rule]", 
      RowBox[{"-", "0.26610291658359336`"}]}], ",", 
     RowBox[{"\[Beta]27", "\[Rule]", 
      RowBox[{"-", "1.1536804460830292`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5604605301828938`*^9, 3.5604637527846813`*^9, 
  3.56047054302221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"JMinNMinimize1", "=", 
  RowBox[{"res1", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]FitNMinimize1", "=", 
   RowBox[{"res1", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"JMinNMinimize2", "=", 
  RowBox[{"res2", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]FitNMinimize2", "=", 
   RowBox[{"res2", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"JMinNMinimize3", "=", 
  RowBox[{"res3", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]FitNMinimize3", "=", 
   RowBox[{"res3", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"JMinNMinimize4", "=", 
  RowBox[{"res4", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]FitNMinimize4", "=", 
  RowBox[{"res4", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5603845477842073`*^9, 3.5603845479643717`*^9}, {
   3.560435387608778*^9, 3.5604354201874638`*^9}, {3.560438448014072*^9, 
   3.56043845276642*^9}, 3.560447270347579*^9, {3.560471521974497*^9, 
   3.56047154693414*^9}}],

Cell[BoxData["0.2192904014088748`"], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.560471587437625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", "38.23036468734516`"}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", "55.59543065086716`"}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "98.14628289346021`"}], ",", 
   RowBox[{"\[Beta]3", "\[Rule]", 
    RowBox[{"-", "369.424742998777`"}]}], ",", 
   RowBox[{"\[Beta]4", "\[Rule]", 
    RowBox[{"-", "177.11681699170055`"}]}], ",", 
   RowBox[{"\[Beta]5", "\[Rule]", 
    RowBox[{"-", "194.25786561726866`"}]}], ",", 
   RowBox[{"\[Beta]6", "\[Rule]", 
    RowBox[{"-", "366.0052570882129`"}]}], ",", 
   RowBox[{"\[Beta]7", "\[Rule]", 
    RowBox[{"-", "842.2052479123489`"}]}], ",", 
   RowBox[{"\[Beta]8", "\[Rule]", 
    RowBox[{"-", "719.4449193631826`"}]}], ",", 
   RowBox[{"\[Beta]9", "\[Rule]", 
    RowBox[{"-", "511.8938948548222`"}]}], ",", 
   RowBox[{"\[Beta]10", "\[Rule]", "1182.6842352587944`"}], ",", 
   RowBox[{"\[Beta]11", "\[Rule]", "1279.3224145913498`"}], ",", 
   RowBox[{"\[Beta]12", "\[Rule]", "1907.8747685687401`"}], ",", 
   RowBox[{"\[Beta]13", "\[Rule]", "914.3060410646514`"}], ",", 
   RowBox[{"\[Beta]14", "\[Rule]", "514.2754403208446`"}], ",", 
   RowBox[{"\[Beta]15", "\[Rule]", "573.2171174738475`"}], ",", 
   RowBox[{"\[Beta]16", "\[Rule]", "1629.7384730921174`"}], ",", 
   RowBox[{"\[Beta]17", "\[Rule]", "2553.5908222914413`"}], ",", 
   RowBox[{"\[Beta]18", "\[Rule]", "2919.0577884969184`"}], ",", 
   RowBox[{"\[Beta]19", "\[Rule]", "1780.605228221617`"}], ",", 
   RowBox[{"\[Beta]20", "\[Rule]", "785.3156633025543`"}], ",", 
   RowBox[{"\[Beta]21", "\[Rule]", 
    RowBox[{"-", "1257.8956480748088`"}]}], ",", 
   RowBox[{"\[Beta]22", "\[Rule]", 
    RowBox[{"-", "2259.976153272608`"}]}], ",", 
   RowBox[{"\[Beta]23", "\[Rule]", 
    RowBox[{"-", "4142.751186322558`"}]}], ",", 
   RowBox[{"\[Beta]24", "\[Rule]", 
    RowBox[{"-", "4290.554371855803`"}]}], ",", 
   RowBox[{"\[Beta]25", "\[Rule]", 
    RowBox[{"-", "4229.623845218967`"}]}], ",", 
   RowBox[{"\[Beta]26", "\[Rule]", 
    RowBox[{"-", "2055.537909045051`"}]}], ",", 
   RowBox[{"\[Beta]27", "\[Rule]", 
    RowBox[{"-", "750.3797799024617`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.560471587441551*^9}],

Cell[BoxData["0.5351602503809062`"], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.560471587444809*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", "1.1421349413949629`"}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", "0.6013206992316362`"}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "1.167183306967721`"}], ",", 
   RowBox[{"\[Beta]3", "\[Rule]", 
    RowBox[{"-", "1.871746021918109`"}]}], ",", 
   RowBox[{"\[Beta]4", "\[Rule]", 
    RowBox[{"-", "0.9157338885044931`"}]}], ",", 
   RowBox[{"\[Beta]5", "\[Rule]", 
    RowBox[{"-", "1.2695293411108353`"}]}], ",", 
   RowBox[{"\[Beta]6", "\[Rule]", "0.1266829508604525`"}], ",", 
   RowBox[{"\[Beta]7", "\[Rule]", 
    RowBox[{"-", "0.3687311715903987`"}]}], ",", 
   RowBox[{"\[Beta]8", "\[Rule]", 
    RowBox[{"-", "0.3451842152419499`"}]}], ",", 
   RowBox[{"\[Beta]9", "\[Rule]", 
    RowBox[{"-", "0.1737758215527054`"}]}], ",", 
   RowBox[{"\[Beta]10", "\[Rule]", 
    RowBox[{"-", "1.4238598804082194`"}]}], ",", 
   RowBox[{"\[Beta]11", "\[Rule]", 
    RowBox[{"-", "0.04855641474308441`"}]}], ",", 
   RowBox[{"\[Beta]12", "\[Rule]", 
    RowBox[{"-", "0.6064196845410812`"}]}], ",", 
   RowBox[{"\[Beta]13", "\[Rule]", 
    RowBox[{"-", "0.26931836012072896`"}]}], ",", 
   RowBox[{"\[Beta]14", "\[Rule]", 
    RowBox[{"-", "1.1631598974973163`"}]}], ",", 
   RowBox[{"\[Beta]15", "\[Rule]", 
    RowBox[{"-", "0.24310143794161462`"}]}], ",", 
   RowBox[{"\[Beta]16", "\[Rule]", 
    RowBox[{"-", "0.20707426137339366`"}]}], ",", 
   RowBox[{"\[Beta]17", "\[Rule]", 
    RowBox[{"-", "0.04318486337910803`"}]}], ",", 
   RowBox[{"\[Beta]18", "\[Rule]", 
    RowBox[{"-", "0.2802808737261971`"}]}], ",", 
   RowBox[{"\[Beta]19", "\[Rule]", 
    RowBox[{"-", "0.2869562470985799`"}]}], ",", 
   RowBox[{"\[Beta]20", "\[Rule]", 
    RowBox[{"-", "0.46910538786929556`"}]}], ",", 
   RowBox[{"\[Beta]21", "\[Rule]", 
    RowBox[{"-", "1.036180802027848`"}]}], ",", 
   RowBox[{"\[Beta]22", "\[Rule]", "0.029235077367497576`"}], ",", 
   RowBox[{"\[Beta]23", "\[Rule]", 
    RowBox[{"-", "0.2926221944435167`"}]}], ",", 
   RowBox[{"\[Beta]24", "\[Rule]", "0.017366811487270956`"}], ",", 
   RowBox[{"\[Beta]25", "\[Rule]", 
    RowBox[{"-", "0.3289723611146497`"}]}], ",", 
   RowBox[{"\[Beta]26", "\[Rule]", 
    RowBox[{"-", "0.1379595080654664`"}]}], ",", 
   RowBox[{"\[Beta]27", "\[Rule]", 
    RowBox[{"-", "0.9319895961536784`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.5604715874477997`*^9}],

Cell[BoxData["0.6511827032416996`"], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.560471587451028*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", "0.2147136905780186`"}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", 
    RowBox[{"-", "0.007594246346729309`"}]}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "0.17609634594466822`"}], ",", 
   RowBox[{"\[Beta]3", "\[Rule]", 
    RowBox[{"-", "0.40128039915300645`"}]}], ",", 
   RowBox[{"\[Beta]4", "\[Rule]", 
    RowBox[{"-", "0.11744852256595001`"}]}], ",", 
   RowBox[{"\[Beta]5", "\[Rule]", 
    RowBox[{"-", "0.23187720410424695`"}]}], ",", 
   RowBox[{"\[Beta]6", "\[Rule]", 
    RowBox[{"-", "0.0666800072202526`"}]}], ",", 
   RowBox[{"\[Beta]7", "\[Rule]", 
    RowBox[{"-", "0.05584262932779163`"}]}], ",", 
   RowBox[{"\[Beta]8", "\[Rule]", 
    RowBox[{"-", "0.06214433464397819`"}]}], ",", 
   RowBox[{"\[Beta]9", "\[Rule]", 
    RowBox[{"-", "0.09712320664318726`"}]}], ",", 
   RowBox[{"\[Beta]10", "\[Rule]", 
    RowBox[{"-", "0.31766630908068666`"}]}], ",", 
   RowBox[{"\[Beta]11", "\[Rule]", 
    RowBox[{"-", "0.014680696479255576`"}]}], ",", 
   RowBox[{"\[Beta]12", "\[Rule]", 
    RowBox[{"-", "0.10912918480896443`"}]}], ",", 
   RowBox[{"\[Beta]13", "\[Rule]", 
    RowBox[{"-", "0.030142920585869693`"}]}], ",", 
   RowBox[{"\[Beta]14", "\[Rule]", 
    RowBox[{"-", "0.26765332191792174`"}]}], ",", 
   RowBox[{"\[Beta]15", "\[Rule]", 
    RowBox[{"-", "0.11186993879493658`"}]}], ",", 
   RowBox[{"\[Beta]16", "\[Rule]", 
    RowBox[{"-", "0.03627430873533777`"}]}], ",", 
   RowBox[{"\[Beta]17", "\[Rule]", 
    RowBox[{"-", "0.021144852902208997`"}]}], ",", 
   RowBox[{"\[Beta]18", "\[Rule]", 
    RowBox[{"-", "0.047536428491034226`"}]}], ",", 
   RowBox[{"\[Beta]19", "\[Rule]", 
    RowBox[{"-", "0.04037688641836404`"}]}], ",", 
   RowBox[{"\[Beta]20", "\[Rule]", 
    RowBox[{"-", "0.18120232890071689`"}]}], ",", 
   RowBox[{"\[Beta]21", "\[Rule]", 
    RowBox[{"-", "0.24308855743105082`"}]}], ",", 
   RowBox[{"\[Beta]22", "\[Rule]", 
    RowBox[{"-", "0.0036420692731302965`"}]}], ",", 
   RowBox[{"\[Beta]23", "\[Rule]", 
    RowBox[{"-", "0.05525124047506288`"}]}], ",", 
   RowBox[{"\[Beta]24", "\[Rule]", 
    RowBox[{"-", "0.0010144514567487516`"}]}], ",", 
   RowBox[{"\[Beta]25", "\[Rule]", 
    RowBox[{"-", "0.06093902129217504`"}]}], ",", 
   RowBox[{"\[Beta]26", "\[Rule]", 
    RowBox[{"-", "0.012938518456826077`"}]}], ",", 
   RowBox[{"\[Beta]27", "\[Rule]", 
    RowBox[{"-", "0.26289806204294314`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.560471587454006*^9}],

Cell[BoxData["0.6865272791414708`"], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.560471587457045*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", "0.004686393818729945`"}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", 
    RowBox[{"-", "0.017268512928123994`"}]}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "0.006419565612289005`"}], ",", 
   RowBox[{"\[Beta]3", "\[Rule]", 
    RowBox[{"-", "0.05402666467428378`"}]}], ",", 
   RowBox[{"\[Beta]4", "\[Rule]", 
    RowBox[{"-", "0.013275614657397608`"}]}], ",", 
   RowBox[{"\[Beta]5", "\[Rule]", 
    RowBox[{"-", "0.03727153103610352`"}]}], ",", 
   RowBox[{"\[Beta]6", "\[Rule]", 
    RowBox[{"-", "0.018211930272488058`"}]}], ",", 
   RowBox[{"\[Beta]7", "\[Rule]", 
    RowBox[{"-", "0.007610399191308554`"}]}], ",", 
   RowBox[{"\[Beta]8", "\[Rule]", 
    RowBox[{"-", "0.00885309965691589`"}]}], ",", 
   RowBox[{"\[Beta]9", "\[Rule]", 
    RowBox[{"-", "0.022245711272531478`"}]}], ",", 
   RowBox[{"\[Beta]10", "\[Rule]", 
    RowBox[{"-", "0.04288367434711196`"}]}], ",", 
   RowBox[{"\[Beta]11", "\[Rule]", 
    RowBox[{"-", "0.0023858654464389327`"}]}], ",", 
   RowBox[{"\[Beta]12", "\[Rule]", 
    RowBox[{"-", "0.01393200071403749`"}]}], ",", 
   RowBox[{"\[Beta]13", "\[Rule]", 
    RowBox[{"-", "0.0035483285730602116`"}]}], ",", 
   RowBox[{"\[Beta]14", "\[Rule]", 
    RowBox[{"-", "0.04072376148630121`"}]}], ",", 
   RowBox[{"\[Beta]15", "\[Rule]", 
    RowBox[{"-", "0.020785725544382294`"}]}], ",", 
   RowBox[{"\[Beta]16", "\[Rule]", 
    RowBox[{"-", "0.0046720534985891455`"}]}], ",", 
   RowBox[{"\[Beta]17", "\[Rule]", 
    RowBox[{"-", "0.0035498050869903464`"}]}], ",", 
   RowBox[{"\[Beta]18", "\[Rule]", 
    RowBox[{"-", "0.006248971708272024`"}]}], ",", 
   RowBox[{"\[Beta]19", "\[Rule]", 
    RowBox[{"-", "0.005003955872916698`"}]}], ",", 
   RowBox[{"\[Beta]20", "\[Rule]", 
    RowBox[{"-", "0.03153152560454222`"}]}], ",", 
   RowBox[{"\[Beta]21", "\[Rule]", 
    RowBox[{"-", "0.03381512108366967`"}]}], ",", 
   RowBox[{"\[Beta]22", "\[Rule]", 
    RowBox[{"-", "0.0010831882653128603`"}]}], ",", 
   RowBox[{"\[Beta]23", "\[Rule]", 
    RowBox[{"-", "0.006941938423802738`"}]}], ",", 
   RowBox[{"\[Beta]24", "\[Rule]", 
    RowBox[{"-", "0.00039450385931261676`"}]}], ",", 
   RowBox[{"\[Beta]25", "\[Rule]", 
    RowBox[{"-", "0.007885961265377397`"}]}], ",", 
   RowBox[{"\[Beta]26", "\[Rule]", 
    RowBox[{"-", "0.0015768566452031532`"}]}], ",", 
   RowBox[{"\[Beta]27", "\[Rule]", 
    RowBox[{"-", "0.040588521868169275`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460539571477*^9, 3.5604637528304996`*^9, 
  3.560470543200096*^9, 3.5604715874598637`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use FindMinimum", "Subsubsection",
 CellChangeTimes->{{3.560384167876216*^9, 3.560384176864921*^9}, {
  3.560392698102888*^9, 3.5603927014366817`*^9}}],

Cell["\<\
Using NMinimize naively doesn\[CloseCurlyQuote]t work well as it doesn\
\[CloseCurlyQuote]t can give FindMinimum::lstol error when it fails to find a \
direction with sufficient decrease in the function to be minimized\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.5604565266711082`*^9, 3.560456569654574*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resFindMinimum", "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"J", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}], ",", "XNonlinear", ",", 
      "y"}], "]"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", "0"}], "}"}], "&"}], "/@", 
        RowBox[{"Evaluate", "[", "\[Beta]", "]"}]}], ")"}]}], "]"}], ",", 
    RowBox[{"MaxIterations", "\[Rule]", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560351944454616*^9, 3.5603520197894783`*^9}, 
   3.560352248329137*^9, {3.560352396052024*^9, 3.560352396266281*^9}, {
   3.560354166769329*^9, 3.560354169009766*^9}, {3.5603616105824347`*^9, 
   3.560361652181757*^9}, {3.5603616821834784`*^9, 3.560361688530661*^9}, {
   3.560361809948946*^9, 3.560361810504293*^9}, {3.560388325663086*^9, 
   3.5603883274733133`*^9}, {3.560456406292346*^9, 3.560456410989895*^9}, {
   3.560456443328278*^9, 3.56045648325598*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5604605683617887`*^9, 3.560463758352916*^9, 
  3.56047054381571*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.21929040139425596`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", "38.23084688806037`"}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "55.59583153313746`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "98.14666442741479`"}], ",", 
     RowBox[{"\[Beta]3", "\[Rule]", 
      RowBox[{"-", "369.43018672231085`"}]}], ",", 
     RowBox[{"\[Beta]4", "\[Rule]", 
      RowBox[{"-", "177.12043934801528`"}]}], ",", 
     RowBox[{"\[Beta]5", "\[Rule]", 
      RowBox[{"-", "194.2605961628462`"}]}], ",", 
     RowBox[{"\[Beta]6", "\[Rule]", 
      RowBox[{"-", "366.0086674568883`"}]}], ",", 
     RowBox[{"\[Beta]7", "\[Rule]", 
      RowBox[{"-", "842.210839411166`"}]}], ",", 
     RowBox[{"\[Beta]8", "\[Rule]", 
      RowBox[{"-", "719.4482333499966`"}]}], ",", 
     RowBox[{"\[Beta]9", "\[Rule]", 
      RowBox[{"-", "511.8945796328065`"}]}], ",", 
     RowBox[{"\[Beta]10", "\[Rule]", "1182.701799606895`"}], ",", 
     RowBox[{"\[Beta]11", "\[Rule]", "1279.3433883027737`"}], ",", 
     RowBox[{"\[Beta]12", "\[Rule]", "1907.9002094795485`"}], ",", 
     RowBox[{"\[Beta]13", "\[Rule]", "914.3190717849866`"}], ",", 
     RowBox[{"\[Beta]14", "\[Rule]", "514.2802265535132`"}], ",", 
     RowBox[{"\[Beta]15", "\[Rule]", "573.2232009946667`"}], ",", 
     RowBox[{"\[Beta]16", "\[Rule]", "1629.7511630619867`"}], ",", 
     RowBox[{"\[Beta]17", "\[Rule]", "2553.6040798020895`"}], ",", 
     RowBox[{"\[Beta]18", "\[Rule]", "2919.066884863498`"}], ",", 
     RowBox[{"\[Beta]19", "\[Rule]", "1780.6082612074908`"}], ",", 
     RowBox[{"\[Beta]20", "\[Rule]", "785.3150290807289`"}], ",", 
     RowBox[{"\[Beta]21", "\[Rule]", 
      RowBox[{"-", "1257.91312967928`"}]}], ",", 
     RowBox[{"\[Beta]22", "\[Rule]", 
      RowBox[{"-", "2260.0052715570446`"}]}], ",", 
     RowBox[{"\[Beta]23", "\[Rule]", 
      RowBox[{"-", "4142.795903214757`"}]}], ",", 
     RowBox[{"\[Beta]24", "\[Rule]", 
      RowBox[{"-", "4290.592752835432`"}]}], ",", 
     RowBox[{"\[Beta]25", "\[Rule]", 
      RowBox[{"-", "4229.651149352397`"}]}], ",", 
     RowBox[{"\[Beta]26", "\[Rule]", 
      RowBox[{"-", "2055.5484271385844`"}]}], ",", 
     RowBox[{"\[Beta]27", "\[Rule]", 
      RowBox[{"-", "750.3814442424382`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460568500793*^9, 3.560463758463324*^9, 
  3.560470543929612*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"regularize", "[", "Indeterminate", "]"}], ":=", 
   "$MaxMachineNumber"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"regularize", "[", 
   RowBox[{"x_", "?", "NumericQ"}], "]"}], ":=", "x"}]}], "Input",
 CellChangeTimes->{{3.560384486532398*^9, 3.56038451821692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"resFindMinimum", "=", 
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      RowBox[{"regularize", "@", 
       RowBox[{"J", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", "\[Beta]", "]"}], ",", "XNonlinear", ",", 
         "y"}], "]"}]}], ",", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", "0"}], "}"}], "&"}], "/@", 
          RowBox[{"Evaluate", "[", "\[Beta]", "]"}]}], ")"}]}], "]"}]}], 
     "]"}]}], ";"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.560384527243575*^9, 3.5603845445608473`*^9}, {
  3.560388319760144*^9, 3.560388322413134*^9}, {3.560392755258164*^9, 
  3.560392760025282*^9}, {3.560392882711721*^9, 3.560392924363173*^9}, {
  3.5604605892296257`*^9, 3.560460610725163*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/cvmit\\\", ButtonNote -> \
\\\"FindMinimum::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5604606071371317`*^9, 3.560460619330311*^9}, 
   3.560463767772011*^9, 3.560470551267927*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.130128`7.304642319868837", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.560460607139577*^9, 3.560460619333349*^9}, 
   3.560463767773478*^9, 3.560470551272654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["res"], "Input",
 CellChangeTimes->{{3.560392940707638*^9, 3.56039294090515*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4886088756741433`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]0", "\[Rule]", "1.5759799962067582`"}], ",", 
     RowBox[{"\[Beta]1", "\[Rule]", "0.9410817920831274`"}], ",", 
     RowBox[{"\[Beta]2", "\[Rule]", "1.6479291901441242`"}], ",", 
     RowBox[{"\[Beta]3", "\[Rule]", 
      RowBox[{"-", "2.543454347248704`"}]}], ",", 
     RowBox[{"\[Beta]4", "\[Rule]", 
      RowBox[{"-", "1.4816811291925662`"}]}], ",", 
     RowBox[{"\[Beta]5", "\[Rule]", 
      RowBox[{"-", "1.9305634540431045`"}]}], ",", 
     RowBox[{"\[Beta]6", "\[Rule]", "0.2762473959252431`"}], ",", 
     RowBox[{"\[Beta]7", "\[Rule]", 
      RowBox[{"-", "0.5729609846152576`"}]}], ",", 
     RowBox[{"\[Beta]8", "\[Rule]", 
      RowBox[{"-", "0.48984281858114764`"}]}], ",", 
     RowBox[{"\[Beta]9", "\[Rule]", 
      RowBox[{"-", "0.19249728820417095`"}]}], ",", 
     RowBox[{"\[Beta]10", "\[Rule]", 
      RowBox[{"-", "1.948756487144024`"}]}], ",", 
     RowBox[{"\[Beta]11", "\[Rule]", 
      RowBox[{"-", "0.012340009937425428`"}]}], ",", 
     RowBox[{"\[Beta]12", "\[Rule]", 
      RowBox[{"-", "0.8942296880398626`"}]}], ",", 
     RowBox[{"\[Beta]13", "\[Rule]", 
      RowBox[{"-", "0.46297597319325173`"}]}], ",", 
     RowBox[{"\[Beta]14", "\[Rule]", 
      RowBox[{"-", "1.60821543178697`"}]}], ",", 
     RowBox[{"\[Beta]15", "\[Rule]", 
      RowBox[{"-", "0.3029236198842339`"}]}], ",", 
     RowBox[{"\[Beta]16", "\[Rule]", 
      RowBox[{"-", "0.29723997352111475`"}]}], ",", 
     RowBox[{"\[Beta]17", "\[Rule]", "0.0016611347469751927`"}], ",", 
     RowBox[{"\[Beta]18", "\[Rule]", 
      RowBox[{"-", "0.4401673100674348`"}]}], ",", 
     RowBox[{"\[Beta]19", "\[Rule]", 
      RowBox[{"-", "0.4715427419415693`"}]}], ",", 
     RowBox[{"\[Beta]20", "\[Rule]", 
      RowBox[{"-", "0.4918924203657763`"}]}], ",", 
     RowBox[{"\[Beta]21", "\[Rule]", 
      RowBox[{"-", "1.4316186952895016`"}]}], ",", 
     RowBox[{"\[Beta]22", "\[Rule]", "0.08762290005455388`"}], ",", 
     RowBox[{"\[Beta]23", "\[Rule]", 
      RowBox[{"-", "0.41975839948176935`"}]}], ",", 
     RowBox[{"\[Beta]24", "\[Rule]", "0.05804701445614692`"}], ",", 
     RowBox[{"\[Beta]25", "\[Rule]", 
      RowBox[{"-", "0.49370549194482355`"}]}], ",", 
     RowBox[{"\[Beta]26", "\[Rule]", 
      RowBox[{"-", "0.26610291658359336`"}]}], ",", 
     RowBox[{"\[Beta]27", "\[Rule]", 
      RowBox[{"-", "1.1536804460830292`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.560463767905164*^9, 3.560470551541201*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use LogitModelFit without constant basis", "Subsubsection",
 CellChangeTimes->{{3.56038477300878*^9, 3.560384776544219*^9}, {
  3.560435840266838*^9, 3.56043584479351*^9}, {3.5604359146990337`*^9, 
  3.560435916298716*^9}}],

Cell["\<\
Define design matrix with non-linear features and response values:\
\>", "Text",
 CellChangeTimes->{{3.5604606590668983`*^9, 3.5604606880902357`*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"designMatrix", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"XNonlinear", ",", 
     RowBox[{"List", "/@", "y"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560384811436164*^9, 3.5603848275220346`*^9}, {
   3.560384980270713*^9, 3.560384981516802*^9}, {3.560386473536764*^9, 
   3.5603864742713327`*^9}, {3.5603866087269278`*^9, 3.560386609033145*^9}, 
   3.560387204440949*^9, {3.560435305221465*^9, 3.560435309077157*^9}, {
   3.5604606358762197`*^9, 3.56046063853822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"designMatrix", "//", "RandomChoice"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.5604566433208838`*^9, 3.5604566459370127`*^9}, {
   3.560456919078573*^9, 3.5604569213566303`*^9}, 3.56046064424444*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "0.49021`"}], ",", 
   RowBox[{"-", "0.3019`"}], ",", "0.24030584409999997`", ",", "0.147994399`",
    ",", "0.09114361`", ",", 
   RowBox[{"-", "0.11780032783626099`"}], ",", 
   RowBox[{"-", "0.07254833433378999`"}], ",", 
   RowBox[{"-", "0.044679509058099996`"}], ",", 
   RowBox[{"-", "0.027516255859`"}], ",", "0.05774689870861349`", ",", 
   "0.03556391897376719`", ",", "0.0219023421353712`", ",", 
   "0.013488743784640388`", ",", "0.0083071576438321`", ",", 
   RowBox[{"-", "0.028308107215949417`"}], ",", 
   RowBox[{"-", "0.017433788720130412`"}], ",", 
   RowBox[{"-", "0.010736747138180316`"}], ",", 
   RowBox[{"-", "0.006612317090668565`"}], ",", 
   RowBox[{"-", "0.004072251748582933`"}], ",", 
   RowBox[{"-", "0.0025079308926729106`"}], ",", "0.013876917238330564`", ",",
    "0.00854621756849513`", ",", "0.005263260814607372`", ",", 
   "0.003241423961016637`", ",", "0.0019962585296728398`", ",", 
   "0.0012294128028971876`", ",", "0.0007571443364979517`", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.560460645379629*^9, 3.560463767993499*^9, 
  3.5604699077997427`*^9, 3.5604705517489634`*^9}],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.560460645379629*^9, 3.560463767993499*^9, 
  3.5604699077997427`*^9, 3.56047055175331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"designMatrix", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5603872052180643`*^9, 3.5603872309476757`*^9}, 
   3.5604606520927057`*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsfIc7lmEbtz0jCdkhJRSRlnAakUJJGkSFZFSSWVEps5RRUWZKESJJSUYa
ViFlj0pkJHs/z3M/fOfd+9L7/Qvf8XUcjuu413Wd83f+zuu+n6RtT5vZMzEw
MEjgnxf+9Z35uizs0h/4/+P/G+PE5t/c5W/o/3/8f3T0buZ8/PwHDRK15Eyb
hAl4bzXsz0anQfD2GwVLL9JhW5THH7ZoOhTzXEg6hfeXqp79+5wNQ4PoTRwf
v6y71ZtJhxdsAuYHPOjA2NMT56ZOB4/EdMuMU3Sw2v2pd6CYDhZ8x5cl4P2N
qt0jb0LoYO/x+XDccjqsK7S9ef8QHfQrSuxGGCkL8jiYyU0ffElAdd3HJYOs
dOjeOlsi+JoOyf+V2yPnuYowzsvzSUHs3VM6PHlvVXCLTsBy0x3CzYfpC6Pw
hzl91b10YNp7MvnmSipsK/wd9IJpFFIqbKseXqQAnxXPw5PhBIx5ra8bjqTD
loi04/QCOnTuqfm7ztujinU2b/7JL3vN/chzHItXt63syKADvS87Yd3/XB+0
PlBejKP8TN/f5x8GVu5/iaPVvhVrtVFecYFkscAkOthpD3z+7kyHD26VzqrG
/+x+6swrDiNFOoiWfivgRL2+ffT2W7uTDqPtO7tc8+gQfvB7djrOt0h+tboF
jtEZvf+XPVL28P18JD++oO8TEaUh9hYCpu++4U14SYVX1OJdDJa0BbvO+7kp
oovf6iUdVhv0v6UV0eHYsdYHZf+jR9zbhy/JY5va/nYPHM9skutLffHPz6/t
eUq8t6G81JwmD3EacB4Q+LabG/U+IOXzOI0OsVtqhaxl0e+PCwtrTlAh+/Em
A4cK6sL5uN5XSomJ/+yaGJ/jF1n8b/SJv8xFysEnfqzYHOWbj9f9L28o1pTQ
4BhDknqY5ASUKE0bFzJMLpyft8P8df346IEOpkFg+O8/w+nhZ8bNH6G+eShY
980M/BK8T7X4MgljvH9M2+wIkJepr3BNJmD32CJ66Zt/eliI1YYuzyAW7FAT
G7Q8sxDtk1HB+RbvY5EOnCXtZdfpNFr2P3E0b495e87H23weSAnr6cb70wEk
JH4cTv6zMGo+yf7rh9HCL4534+mQvcio40oQHVqEFpvcU6NDpoP5zbwwOuQU
U4XfYRw3LOm26UW7BX/8xEY+13pUs9YNxyuXiqY5STvyMo84PaGD7bnY8uZj
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
976ctG/3rLDxF8T32sbfB93vYf1yPOuV00HAG+eNX0YwXhTd0zj6Ua/aB/fF
M7HOd3Fl2e4k/X+l6S+PqL8tavQUx40xMmE1uM4OpaUq10k/pc5OPsL1Wsfa
D5HynH6aIUz2tXuqqGteoP+ujUoXX0R90hJ6WTSQv11XfPd+yUqMn4MjxDTW
C5aPec8Zsd9/lbuvecaKANWe6z8b1mE/VmjSPIFxq6Chsk4pBesW561LO0hc
52p+rYn+2rWytPED4mhHmnMzRzwBzjeI2145NFirNPDS/QPy7cT3lcHpBFhb
iVwvwLirCQvj68I83WYg5D6E+vm7Xpgi62OKZWxMCs6b2XzlgjDZ/ycvWRRI
9n0mF6k66J/I77te7UH5S/rXnbBGPmK9uGxqGer/4o2cZvRuOozDcsE3MzR4
+lFsmzXWeYc4nu9CyCN3Ls75ev8nAXp+R2O92LG+9O8avUj2JbcrsopwPHEx
WNoEx22LFIZJfCtvG3Ypwr45ZNF77yrkfTVvfxj2I5+fMXsvJhJIhSqzDYeS
EX+++v14VIzrQKrdURK/PGcvel7F/OURMIsj5xeRFJbcjPpZaO0z2oF+3X8q
X/8Jnq+05Pgmg3Gyhvfsa2/kq2atU0nttnj/t84dc1iPb+kOHDVnwj50WlxN
5RLy79OVVwjEjytCgwGXvhNwLO78f/oRF58H8jheH3GoJP09HO4mSfK94m32
Xv4k7jUdYQlC/zRwc29twXpE1UmUv412l63es+wI2b8kZOpmoBzdgqV/59NT
jQp6huOSk1xLxNDeE5csdrBif3pOqFAidx/6Ke/F+AExOlRt/KNniLxPRsbn
QADKa3MyqI7Ut+eOaxspR42YnpA5jhEOLrnBiEN7nCu462cIaBxu4H+A/P6B
yIcH6rj+faXPW2dRPothGTuSb1gf2tcxjedHg2OXhWJ9+NlXMNUVTsDyR2rB
ZD4rP3D/mYfxfd2mh+sm2ln1/qZYJ7J+Kg1ctCLz/WJKsD7a+VidZ0A6yqUZ
10W/jOdVJ1oZpHBs7m1tJOW7XrHhJzmq9CXr5OB6YR1M69+gHY6ODEvUIL7d
nlZnO3cJ5QrtGcon88urnSkd6/0Q2y720xgPbVclvq/eizgSUBwWQdYr1ZHW
sQiMg9yD+6ewvocI9m4k5RUd/c8+T15hOR+JT9+q1v/agKMjk5WDH45qEWX8
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
Vq/TfCRDg1EfNXb2TXRIYTvw7CfGo1LpoRDy+xx7B2GWUxh3S5YxVF3Afo+q
eCj2lyoVmPyOf1laToGaXr2ST/ZUiGo6u2v6BgGr+YLvncC+1Wklc/dF7Ddb
HhR26kgTMHq+p4n32wzMuMZ2f8G8Of1WUH4P2m39M+Xspe50qDUxf+WQ9W+9
DQHfM8Xs6DCrfmKtAPLCktufL/PsQb5tYXju5FU6XM3/NZJLvl+59+7Cexy3
rVp2nxvzWOjSziNXkTdMLtnG6TxKg3djze4fvChwOdzP0nUdAY/l047lVFGA
86io+GbkuYOndbXtH03DoPgOtmfIT25BvmzJIWLBHhcTlnIue0Huwyb+3WeY
90ukuG/NaOy/8Za78saS49gncSnuPo94NK+nPEXE2wrr7/z86i76/eZYt5Sn
WW/zYDymHjqmb4t4UXJvHRPfZiqs608y57k5BQZbn07GMI2C7OIWJoW6CayT
bwtrFw+DsNqsjE/wCMi0MzwtdBuHzksxLrryY5D48Yr1z9ZxWPFddv/3BxOg
cfLDSPHrSRD7ZL+l1JkKzIfCng4G0Rb88XKT7MURxLMb2lVJftiXKly24yO/
Y9Nf0rx8LfaBN149qJTC+GHlvR9um0LAls4Mg0DEc2HBuiF1xWlQ+qlbfXgP
9q1po6/z26YWjsWeGlguw74cQuQyMhCXiuUXz554TIOEJZ9+OUliH/rSPWIH
1rk/u+AmC9qTJ2PjExk8dks5vSmq6J88O8RSDj1HXjEfr/N2mI8jr65jPo9V
fy3E6XxcbL2Yot/2jA46xDr3bd9oIPtS2VtOEvt1Sb5r5tZ02BkyYPZYmArX
Hk+4TAhSQPpt47to5DXqP9hDxhOmYdfebRtXxkyAlBFlE8P76YX4dp9Sebp0
iLYQB/d8zqnG5WBfI18cpPtnEhoPX5JX1JqCwrt6HUMCU6Ca/eVB5UsK8A09
X521nQqXXGQ7fbmRD30vNRklv3tYlhVvt5oOvWKLt7lj/nUcj2cVDqLALd3b
BhPJMxDyKX5KxIEC6gX6XkurCZAZfF2TtR7rkCJnI+8YBT4V3PD1Q3sP9hYF
jotSwGOj/vYJgfEFedj1ltqGm01D8aK2+y1cM3DjjBl/1hQNCmu33yG/u9fW
WaG3LRz5lLTHLld1Goy4J0saIX95dbcktVqOsjAetNa7cpY6A4q5LD5TzBOw
+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
   "], {{0, 0}, {118, 29}}, {
   0, 1.8593206849359918`}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.560460652654533*^9, 3.5604637681370897`*^9, 
  3.5604705518826313`*^9}]
}, Open  ]],

Cell["\<\
Define the feature variables \[Chi]:\
\>", "Text",
 CellChangeTimes->{{3.5604606590668983`*^9, 3.560460713866206*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Chi]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Chi]", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Symbol", "[", 
     RowBox[{"\"\<\[Chi]\>\"", "<>", " ", 
      RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{
       RowBox[{"Length", "[", "nonLinearFeatures", "]"}], "-", "1"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5604586306710052`*^9, 3.560458755995627*^9}, {
  3.560458801525341*^9, 3.560458881253479*^9}, {3.560460716884163*^9, 
  3.560460733861145*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\[Chi]0", ",", "\[Chi]1", ",", "\[Chi]2", ",", "\[Chi]3", ",", "\[Chi]4", 
   ",", "\[Chi]5", ",", "\[Chi]6", ",", "\[Chi]7", ",", "\[Chi]8", ",", 
   "\[Chi]9", ",", "\[Chi]10", ",", "\[Chi]11", ",", "\[Chi]12", ",", 
   "\[Chi]13", ",", "\[Chi]14", ",", "\[Chi]15", ",", "\[Chi]16", ",", 
   "\[Chi]17", ",", "\[Chi]18", ",", "\[Chi]19", ",", "\[Chi]20", ",", 
   "\[Chi]21", ",", "\[Chi]22", ",", "\[Chi]23", ",", "\[Chi]24", ",", 
   "\[Chi]25", ",", "\[Chi]26", ",", "\[Chi]27"}], "}"}]], "Output",
 CellChangeTimes->{{3.5604607177289333`*^9, 3.560460734337219*^9}, 
   3.5604637681721354`*^9, 3.560469996841216*^9, 3.5604705519787817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"logitModel1", "=", 
    RowBox[{"LogitModelFit", "[", 
     RowBox[{"designMatrix", ",", 
      RowBox[{"Evaluate", "[", "\[Chi]", "]"}], ",", 
      RowBox[{"Evaluate", "[", "\[Chi]", "]"}], ",", 
      RowBox[{"IncludeConstantBasis", "\[Rule]", " ", "False"}]}], "]"}]}], 
   ";"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", "logitModel1"}], "Input",
 CellChangeTimes->{{3.560384777377281*^9, 3.5603847809624434`*^9}, {
   3.560384984405201*^9, 3.560384990204208*^9}, {3.560385099333572*^9, 
   3.560385153552175*^9}, {3.560385229016078*^9, 3.560385229176591*^9}, {
   3.560385270418498*^9, 3.560385271327805*^9}, {3.560385625982806*^9, 
   3.560385627620432*^9}, {3.560385731375792*^9, 3.560385754328167*^9}, {
   3.560386044603505*^9, 3.560386056434235*^9}, {3.560386092863887*^9, 
   3.560386107891098*^9}, {3.560386482432671*^9, 3.560386523240644*^9}, {
   3.560387043995241*^9, 3.5603870490882053`*^9}, {3.560387405669426*^9, 
   3.5603874083959007`*^9}, 3.560387468756604*^9, {3.560388334079473*^9, 
   3.5603883365058537`*^9}, {3.560435317309907*^9, 3.560435336333359*^9}, {
   3.560435497353977*^9, 3.560435498185631*^9}, {3.560436392574905*^9, 
   3.560436397661262*^9}, 3.560456885157874*^9, {3.560456962459341*^9, 
   3.560456992680901*^9}, {3.5604587699565897`*^9, 3.560458788045336*^9}, {
   3.56046101829828*^9, 3.560461021143969*^9}, 3.560469898344293*^9, {
   3.560469985736184*^9, 3.560469989895459*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.162634`5.662756337145154", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.560460742034574*^9, 3.560461025149575*^9, 3.560463768409245*^9, {
   3.560469884572404*^9, 3.5604698990353117`*^9}, 3.560470007860454*^9, 
   3.560470552148621*^9}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "40", "\[RightSkeleton]"}], "+", 
        RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{
  3.560460742034574*^9, 3.560461025149575*^9, 3.560463768409245*^9, {
   3.560469884572404*^9, 3.5604698990353117`*^9}, 3.560470007860454*^9, 
   3.560470552151623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "logitModel1", "]"}]], "Input",
 CellChangeTimes->{{3.560385972554613*^9, 3.560385973185831*^9}, {
   3.560387026445285*^9, 3.560387028630348*^9}, 3.5603878913216677`*^9, 
   3.560457003222629*^9, 3.560461030643621*^9}],

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "38.230847208490964`"}], " ", "\[Chi]0"}], "-", 
      RowBox[{"55.59583281946198`", " ", "\[Chi]1"}], "-", 
      RowBox[{"1182.701810623724`", " ", "\[Chi]10"}], "-", 
      RowBox[{"1279.3433863459327`", " ", "\[Chi]11"}], "-", 
      RowBox[{"1907.9002174111672`", " ", "\[Chi]12"}], "-", 
      RowBox[{"914.3190647533198`", " ", "\[Chi]13"}], "-", 
      RowBox[{"514.2802308516873`", " ", "\[Chi]14"}], "-", 
      RowBox[{"573.2232154510732`", " ", "\[Chi]15"}], "-", 
      RowBox[{"1629.751184944591`", " ", "\[Chi]16"}], "-", 
      RowBox[{"2553.60412301735`", " ", "\[Chi]17"}], "-", 
      RowBox[{"2919.066939566614`", " ", "\[Chi]18"}], "-", 
      RowBox[{"1780.6083031400738`", " ", "\[Chi]19"}], "-", 
      RowBox[{"98.1466657162587`", " ", "\[Chi]2"}], "-", 
      RowBox[{"785.3150491203105`", " ", "\[Chi]20"}], "+", 
      RowBox[{"1257.9131480911767`", " ", "\[Chi]21"}], "+", 
      RowBox[{"2260.005286939617`", " ", "\[Chi]22"}], "+", 
      RowBox[{"4142.795943036802`", " ", "\[Chi]23"}], "+", 
      RowBox[{"4290.592791223578`", " ", "\[Chi]24"}], "+", 
      RowBox[{"4229.651203014624`", " ", "\[Chi]25"}], "+", 
      RowBox[{"2055.548452374884`", " ", "\[Chi]26"}], "+", 
      RowBox[{"750.3814590578343`", " ", "\[Chi]27"}], "+", 
      RowBox[{"369.43018922756477`", " ", "\[Chi]3"}], "+", 
      RowBox[{"177.12043697661238`", " ", "\[Chi]4"}], "+", 
      RowBox[{"194.2605974729822`", " ", "\[Chi]5"}], "+", 
      RowBox[{"366.0086760474572`", " ", "\[Chi]6"}], "+", 
      RowBox[{"842.2108498398533`", " ", "\[Chi]7"}], "+", 
      RowBox[{"719.448245694719`", " ", "\[Chi]8"}], "+", 
      RowBox[{"511.89458923579`", " ", "\[Chi]9"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.56046074665067*^9, 3.56046103107301*^9, 
  3.560463768480249*^9, 3.560470013105102*^9, 3.560470552349266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]FitLogitModel1", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Rule", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}], ",", 
      RowBox[{"logitModel1", "[", "\"\<BestFitParameters\>\"", "]"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.560387919514698*^9, {3.560396227498973*^9, 3.5603962347149973`*^9}, {
   3.560435799038342*^9, 3.560435807611857*^9}, {3.560436257106534*^9, 
   3.5604362577287407`*^9}, 3.560457014479638*^9, 3.560461028521328*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", "38.230847208490964`"}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", "55.59583281946198`"}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "98.1466657162587`"}], ",", 
   RowBox[{"\[Beta]3", "\[Rule]", 
    RowBox[{"-", "369.43018922756477`"}]}], ",", 
   RowBox[{"\[Beta]4", "\[Rule]", 
    RowBox[{"-", "177.12043697661238`"}]}], ",", 
   RowBox[{"\[Beta]5", "\[Rule]", 
    RowBox[{"-", "194.2605974729822`"}]}], ",", 
   RowBox[{"\[Beta]6", "\[Rule]", 
    RowBox[{"-", "366.0086760474572`"}]}], ",", 
   RowBox[{"\[Beta]7", "\[Rule]", 
    RowBox[{"-", "842.2108498398533`"}]}], ",", 
   RowBox[{"\[Beta]8", "\[Rule]", 
    RowBox[{"-", "719.448245694719`"}]}], ",", 
   RowBox[{"\[Beta]9", "\[Rule]", 
    RowBox[{"-", "511.89458923579`"}]}], ",", 
   RowBox[{"\[Beta]10", "\[Rule]", "1182.701810623724`"}], ",", 
   RowBox[{"\[Beta]11", "\[Rule]", "1279.3433863459327`"}], ",", 
   RowBox[{"\[Beta]12", "\[Rule]", "1907.9002174111672`"}], ",", 
   RowBox[{"\[Beta]13", "\[Rule]", "914.3190647533198`"}], ",", 
   RowBox[{"\[Beta]14", "\[Rule]", "514.2802308516873`"}], ",", 
   RowBox[{"\[Beta]15", "\[Rule]", "573.2232154510732`"}], ",", 
   RowBox[{"\[Beta]16", "\[Rule]", "1629.751184944591`"}], ",", 
   RowBox[{"\[Beta]17", "\[Rule]", "2553.60412301735`"}], ",", 
   RowBox[{"\[Beta]18", "\[Rule]", "2919.066939566614`"}], ",", 
   RowBox[{"\[Beta]19", "\[Rule]", "1780.6083031400738`"}], ",", 
   RowBox[{"\[Beta]20", "\[Rule]", "785.3150491203105`"}], ",", 
   RowBox[{"\[Beta]21", "\[Rule]", 
    RowBox[{"-", "1257.9131480911767`"}]}], ",", 
   RowBox[{"\[Beta]22", "\[Rule]", 
    RowBox[{"-", "2260.005286939617`"}]}], ",", 
   RowBox[{"\[Beta]23", "\[Rule]", 
    RowBox[{"-", "4142.795943036802`"}]}], ",", 
   RowBox[{"\[Beta]24", "\[Rule]", 
    RowBox[{"-", "4290.592791223578`"}]}], ",", 
   RowBox[{"\[Beta]25", "\[Rule]", 
    RowBox[{"-", "4229.651203014624`"}]}], ",", 
   RowBox[{"\[Beta]26", "\[Rule]", 
    RowBox[{"-", "2055.548452374884`"}]}], ",", 
   RowBox[{"\[Beta]27", "\[Rule]", 
    RowBox[{"-", "750.3814590578343`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460750468317*^9, 3.560461032440646*^9, 
  3.56046376866891*^9, 3.560470014389945*^9, 3.56047055278251*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use LogitModelFit including constant basis", "Subsubsection",
 CellChangeTimes->{{3.560435859565057*^9, 3.5604358765893307`*^9}}],

Cell["Include constant basis:", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.560388645580673*^9, 3.560388649369261*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"designMatrix", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"XNonlinear", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}]}], "]"}], "]"}], ",", 
     RowBox[{"List", "/@", "y"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.560384811436164*^9, 3.5603848275220346`*^9}, {
   3.560384980270713*^9, 3.560384981516802*^9}, {3.560386473536764*^9, 
   3.5603864742713327`*^9}, {3.5603866087269278`*^9, 3.560386609033145*^9}, 
   3.560387204440949*^9, {3.5603875043191442`*^9, 3.560387504828947*^9}, {
   3.5604354416399527`*^9, 3.560435451175078*^9}, {3.560435506096534*^9, 
   3.560435537169984*^9}, 3.560460771104007*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"designMatrix", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.56043557201089*^9, 3.560435575287401*^9}, 
   3.560460774024229*^9}],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{3.560460777923729*^9, 3.560463768755862*^9, 
  3.560470020277137*^9, 3.560470553097649*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"designMatrix", "//", "Transpose"}], "//", 
  RowBox[{
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "1200"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", " ", "None"}]}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.5603872052180643`*^9, 3.5603872309476757`*^9}, 
   3.560460775014325*^9}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsfIc7lmEbtz0jCdkhJRSRlnAakUJJGkSFZFSSWVEps5RRUWZKESJJSUYa
ViFlj0pkJHs/z3M/fOfd+9L7/Qvf8XUcjuu413Wd83f+zuu+n6RtT5vZMzEw
MIjjnxf+9Z35uizs0h/4/+P/G+PE5t/c5W/o/3/8f3T0buZ8/PwHDRK15Eyb
hAl4bzXsz0anQfD2GwVLL9JhW5THH7ZoOhTzXEg6hfeXqp79+5wNQ4PoTRwf
v6y71ZtJhxdsAuYHPOjA2NMT56ZOB4/EdMuMU3Sw2v2pd6CYDhZ8x5cl4P2N
qt0jb0LoYO/x+XDccjqsK7S9ef8QHfQrSuxGGCkL8jiYyU0ffElAdd3HJYOs
dOjeOlsi+JoOyf+V2yPnuYowzsvzSUHs3VM6PHlvVXCLTsBy0x3CzYfpC6Pw
hzl91b10YNp7MvnmSipsK/wd9IJpFFIqbKseXqQAnxXPw5PhBIx5ra8bjqTD
loi04/QCOnTuqfm7ztujinU2b/7JL3vN/chzHItXt63syKADvS87Yd3/XB+0
PlBejKP8TN/f5x8GVu5/iaPVvhVrtVFecYFkscAkOthpD3z+7kyHD26VzqrG
/+x+6swrDiNFOoiWfivgRL2+ffT2W7uTDqPtO7tc8+gQfvB7djrOt0h+tboF
jtEZvf+XPVL28P18JD++oO8TEaUh9hYCpu++4U14SYVX1OJdDJa0BbvO+7kp
oovf6iUdVhv0v6UV0eHYsdYHZf+jR9zbhy/JY5va/nYPHM9skutLffHPz6/t
eUq8t6G81JwmD3EacB4Q+LabG/U+IOXzOI0OsVtqhaxl0e+PCwtrTlAh+/Em
A4cK6sL5uN5XSomJ/+yaGJ/jF1n8b/SJv8xFysEnfqzYHOWbj9f9L28o1pTQ
4BhDknqY5ASUKE0bFzJMLpyft8P8df346IEOpkFg+O8/w+nhZ8bNH6G+eShY
980M/BK8T7X4MgljvH9M2+wIkJepr3BNJmD32CJ66Zt/eliI1YYuzyAW7FAT
G7Q8sxDtk1HB+RbvY5EOnCXtZdfpNFr2P3E0b495e87H23weSAnr6cb70wEk
JH4cTv6zMGo+yf7rh9HCL4534+mQvcio40oQHVqEFpvcU6NDpoP5zbwwOuQU
U4XfYRw3LOm26UW7BX/8xEY+13pUs9YNxyuXiqY5STvyMo84PaGD7bnY8uZj
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
976ctG/3rLDxF8T32sbfB93vYf1yPOuV00HAG+eNX0YwXhTd0zj6Ua/aB/fF
M7HOd3Fl2e4k/X+l6S+PqL8tavQUx40xMmE1uM4OpaUq10k/pc5OPsL1Wsfa
D5HynH6aIUz2tXuqqGteoP+ujUoXX0R90hJ6WTSQv11XfPd+yUqMn4MjxDTW
C5aPec8Zsd9/lbuvecaKANWe6z8b1mE/VmjSPIFxq6Chsk4pBesW561LO0hc
52p+rYn+2rWytPED4mhHmnMzRzwBzjeI2145NFirNPDS/QPy7cT3lcHpBFhb
iVwvwLirCQvj68I83WYg5D6E+vm7Xpgi62OKZWxMCs6b2XzlgjDZ/ycvWRRI
9n0mF6k66J/I77te7UH5S/rXnbBGPmK9uGxqGer/4o2cZvRuOozDcsE3MzR4
+lFsmzXWeYc4nu9CyCN3Ls75ev8nAXp+R2O92LG+9O8avUj2JbcrsopwPHEx
WNoEx22LFIZJfCtvG3Ypwr45ZNF77yrkfTVvfxj2I5+fMXsvJhJIhSqzDYeS
EX+++v14VIzrQKrdURK/PGcvel7F/OURMIsj5xeRFJbcjPpZaO0z2oF+3X8q
X/8Jnq+05Pgmg3Gyhvfsa2/kq2atU0nttnj/t84dc1iPb+kOHDVnwj50WlxN
5RLy79OVVwjEjytCgwGXvhNwLO78f/oRF58H8jheH3GoJP09HO4mSfK94m32
Xv4k7jUdYQlC/zRwc29twXpE1UmUv412l63es+wI2b8kZOpmoBzdgqV/59NT
jQp6huOSk1xLxNDeE5csdrBif3pOqFAidx/6Ke/F+AExOlRt/KNniLxPRsbn
QADKa3MyqI7Ut+eOaxspR42YnpA5jhEOLrnBiEN7nCu462cIaBxu4H+A/P6B
yIcH6rj+faXPW2dRPothGTuSb1gf2tcxjedHg2OXhWJ9+NlXMNUVTsDyR2rB
ZD4rP3D/mYfxfd2mh+sm2ln1/qZYJ7J+Kg1ctCLz/WJKsD7a+VidZ0A6yqUZ
10W/jOdVJ1oZpHBs7m1tJOW7XrHhJzmq9CXr5OB6YR1M69+gHY6ODEvUIL7d
nlZnO3cJ5QrtGcon88urnSkd6/0Q2y720xgPbVclvq/eizgSUBwWQdYr1ZHW
sQiMg9yD+6ewvocI9m4k5RUd/c8+T15hOR+JT9+q1v/agKMjk5WDH45qEWX8
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
Vq/TfCRDg1EfNXb2TXRIYTvw7CfGo1LpoRDy+xx7B2GWUxh3S5YxVF3Afo+q
eCj2lyoVmPyOf1laToGaXr2ST/ZUiGo6u2v6BgGr+YLvncC+1Wklc/dF7Ddb
HhR26kgTMHq+p4n32wzMuMZ2f8G8Of1WUH4P2m39M+Xspe50qDUxf+WQ9W+9
DQHfM8Xs6DCrfmKtAPLCktufL/PsQb5tYXju5FU6XM3/NZJLvl+59+7Cexy3
rVp2nxvzWOjSziNXkTdMLtnG6TxKg3djze4fvChwOdzP0nUdAY/l047lVFGA
86io+GbkuYOndbXtH03DoPgOtmfIT25BvmzJIWLBHhcTlnIue0Huwyb+3WeY
90ukuG/NaOy/8Za78saS49gncSnuPo94NK+nPEXE2wrr7/z86i76/eZYt5Sn
WW/zYDymHjqmb4t4UXJvHRPfZiqs608y57k5BQZbn07GMI2C7OIWJoW6CayT
bwtrFw+DsNqsjE/wCMi0MzwtdBuHzksxLrryY5D48Yr1z9ZxWPFddv/3BxOg
cfLDSPHrSRD7ZL+l1JkKzIfCng4G0Rb88XKT7MURxLMb2lVJftiXKly24yO/
Y9Nf0rx8LfaBN149qJTC+GHlvR9um0LAls4Mg0DEc2HBuiF1xWlQ+qlbfXgP
9q1po6/z26YWjsWeGlguw74cQuQyMhCXiuUXz554TIOEJZ9+OUliH/rSPWIH
1rk/u+AmC9qTJ2PjExk8dks5vSmq6J88O8RSDj1HXjEfr/N2mI8jr65jPo9V
fy3E6XxcbL2Yot/2jA46xDr3bd9oIPtS2VtOEvt1Sb5r5tZ02BkyYPZYmArX
Hk+4TAhSQPpt47to5DXqP9hDxhOmYdfebRtXxkyAlBFlE8P76YX4dp9Sebp0
iLYQB/d8zqnG5WBfI18cpPtnEhoPX5JX1JqCwrt6HUMCU6Ca/eVB5UsK8A09
X521nQqXXGQ7fbmRD30vNRklv3tYlhVvt5oOvWKLt7lj/nUcj2cVDqLALd3b
BhPJMxDyKX5KxIEC6gX6XkurCZAZfF2TtR7rkCJnI+8YBT4V3PD1Q3sP9hYF
jotSwGOj/vYJgfEFedj1ltqGm01D8aK2+y1cM3DjjBl/1hQNCmu33yG/u9fW
WaG3LRz5lLTHLld1Goy4J0saIX95dbcktVqOsjAetNa7cpY6A4q5LD5TzBOw
+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
D5bqPfI/msaF/wHxmGnv
   "], {{0, 0}, {118, 28}}, {0, 1.8593206849359918`}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  ImageSize->1200,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.560460779043857*^9, 3.560463768883065*^9, 
  3.560470021382073*^9, 3.560470553162627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logitModel2", "=", 
  RowBox[{"LogitModelFit", "[", 
   RowBox[{"designMatrix", ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"\[Chi]", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"\[Chi]", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"IncludeConstantBasis", "\[Rule]", " ", "True"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.560387471150239*^9, {3.560387865673573*^9, 3.560387897266039*^9}, {
   3.560388339791821*^9, 3.56038834144503*^9}, {3.560435552168309*^9, 
   3.56043555950002*^9}, {3.5604356114350758`*^9, 3.560435617555073*^9}, {
   3.5604358862685947`*^9, 3.56043588696622*^9}, {3.560435930189259*^9, 
   3.560435930621204*^9}, {3.560436231761078*^9, 3.560436232866372*^9}, {
   3.560460789477668*^9, 3.560460813791493*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "40", "\[RightSkeleton]"}], "+", 
        RowBox[{
         RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], " ", 
         "\[Chi]9"}]}]]}]],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{{3.560460795025652*^9, 3.560460814663925*^9}, 
   3.5604637690955143`*^9, 3.560470553290135*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "logitModel2", "]"}]], "Input",
 CellChangeTimes->{{3.560385972554613*^9, 3.560385973185831*^9}, {
   3.560387026445285*^9, 3.560387028630348*^9}, 3.560387903497484*^9, {
   3.56043594370942*^9, 3.560435950908744*^9}, 3.560436223825163*^9, 
   3.560436282299294*^9}],

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "38.23084720849093`"}], "-", 
      RowBox[{"55.59583281946193`", " ", "\[Chi]1"}], "-", 
      RowBox[{"1182.7018106237265`", " ", "\[Chi]10"}], "-", 
      RowBox[{"1279.34338634593`", " ", "\[Chi]11"}], "-", 
      RowBox[{"1907.9002174111772`", " ", "\[Chi]12"}], "-", 
      RowBox[{"914.3190647533216`", " ", "\[Chi]13"}], "-", 
      RowBox[{"514.2802308516912`", " ", "\[Chi]14"}], "-", 
      RowBox[{"573.2232154510856`", " ", "\[Chi]15"}], "-", 
      RowBox[{"1629.7511849445953`", " ", "\[Chi]16"}], "-", 
      RowBox[{"2553.6041230173364`", " ", "\[Chi]17"}], "-", 
      RowBox[{"2919.066939566585`", " ", "\[Chi]18"}], "-", 
      RowBox[{"1780.608303140046`", " ", "\[Chi]19"}], "-", 
      RowBox[{"98.14666571625895`", " ", "\[Chi]2"}], "-", 
      RowBox[{"785.3150491203058`", " ", "\[Chi]20"}], "+", 
      RowBox[{"1257.913148091183`", " ", "\[Chi]21"}], "+", 
      RowBox[{"2260.005286939617`", " ", "\[Chi]22"}], "+", 
      RowBox[{"4142.795943036805`", " ", "\[Chi]23"}], "+", 
      RowBox[{"4290.592791223555`", " ", "\[Chi]24"}], "+", 
      RowBox[{"4229.651203014598`", " ", "\[Chi]25"}], "+", 
      RowBox[{"2055.5484523748555`", " ", "\[Chi]26"}], "+", 
      RowBox[{"750.381459057832`", " ", "\[Chi]27"}], "+", 
      RowBox[{"369.4301892275652`", " ", "\[Chi]3"}], "+", 
      RowBox[{"177.12043697661232`", " ", "\[Chi]4"}], "+", 
      RowBox[{"194.26059747298387`", " ", "\[Chi]5"}], "+", 
      RowBox[{"366.00867604746253`", " ", "\[Chi]6"}], "+", 
      RowBox[{"842.2108498398558`", " ", "\[Chi]7"}], "+", 
      RowBox[{"719.448245694715`", " ", "\[Chi]8"}], "+", 
      RowBox[{"511.89458923578997`", " ", "\[Chi]9"}]}]]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.560460817109641*^9, 3.560463769161624*^9, 
  3.560470553380094*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]FitLogitModel2", "=", 
  RowBox[{"MapThread", "[", 
   RowBox[{"Rule", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Evaluate", "[", "\[Beta]", "]"}], ",", 
      RowBox[{"logitModel2", "[", "\"\<BestFitParameters\>\"", "]"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560387438378517*^9, 3.560387440853952*^9}, 
   3.560387911965341*^9, {3.560435632106327*^9, 3.560435643288636*^9}, {
   3.5604362728273363`*^9, 3.560436276267136*^9}, {3.56046082296509*^9, 
   3.560460823104207*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]0", "\[Rule]", "38.23084720849093`"}], ",", 
   RowBox[{"\[Beta]1", "\[Rule]", "55.59583281946193`"}], ",", 
   RowBox[{"\[Beta]2", "\[Rule]", "98.14666571625895`"}], ",", 
   RowBox[{"\[Beta]3", "\[Rule]", 
    RowBox[{"-", "369.4301892275652`"}]}], ",", 
   RowBox[{"\[Beta]4", "\[Rule]", 
    RowBox[{"-", "177.12043697661232`"}]}], ",", 
   RowBox[{"\[Beta]5", "\[Rule]", 
    RowBox[{"-", "194.26059747298387`"}]}], ",", 
   RowBox[{"\[Beta]6", "\[Rule]", 
    RowBox[{"-", "366.00867604746253`"}]}], ",", 
   RowBox[{"\[Beta]7", "\[Rule]", 
    RowBox[{"-", "842.2108498398558`"}]}], ",", 
   RowBox[{"\[Beta]8", "\[Rule]", 
    RowBox[{"-", "719.448245694715`"}]}], ",", 
   RowBox[{"\[Beta]9", "\[Rule]", 
    RowBox[{"-", "511.89458923578997`"}]}], ",", 
   RowBox[{"\[Beta]10", "\[Rule]", "1182.7018106237265`"}], ",", 
   RowBox[{"\[Beta]11", "\[Rule]", "1279.34338634593`"}], ",", 
   RowBox[{"\[Beta]12", "\[Rule]", "1907.9002174111772`"}], ",", 
   RowBox[{"\[Beta]13", "\[Rule]", "914.3190647533216`"}], ",", 
   RowBox[{"\[Beta]14", "\[Rule]", "514.2802308516912`"}], ",", 
   RowBox[{"\[Beta]15", "\[Rule]", "573.2232154510856`"}], ",", 
   RowBox[{"\[Beta]16", "\[Rule]", "1629.7511849445953`"}], ",", 
   RowBox[{"\[Beta]17", "\[Rule]", "2553.6041230173364`"}], ",", 
   RowBox[{"\[Beta]18", "\[Rule]", "2919.066939566585`"}], ",", 
   RowBox[{"\[Beta]19", "\[Rule]", "1780.608303140046`"}], ",", 
   RowBox[{"\[Beta]20", "\[Rule]", "785.3150491203058`"}], ",", 
   RowBox[{"\[Beta]21", "\[Rule]", 
    RowBox[{"-", "1257.913148091183`"}]}], ",", 
   RowBox[{"\[Beta]22", "\[Rule]", 
    RowBox[{"-", "2260.005286939617`"}]}], ",", 
   RowBox[{"\[Beta]23", "\[Rule]", 
    RowBox[{"-", "4142.795943036805`"}]}], ",", 
   RowBox[{"\[Beta]24", "\[Rule]", 
    RowBox[{"-", "4290.592791223555`"}]}], ",", 
   RowBox[{"\[Beta]25", "\[Rule]", 
    RowBox[{"-", "4229.651203014598`"}]}], ",", 
   RowBox[{"\[Beta]26", "\[Rule]", 
    RowBox[{"-", "2055.5484523748555`"}]}], ",", 
   RowBox[{"\[Beta]27", "\[Rule]", 
    RowBox[{"-", "750.381459057832`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560460824432398*^9, 3.560463769228044*^9, 
  3.560470553608384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "@", 
  RowBox[{"logitModel2", "[", "\"\<DevianceResiduals\>\"", "]"}]}]], "Input",
 CellChangeTimes->{
  3.560436284371457*^9, {3.560460835438257*^9, 3.560460837686348*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxdknlMFGcYh6eKSLEpxipLTbVVURAJpwjK9QNBQGCBXXZXjnWVq5VEQawi
ojCrGIRUULBVQBNXIJZq7KEo2haWJbBYEVhEqQbkrmCxnBIOiW2z7/7BTDKZ
PPN7n++d9/tmTVSCIHYBwzBH/rv/f2qvEfdX+iYT8iVd7vQCGoOpDanC28QG
QDMjsFz8gHgpIh6c2NuoOE+8HJ+UtQnfO7UQm+BlgeHMu4BB4s+g2eOx30k6
QvwFospT5lpXTxGvhXmXXG+4tpXYFE+j6vaFjb0k3oA7dzW7fbxHic3xU1Ol
SJzTT2wB/5SNzrmuz4ktwc9IqTVq+o3YCgUPrxQZKwTENlAHRF2avv2K2BZf
ZXUl8bYoie0wa+Bbnj2nW88e6prvj1ooKog3Y6SO7fohRzePA9rN9I9drB8n
3oLox4fsC6M7iB2RtGn1IN9a188Jh/RmLL70nybeio0HPPVWdQ4Tb0OnKGZm
4Lu3xM64yXye8Yiny10QfmP8fPybJ8SuKL4htxSbWRO7oddm8NJzY93+uCOg
hX+6SdFODPgWy0pbvDVaZoGq8p8H1kRepNwD8pZe+QG1PeUeiN923+iKIJpy
T2wxvVacXFpCuScODu10XGeoO5/tWD6+LqOoOYby7Uio3BFX7jHmps29YBXp
lF8710C5F8bO/fHp2WeJ5Htj5P5V2fDHfZR7w359kNtpT93/tAO9qzyW7rFr
o3wHzDxc1uxv0/1/Puh/XTeqrK6m3AcT6o7s3yt05+EL/Rftu26co/NlffG3
8rqFZ3w35X6ov2t52daN5mH9kHU4cbbQp47ynVhss0wWG5uhnYfdCfPYO84j
fEfK/aHZuuIbSc1Vyv1RcEw2nacqpfkDEG+a4jCqeUjrB4DvrYrK69tLfiDO
dE3NTlbQebGBYOZdfKgNktOWmNZUaXM+AgMu/1q9eUrLTND8epbDTDAeP2Fv
Olf0a+sRzKnnsDIYM0O8Qr9HEbR+yPwcHGZDcOF9+rRtQaq2XhmCxlzeCpFq
GfkCDPqdVIQPNFJ/AfwvZHsmHT9M8wigcn5X0hF9hnwBFuaFpvP0v63U+kJ4
x9zKun7nNflCfM3jGTLNk+QLcakg9cje9RPkC/Hhmx/jjNISyQ/lfH8oEmTH
O5vqx8kPhapIcfjKPdofZSiS1y4aMrGqIV8EVX+hSDxM9RBx5hdhcmqi2qvn
KPkidAvtphdJT9D8YvTlvz378tlJ8sWQnhrUXAsdo/5itNqWhf2zu4t8MUpW
LtjmM5BMvgSGmfJTH41qyJdgttU6dbRiiHwJjD7oWOcSlEu+BI7VaeqUDjX5
uzjzc5jlsJLDTBjH5zDLYWUYJA/9ei92y6l/OMcPh2+ZanShmM6LDcfTF9X5
DfVS+v5wpDsedDVymCU/Ag6GVr+wPQuVWj8COY09Dg8y28mP4PTnMBPJ6c9h
NhIu+4zXb7pF+6WMhPrPuadxHYy2HyOFscz/L1GJOe2/FJkyd0Vbw0rqLwXu
ou/ei5GqfwHTFflw
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 118.}, {-1.1878194930235368`, 1.580908935430014}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.560460830336233*^9, 3.5604608382470827`*^9}, 
   3.5604637692995777`*^9, 3.5604705536985407`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using GeneralizedLinearModelFit", "Subsubsection",
 CellChangeTimes->{{3.560436360665778*^9, 3.560436366006836*^9}}],

Cell["\<\
Alternatively, use the GeneralizedLinearModelFit with ExponentialFamily \
\[Rule] \[OpenCurlyDoubleQuote]Binomial\[CloseCurlyDoubleQuote], LinkFunction\
\[Rule]Automatic:\
\>", "Text",
 CellChangeTimes->{{3.560360515305338*^9, 3.560360533336344*^9}, {
  3.5603605694392233`*^9, 3.560360621311942*^9}, {3.560360713867721*^9, 
  3.560360834449958*^9}, {3.5603608977719097`*^9, 3.5603609074200907`*^9}, {
  3.560384309875094*^9, 3.560384355643456*^9}, {3.560388305048108*^9, 
  3.5603883059391003`*^9}, {3.560388645580673*^9, 3.560388649369261*^9}, {
  3.56039267334613*^9, 3.560392679380805*^9}, {3.56039908170227*^9, 
  3.560399102854616*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generalizedLinearModelFit", "=", 
  RowBox[{"GeneralizedLinearModelFit", " ", "[", 
   RowBox[{"designMatrix", ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"\[Chi]", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"\[Chi]", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"IncludeConstantBasis", "\[Rule]", " ", "True"}], ",", 
    RowBox[{"ExponentialFamily", " ", "\[Rule]", " ", "\"\<Binomial\>\""}], 
    ",", " ", 
    RowBox[{"LinkFunction", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.56039902426961*^9, 3.560399056599761*^9}, {
  3.560435658589993*^9, 3.560435672692294*^9}, {3.560435708483082*^9, 
  3.560435715373974*^9}, {3.5604357500598507`*^9, 3.560435759100889*^9}, {
  3.56046085127635*^9, 3.560460861480323*^9}}],

Cell[BoxData[
 RowBox[{"FittedModel", "[", 
  PanelBox[
   TagBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "40", "\[RightSkeleton]"}], "+", 
        RowBox[{
         RowBox[{"\[LeftSkeleton]", "16", "\[RightSkeleton]"}], " ", 
         "\[Chi]9"}]}]]}]],
    Short],
   FrameMargins->5], "]"}]], "Output",
 CellChangeTimes->{3.560460865137206*^9, 3.5604637694986486`*^9, 
  3.560470553937602*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decision boundary", "Subsection",
 CellChangeTimes->{{3.560394945665381*^9, 3.560394948241453*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plotDecisionBoundaryFitNMinimize1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]fit", "=", "\[Beta]FitNMinimize1"}], "}"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]fit", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
           "nonLinearFeatures"}], "}"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", " ", "Yellow"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotDecisionBoundaryFitNMinimize2", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]fit", "=", "\[Beta]FitNMinimize2"}], "}"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]fit", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
           "nonLinearFeatures"}], "}"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotDecisionBoundaryFitNMinimize3", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]fit", "=", "\[Beta]FitNMinimize3"}], "}"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]fit", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
           "nonLinearFeatures"}], "}"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", " ", "Red"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotDecisionBoundaryFitNMinimize4", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]fit", "=", "\[Beta]FitNMinimize4"}], "}"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]fit", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
           "nonLinearFeatures"}], "}"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", " ", "Purple"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.560459103738102*^9, 3.560459155705677*^9}, {
  3.560459194762867*^9, 3.5604591975532*^9}, {3.560460912473361*^9, 
  3.560460928745452*^9}, {3.560471580556361*^9, 3.5604715927425623`*^9}, {
  3.560471666039957*^9, 3.560471683517955*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
U7CzbVGmmkUOcvPzqj3rk2hvEAN4DgSdr6QgF+dlXrwalRlNQVZGZ9hgSi4m
J6rsuPCS8/40zpvSzwMK+msMmEvH5eFFwa+CnTac+1ZHtLM35/+LkxoU9FIi
j/seK8Ai/Wb6KnkKWqTfIKknF+DX/Bzjl1IU5OK+Gv3lnctJZIzi20Q9oViE
3HrDjTTA0/OgGLX2XZfU8SXj/WMapI1PizH0sq/WZh8yErhPKV+M9wYZPUrq
r9v0FONQvGouawcZXdSDUufSSvDyWffuHFo3cnHgOoH3dwq7u3FLHqdYUilD
bj3k9HJZrLhGGbYXjJgKaHZj8r2e+NkXy7F4h+W6lA3dqMpeYMrrUo7ceov6
TafqtVcF0oS1f1xz7EIujpydIf7drKwTzQR11A1SK7E4f8O9dyGd0/utQm79
17RrpfZ77ypUjdy43mJWJ1avXl7/qqQK20nVSqm5JOTiTm49eSBj02c3x2rc
LSXGVNtJwqV7rU/cr6pGbn0aJj7L7/32Gvz9MbrxUFrHNJ81uO+b58hR1w40
Ptj9bkllzb/9mnXgcr0MhtxkDe4vnB9+nNaOv6tEQjR31CK3Xs5LNBJqOFyL
i/f33t4W3I4Pld4Pzz9Wi7PqHDcIXGxHLs41Cbe1+RPfhkemrrXIrd8d74w9
+V1aiyEvxQRsKltRuq0yfoZ4HQryVM0JLWrFAHnp0FKxOuTihfsCLkKvBOuw
u1JZ1uNRC86QztYtWVKHE0vM1B84tqDKas0hlK1DLh6x96sef/OoFjdKf/X2
KGlGSzFT4XDPWiRf8msNLmom+OM+P+l8vOSBRC2uNDvrZvynGS/9PTG//2k1
np657/vsGS2EvLXNTrmbLWnBO/owU7+oCvWe79ybdaIFn8nf9XPNrpz23xYk
0/bFq2+pxMEuO6329y2E/j3emXV/rmvBlq/yb8TmVKBEi+BOvl8t0/GgnNiv
jFCvkHdfGbJmq5mM67fiQy8ty1MOZdgzsmCZv0UrYa8vhHyfWaS3YlrI3qzJ
iRL8WM0X85Ajv8a8/YObG0tQM/bU/FUr2wh/mPNpbX/7rjb0WTd3t+/2YkIf
veVF42vyizDWdznLoKANI5KtF636XIj7JKVFO8baCH9sT2v/vmpXO7Zn6EkG
Ligg7OFSoOi1tug8pG/Z3NyV346ll52+ZN/Nw7id1ve7ytqJ+MD60Vthy27H
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
gfZ8ZJxd6sTnu9sdDevOpyupk/GO6q/PL2Iv490d7L2RWmQi7lPd0hy22ZPx
4fuFplutb8C6SMEfEu6cPMv3O6HkjTfRpz02Jd8n0KS8lM4OJqO/d+TXV+tf
wm2l/TPb0v+rA3ziT4mubSSjj5XX0xHPt//6rHQy7tD7evbz4w/wuM9HX/0H
GfV7qWuS1cJhwaH5DFhDIfLa4cNODo/UKPjs/urnOXYRwMV9H41j9yxkR4Pr
upzft20pRN78MRpp3XWLgiE9xzQvWCZAr9vtjQ8+UlA9i35yrnMy1CnJNo3W
U4i83GKhLlnSTEEbC2V567pkcP0tcmtxKwVnRv36+FIghegz+0zJJw3uZUsY
z5rg4FbloKsfL6fDHOmC7YqzqERdwPQ1/Xl5CRU3+Hz8aCWW9S/vqlDx5uRJ
3sWS2aB3MVZDeTMVvS84rf+inwMJ+/Z7q+tTib5O2cxat1PHODg7dtaNz8/z
iL71ou4WIS/zfPB6E+N96QmV6Butcs4+sfMFFdG89PZ1wQLovfPktcg7KtGH
8tjf6gVIRZ/bdR0qh4ph0xG3M32tVBxpLI4rCyyGLz69bVWdVKKv9b39wvOo
fioKJmk87bxcCvJvZ+TVjXL2IzKc3NtQBusNxQ7umkkj+mT7Z9qphwnTUGF+
6O624HIIaxJdrCBGQ7j2aZ1wYyXYm5hGpMvRiL6bX2XwjyQOvcB+G/v3hiqi
7550y9N7wYEaaHx/smvzGhrRx6urGpS0UqHh/AKhrdtf18CxV8Kyo2tpWLt3
5hMpVi1Y9X+4PUuVRvQJ7yandW9ZR8NChWs7wufXwZowio015/62Z0/2DUM9
jJnftlujRCP6kPw9m2/6raLhJf/5Qa+N62FLpXBNBYfezAE8SyLqCf7ylEOi
l7s1wAL+aNE/82lE39NTQNVw21wafi2Ppy9JaYDTdXNZEZI0VHUrMlr5vBFm
+i/0G/xLJfqqP2q94o+MUFFfof+b4skmuKWxeHUylUr0aSX+bLKIraDiTF99
2+Z3zWB587lEcBaV6PPOXDzBKxtMxXfijxrgUwtYfRFz1wmiYsmyYPvR562E
vQCzVzIpuhVsBAIO2l+nEn3lCzxrG9e4UfG59gIHt5JWcNh34G/cVSoaVtP3
x8e0geI5pwjTo1SiT/0qX15eT4+KgUdptX+utcOGw09f39pJxc0LKIPOue3Q
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
1Gcc+lNu783jI8n/Xz32/wAcQokv
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[1, 1, 0], LineBox[CompressedData["
1:eJwl11OwGIYSANAb27Zt27Ztq7HV2LZt27btNLadtPE7mfdxZvd7Z1aJGrev
3C5QQEBAoSABAX9iYKQBQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNY
xCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zk
Jg95yUd+ClDwTw0oTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b/qIt7WhPBzrSic50oSvd6E4PetKL
3vShL3/Tj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCaz
mM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vY
zR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAm/3CL
29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhX/7jK9/4zg9+
8ovf/Gn+QAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNf9GWP8O7PR3oSCc604WudKM7PehJL3rTh778
TT/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc
4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvNn
8QciMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bfiLtrSjPR3oSCc604WudKM7PehJL3rTh778TT/6M4CB
DGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUs
YjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxzi
MEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc4z4PeMgj
HvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvPn6A9EYIIQ
lGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCU
ZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAWD/P8H+h8k
wYyu
        "]], LineBox[CompressedData["
1:eJwNw4dWSAEAANDn9CX9ioYGSUpIGlISpSWlPVFIVJQRTRqKhtkSSbTs/Ix7
z7mhmQUJ+XuCIOhxb0gQhBluhJHuM8poY4x1vweM86DxHjLBwyaa5BGTPeox
j5viCVM9aZrpZpjpKbM8bbY5njHXs+Z5zvPmW+AFCy2y2BJLvWiZlyy3wstW
WmW1NdZaZ70NNtpksy1e8arXbLXN697wpu3essPb3rHTLru96z177PW+D3zo
I/t87BP7HXDQIYcd8anPHHXMcSd87qRTvvCl084465yvfO0b3/rO98674KJL
LvvBFT/6yVU/u+YX1/3qNzfcdMttd/zuD3/6y9/+8a+7/vM/Dg5Z1Q==
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"38.23036468734516`", "\[VeryThinSpace]"}], "+", 
          RowBox[{"55.59543065086716`", " ", "x1"}], "-", 
          RowBox[{"369.424742998777`", " ", 
            SuperscriptBox["x1", "2"]}], "-", 
          RowBox[{"366.0052570882129`", " ", 
            SuperscriptBox["x1", "3"]}], "+", 
          RowBox[{"1182.6842352587944`", " ", 
            SuperscriptBox["x1", "4"]}], "+", 
          RowBox[{"573.2171174738475`", " ", 
            SuperscriptBox["x1", "5"]}], "-", 
          RowBox[{"1257.8956480748088`", " ", 
            SuperscriptBox["x1", "6"]}], "+", 
          RowBox[{"98.14628289346021`", " ", "x2"}], "-", 
          RowBox[{"177.11681699170055`", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"842.2052479123489`", " ", 
            SuperscriptBox["x1", "2"], " ", "x2"}], "+", 
          RowBox[{"1279.3224145913498`", " ", 
            SuperscriptBox["x1", "3"], " ", "x2"}], "+", 
          RowBox[{"1629.7384730921174`", " ", 
            SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
          RowBox[{"2259.976153272608`", " ", 
            SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
          RowBox[{"194.25786561726866`", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"719.4449193631826`", " ", "x1", " ", 
            SuperscriptBox["x2", "2"]}], "+", 
          RowBox[{"1907.8747685687401`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "2"]}], "+", 
          RowBox[{"2553.5908222914413`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"4142.751186322558`", " ", 
            SuperscriptBox["x1", "4"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"511.8938948548222`", " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"914.3060410646514`", " ", "x1", " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"2919.0577884969184`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"4290.554371855803`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"514.2754403208446`", " ", 
            SuperscriptBox["x2", "4"]}], "+", 
          RowBox[{"1780.605228221617`", " ", "x1", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"4229.623845218967`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "4"]}], "+", 
          RowBox[{"785.3156633025543`", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"2055.537909045051`", " ", "x1", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"750.3797799024617`", " ", 
            SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
     Annotation[#, 
      38.23036468734516 + 55.59543065086716 $CellContext`x1 - 
       369.424742998777 $CellContext`x1^2 - 
       366.0052570882129 $CellContext`x1^3 + 
       1182.6842352587944` $CellContext`x1^4 + 
       573.2171174738475 $CellContext`x1^5 - 
       1257.8956480748088` $CellContext`x1^6 + 
       98.14628289346021 $CellContext`x2 - 
       177.11681699170055` $CellContext`x1 $CellContext`x2 - 
       842.2052479123489 $CellContext`x1^2 $CellContext`x2 + 
       1279.3224145913498` $CellContext`x1^3 $CellContext`x2 + 
       1629.7384730921174` $CellContext`x1^4 $CellContext`x2 - 
       2259.976153272608 $CellContext`x1^5 $CellContext`x2 - 
       194.25786561726866` $CellContext`x2^2 - 
       719.4449193631826 $CellContext`x1 $CellContext`x2^2 + 
       1907.8747685687401` $CellContext`x1^2 $CellContext`x2^2 + 
       2553.5908222914413` $CellContext`x1^3 $CellContext`x2^2 - 
       4142.751186322558 $CellContext`x1^4 $CellContext`x2^2 - 
       511.8938948548222 $CellContext`x2^3 + 
       914.3060410646514 $CellContext`x1 $CellContext`x2^3 + 
       2919.0577884969184` $CellContext`x1^2 $CellContext`x2^3 - 
       4290.554371855803 $CellContext`x1^3 $CellContext`x2^3 + 
       514.2754403208446 $CellContext`x2^4 + 
       1780.605228221617 $CellContext`x1 $CellContext`x2^4 - 
       4229.623845218967 $CellContext`x1^2 $CellContext`x2^4 + 
       785.3156633025543 $CellContext`x2^5 - 
       2055.537909045051 $CellContext`x1 $CellContext`x2^5 - 
       750.3797799024617 $CellContext`x2^6 == 0, "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5604609393816767`*^9, 3.560463769616811*^9, 
  3.560470554133403*^9, 3.560471593540604*^9, 3.560471625989388*^9, 
  3.560471684187105*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
6L29Xn7EMYg44rSpfJKO/v//iv8CNY3kqA==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1:eJwl1EWUEAQUBdApYAKQlEbpkO5GWmlGQqWHzkGU7u4S6W6kyyClu7vBAhSU
7rxzWNz3N2/7frqo6MiOgQEBAXFFzA0imBBiEZs4hBJGOBExfeIRnw9IQEIS
kZgkJOVDkpGcFKQkFalJQ1o+4mPSkZ4MZCQTmclCVrKRnU/IQU5ykZs85CUf
+SlAQQpRmCIUpRjFKUFJSlGaTylDWcpRngpUpBKf8TmVqUJVqlGdGtSkFpF8
QW3qUJd6fMlXfE19GtCQRjSmCU2JohnNaUFLWtGaNrSlHe3pQEei6cQ3dOZb
vqMLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCbwPRP5
gUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS/mRZSxnBStZxWrWsJZ1rGcD
P/Ezv/ArG9nEZrawlW38xnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdX7nD/7kL/7mBje5xT/8y23u8B//c5d73OcBD3nE
Y57wlGc85wUvecVr3vCWmPEHEkQwIcQiNnEIJYxwIgLf/4t3DZeBnA==
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"1.1421349413949629`", "\[VeryThinSpace]"}], "+", 
          RowBox[{"0.6013206992316362`", " ", "x1"}], "-", 
          RowBox[{"1.871746021918109`", " ", 
            SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"0.1266829508604525`", " ", 
            SuperscriptBox["x1", "3"]}], "-", 
          RowBox[{"1.4238598804082194`", " ", 
            SuperscriptBox["x1", "4"]}], "-", 
          RowBox[{"0.24310143794161462`", " ", 
            SuperscriptBox["x1", "5"]}], "-", 
          RowBox[{"1.036180802027848`", " ", 
            SuperscriptBox["x1", "6"]}], "+", 
          RowBox[{"1.167183306967721`", " ", "x2"}], "-", 
          RowBox[{"0.9157338885044931`", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"0.3687311715903987`", " ", 
            SuperscriptBox["x1", "2"], " ", "x2"}], "-", 
          RowBox[{"0.04855641474308441`", " ", 
            SuperscriptBox["x1", "3"], " ", "x2"}], "-", 
          RowBox[{"0.20707426137339366`", " ", 
            SuperscriptBox["x1", "4"], " ", "x2"}], "+", 
          RowBox[{"0.029235077367497576`", " ", 
            SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
          RowBox[{"1.2695293411108353`", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.3451842152419499`", " ", "x1", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.6064196845410812`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.04318486337910803`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.2926221944435167`", " ", 
            SuperscriptBox["x1", "4"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.1737758215527054`", " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.26931836012072896`", " ", "x1", " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.2802808737261971`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"0.017366811487270956`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"1.1631598974973163`", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.2869562470985799`", " ", "x1", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.3289723611146497`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.46910538786929556`", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"0.1379595080654664`", " ", "x1", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"0.9319895961536784`", " ", 
            SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
     Annotation[#, 
      1.1421349413949629` + 0.6013206992316362 $CellContext`x1 - 
       1.871746021918109 $CellContext`x1^2 + 
       0.1266829508604525 $CellContext`x1^3 - 
       1.4238598804082194` $CellContext`x1^4 - 
       0.24310143794161462` $CellContext`x1^5 - 
       1.036180802027848 $CellContext`x1^6 + 
       1.167183306967721 $CellContext`x2 - 
       0.9157338885044931 $CellContext`x1 $CellContext`x2 - 
       0.3687311715903987 $CellContext`x1^2 $CellContext`x2 - 
       0.04855641474308441 $CellContext`x1^3 $CellContext`x2 - 
       0.20707426137339366` $CellContext`x1^4 $CellContext`x2 + 
       0.029235077367497576` $CellContext`x1^5 $CellContext`x2 - 
       1.2695293411108353` $CellContext`x2^2 - 
       0.3451842152419499 $CellContext`x1 $CellContext`x2^2 - 
       0.6064196845410812 $CellContext`x1^2 $CellContext`x2^2 - 
       0.04318486337910803 $CellContext`x1^3 $CellContext`x2^2 - 
       0.2926221944435167 $CellContext`x1^4 $CellContext`x2^2 - 
       0.1737758215527054 $CellContext`x2^3 - 
       0.26931836012072896` $CellContext`x1 $CellContext`x2^3 - 
       0.2802808737261971 $CellContext`x1^2 $CellContext`x2^3 + 
       0.017366811487270956` $CellContext`x1^3 $CellContext`x2^3 - 
       1.1631598974973163` $CellContext`x2^4 - 
       0.2869562470985799 $CellContext`x1 $CellContext`x2^4 - 
       0.3289723611146497 $CellContext`x1^2 $CellContext`x2^4 - 
       0.46910538786929556` $CellContext`x2^5 - 
       0.1379595080654664 $CellContext`x1 $CellContext`x2^5 - 
       0.9319895961536784 $CellContext`x2^6 == 0, "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5604609393816767`*^9, 3.560463769616811*^9, 
  3.560470554133403*^9, 3.560471593540604*^9, 3.560471625989388*^9, 
  3.560471684258481*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxdWHk4ldsXRukailA0SYZUSnE1UFhFhLiVpCvkFmlAppJIqZRQmZqkUipK
kpAhaiENppDpcJzp+875nKJSqEvip3Od0/P8vn/285397bX3Wnu973rXUd/p
a79LQkxMTFZcTOzXGLnZPnR9zzvUl/xnofgSDvrS833o+Q24fX3U3aehHNQo
kY7eLlWHyYnVS41lCfSQHn7POFmDEUs//YO2BK5P0LJO0KpEv9CbSk5JBHbL
ZyvfW1iONoLfSbTPO3nEdT6ip+5wdLk9if4C+89Q7hKrSNeZxO8rdXtWBBej
06vmQk9vEgeHLaMswx5gj++FPU0FJF75ZcY6FU0fzfaXryBxO5OAPfejcUaS
9ZejTBIXyklJTLC+AHlSJ/rEekjM8fm1QRp8OnDii283idrad8vkex6DQXjX
LkYfiVUD3GttzCKY3Bs5tYBP4vDIrwfh0/W2oCX1JO4lLIMehpcD1yY/7dno
fuMl87QaqTeg2x51RzuMRIFb1lWgIzfdc+tuEjd9W+R1bF41PD3tOjLfhUQ9
PdmLax3egtB/gbs+dXCG8UNWTZ7ErLhOKPRrgL/f9Kq5FBJj9t7BLKs8x+fn
CNRykl+mf7UJxIPLvssOcbCuMLpPu6cJLJRyt1TxOHgq6RwnRbEZCgV+csbs
t8Lt7PBojgIH7yj8calnsBWivzHFKRobCw7vefjuPg3m/tomgY1igqcdJBRC
5H2+srCnsl16VXY7KCv5LI4wY42dhw4nCmSulN9iIn2yxalURzpoC9Yz8X76
Z5PXPDo8EIwMvMxfkXh4dwdcEKxjoGBI6ICsL/zdrYoMnDlS2JEtyYCBJ9qF
uwM7UCk06Lm4EwPEBefoQMHx6QxocqneaW9Gx2Iv+cUBCkwIbPvAZXW3Y9KW
EfHCAibE9CZoxLe3oatrRKbaABM6BAvbUGnbiHKvFAvSj1rdV7FvQyuBAyz4
WpjBvKvehhL2ks/977PG7oOGjz59vPf+AwvUqu4ov7zViuccon++nMMei2cL
Vmh9yrq1nQ3NdLH0Zk4zrn/61Ur7Chv2xczYn1vXhKktrwaCcthj/jbhkYnF
MsuRDXN2Sq18MrlpzB82RIyTGcwOb0RVY32T3K9skBD424hPbhe1MZU5sH9d
YO4z3XfodrvX8vs8DghxV+Pz0dl8EwfM6QmaetX1OMlNxvjDbg78e+DE5hiT
elx6KVU8LoYztv9b/Bz1T9i+bA4sGWfkfiq4Bg3sPU4HNHDgZsJcBwX/Ktzt
OEmJQ3JAiNP/4kPAX6bd+2htFZiwd8a7XF0CFri2ap7WqsB/4rScDy8hxs5b
gV/OJfpm6ROwXWGtZ2z1C7xaWhv/ZA8BQhzr+uzxfhhNgOT5s/2xN/IxraBI
x+weAXyVqOu+N7Ow5Ntlu1OlBAhxXNc893p/HQGF8y45q7fH4bX7FUrjWKOY
FswHQGmcprlWFwHi0wI8znhchyqjmrcOfQQIcZ1rOGC6bYAAvY2aR1eoZ0Fp
uofGNTESFkYWrNC5XAKb7Qw4ShIkCHHtuUy6ddrofJNkgkJwfhkM7bpid2R0
/X9xeAn+gXnxTt0EfFD28Hpk/gYmm3Y8TOMRIMR5NvrnadMIMBU3WrwrpQbC
aRPvD2YT0LE7Ujezrh6srthd8rwi/P4dBBw8rcLYS8DOdJUZtI1N8OCwr855
FwL+y4sm0Jfh5O7aRMAZV4ezU5Y1g/A+NKuWmG183gIp3uyQj4oERHnxTH1s
WuFvpYrSM5MIEOLc+GSI07/jCehrKnv6IbMVJpVnOxq85EC027SZZmva4Hxi
4rSoWxwQ4vyio9fpx/s58LxBLSVSmw5zjytY+zlyYJ2Gttjaa3So26/U56rO
ASFuIyZkHsqQ4QCGGKSV93SAMJ+Vn+x7vC6TAYsufQ19kcyGpaR9o8ldJpwe
t97cNogNQtyp3aNjqAZbNPqVfdK+eY0FGo7fXnumsOFPnzSrTCuWyK6rX8bh
SiMWlLrM3iBN/bajVRPqvaCXDbbK86X2TmWCjUPavZ/XOPDHvCsFimoMUdx0
Qjt0degdsP5BZa2ENSHyg7vP4ZuY12ie5XX5L42hw13vGScWfSDgot/axEVb
2sfiSUKKxcWmldrtkOFUaNEUToriVrxopqHteRKmNQZqBA7QYEOtgc3PHhLI
1UZ+BzJpwAxtvDt1Eld0L9cmLw9U8OfCRSy2oJ9rgf2CCS6s6lhaTAtqhuwE
8nPceJ4oD2zWhR2yXMADw4dvGVtfNEJZymGl/kAeNK0x16LJNYLbF4kV2td5
orxSz1D/vvEVDyyjVY9s/d4A7X9+ODC9lQel3sysKcYNY+emQFhv5vGM+O6W
FIQ/VyL3pNeC8lHlo4n+FJjZbm5eG1QD3VHlk61iKDA4fvy1r0U1CMJ2hxLl
/UHZUrXUAgp2KZV2sE68gXVsyiOxlQLHl955En+9gjqVQ4feDFMiHD0K4ZXw
5TtBTzKoZNzBCrA9rvp5terouwlTPi6lbMxupwiXa+acrdnm1gluzOFzpewC
6NGyX77jfCd4Cxx4AuWvbx3hJHfCHOcql6CbOZCc57n0y4NOEQ/sNn8aa1rX
CVJeYqV7VybBVFq+mtTHTpiiHJFfoZQEgzm0/Xqj70Jeid3ZaOM90AkrvnXw
b4tdwLM38gaLJ/FFvGRi2dVlO4MPDr0PhxL776HhUJfuiXl8UMxSsld1zUZZ
qd29y/T4wBTENxelWq2v/rGcD1cHPrLV9fKxdjXx4ocRH/K2XXvzbH4xThz4
5HtqNV/Ekxq9h+VMgQ+0BabBj5RKcdZVozzDtXzYIheSV1BXjkU12QorLPki
3jXvT4hINRu1l6VvNNDwGk3jLrJTTfgiHq9vtTTZsYoPWSG6B73Dq1BWPi7J
fvTd3VtudeXbGpyWPG5jjgFfVCfSFzi/e647up+fUZH6cB0uXd7SLj2XD9PJ
gQncqnocqDHwt5vFF9WhLdfflyfK8MHmTm7Khc/vsICbGNPd3ymqezdVHesu
szrB6vHgXFubZuz+oO5SWNkpqqPfd0TsUUjvhG53u4QogzaU+att+SrPTlHd
9nNv3zAwev8RP+y82+LbkLIsal/m3AkN9wJnvJ3RjsJ86ZPurQqLpePZ++WH
yMmdIt0Q7hVZoPiDAv1PTkGt3A4M0Z3VWthCQfHLW5sMgxnIIOrnzyqh4LO/
+ZQDvQwU5rdQx0xcbx394wQFwa7RWGjBwgUyR2oLnKix87NQxa6bu2sFBcMS
HvPUXYW6iYJjkhm2O46xcVuJyvxpH3kiXZUx2/3kHA4P3D21+Dfa2VhO+Bhn
FPCgzOcSO8aOgzJixQtmB/BEus0yOPfUWxkeNJ9Vd4yfRGDM4NDEET4X5K3d
trfYECjkD6GOdFA22RLQRcKdPhPaT3cSl02P3KfxkAR3H9Whc0lCnUmOxZeL
j84eunVqAwEX/o3p//sYF8WazNyXLh+tw4Vv40OjuCId4Gzq3Y1ZXKyU0TaM
GtUJ3YdLfp7q4+IrPZ02450ceLeotCRiCU+ka9atzLe2dOJhbE17Ai2MDR0H
jz/QzOChl2tsrbgpC6yrPCSXZfFEOkyloeGaezYPk8O2paeqsMZ4kYeqErfV
Wikm1Mw2Sdbp4yGn7saxzokMCIjdY8sa4Yl05LbhR0HXp1BoN+6m4ssWOsxL
Zj4pWUCh/7ENceW8dqgYsWi5vYoS6Vow2erLtqPQ1RiH+htocPDiQgm/jRS+
19k6nn2TBvGXf4w3+5sS6eZFFgfPf3ej0I3sSTo6swXk5W4OZHpSKORp6R0G
H87vorByiVlMTFrjaPxj+9o9KJFuLxsaCVFypbCbk38ob6getmxL76TWUqg3
RzbE/ngNXDq9bEqfISXqG1oODVc3LqGwJ0dnuvmuN1CgP+tMvCaF+7uKcva1
voLtnx1s1ihSKOTVwGCXQxekKVw++7xGVtsL2Lfa+fGsbh5+ToyXk2wuhQwf
zWgdgifqY6iR4vVzGTxc09Ei/7j2uSje+DWg9s7MQgCx9Sdq0nko5Nkfk2cF
+t3hYVMk+8pJzSfA7T47yPXj4WbHkPdNKx/AN9qe4sjtPFFfpZKjU/h0DQ+j
s/VLKhRTwHIR49aBSTwU8uz0dZX8uC4uTgzDSV82nUZFK//MBU+4oj5OmJ85
xlfTLzCz8elMd/dBJy5WM6bNbKzLweXTj14otOeikGcX+4eFe1ty0Z77OUf6
Xh5+vdpcS07g4pyhfjHz8Kf4TTrcwpn83VcmCuiRxIdZEacNxEtxoV+V7NAj
Ek14AWVTpMvQNrwlbm4cif+uM+TkbCpHaRlMrB7Fk5B3g3Vr7GZvJrHI+4ai
3tMKUR87N+I47fCxV8jmB2d4fSHwdvfBt9+3vkFfrRG5KNrvPrg3Z9qR4esE
3pN3COOYVmNaeZrl/BgCx1ObzhwhqzEy2XF7sjGBQl5eQX6Lkp1FYPxgPjN5
fR0K+QHdlXfKZtRj2+0vtKOxv/vyvhB1lbN6HJwIzfY7et/hmsbgLXer2Sjk
ZSEf9ch5Z78aaUKXZQ0+hkvYOM/Sydp2agu6yKWWujayUMjTQj6sm5mmrHeG
hqpk/5+v5zOxcWPD+6Xj29Ak120wqZ6BQt4W8u/D/bES5QfoGOZ5SrWy6PdY
JPPM8sY+uui7NfGRDY8ntmGMZuaMtfpM0b7RVhO6zDtYo/FcnNM+uwWLJhin
jhiwca9die/cj7/9+P//J/4H9KHPQg==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwl1FV4EAQUBeCNbTCGdCqNdJekdKh0d44G2SgJBekuCenubqW7wyAFlG6Q
Linh38fDf+7LeT03bXhkjYjAgICAWCLqRiOIYEKITgxCiUlYVJdPiE0c4hKP
+CQgIYlITBKSkoxP+YzkpCAlqUhNGtKSjs9JTwYykonMZCEr2chODnKSi9zk
IS/5yM8XFKAghShMEYryJcUoTglKUorSlKEs5SjPV3zNN1SgIpWoTBWqUo3q
1KAmtahNHepSj/o0oCGNaEwTmtKM5oTTgpa0ojVtaEs72tOBb+lIBJF0ojNd
6Eo3vqM7PehJL77nB3rThx/pSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMtPjGM8
E5jIz0xiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrW
s4Ff+JWNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjF+43f+4E+Oc4KT
nOI0Z/iLs5zjPH/zDxe4yCUuc4WrXOM6N7jJLW5zh7vc41/u84CHPOIxT3jK
M57zgpf8xyte84a3vON/3hM1/kCiEUQwIUQnBqHEJCzw46/4AALagY4=
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"0.2147136905780186`", "\[VeryThinSpace]"}], "-", 
          RowBox[{"0.007594246346729309`", " ", "x1"}], "-", 
          RowBox[{"0.40128039915300645`", " ", 
            SuperscriptBox["x1", "2"]}], "-", 
          RowBox[{"0.0666800072202526`", " ", 
            SuperscriptBox["x1", "3"]}], "-", 
          RowBox[{"0.31766630908068666`", " ", 
            SuperscriptBox["x1", "4"]}], "-", 
          RowBox[{"0.11186993879493658`", " ", 
            SuperscriptBox["x1", "5"]}], "-", 
          RowBox[{"0.24308855743105082`", " ", 
            SuperscriptBox["x1", "6"]}], "+", 
          RowBox[{"0.17609634594466822`", " ", "x2"}], "-", 
          RowBox[{"0.11744852256595001`", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"0.05584262932779163`", " ", 
            SuperscriptBox["x1", "2"], " ", "x2"}], "-", 
          RowBox[{"0.014680696479255576`", " ", 
            SuperscriptBox["x1", "3"], " ", "x2"}], "-", 
          RowBox[{"0.03627430873533777`", " ", 
            SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
          RowBox[{"0.0036420692731302965`", " ", 
            SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
          RowBox[{"0.23187720410424695`", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.06214433464397819`", " ", "x1", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.10912918480896443`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.021144852902208997`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.05525124047506288`", " ", 
            SuperscriptBox["x1", "4"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.09712320664318726`", " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.030142920585869693`", " ", "x1", " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.047536428491034226`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.0010144514567487516`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.26765332191792174`", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.04037688641836404`", " ", "x1", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.06093902129217504`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.18120232890071689`", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"0.012938518456826077`", " ", "x1", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"0.26289806204294314`", " ", 
            SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
     Annotation[#, 
      0.2147136905780186 - 0.007594246346729309 $CellContext`x1 - 
       0.40128039915300645` $CellContext`x1^2 - 
       0.0666800072202526 $CellContext`x1^3 - 
       0.31766630908068666` $CellContext`x1^4 - 
       0.11186993879493658` $CellContext`x1^5 - 
       0.24308855743105082` $CellContext`x1^6 + 
       0.17609634594466822` $CellContext`x2 - 
       0.11744852256595001` $CellContext`x1 $CellContext`x2 - 
       0.05584262932779163 $CellContext`x1^2 $CellContext`x2 - 
       0.014680696479255576` $CellContext`x1^3 $CellContext`x2 - 
       0.03627430873533777 $CellContext`x1^4 $CellContext`x2 - 
       0.0036420692731302965` $CellContext`x1^5 $CellContext`x2 - 
       0.23187720410424695` $CellContext`x2^2 - 
       0.06214433464397819 $CellContext`x1 $CellContext`x2^2 - 
       0.10912918480896443` $CellContext`x1^2 $CellContext`x2^2 - 
       0.021144852902208997` $CellContext`x1^3 $CellContext`x2^2 - 
       0.05525124047506288 $CellContext`x1^4 $CellContext`x2^2 - 
       0.09712320664318726 $CellContext`x2^3 - 
       0.030142920585869693` $CellContext`x1 $CellContext`x2^3 - 
       0.047536428491034226` $CellContext`x1^2 $CellContext`x2^3 - 
       0.0010144514567487516` $CellContext`x1^3 $CellContext`x2^3 - 
       0.26765332191792174` $CellContext`x2^4 - 
       0.04037688641836404 $CellContext`x1 $CellContext`x2^4 - 
       0.06093902129217504 $CellContext`x1^2 $CellContext`x2^4 - 
       0.18120232890071689` $CellContext`x2^5 - 
       0.012938518456826077` $CellContext`x1 $CellContext`x2^5 - 
       0.26289806204294314` $CellContext`x2^6 == 0, "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5604609393816767`*^9, 3.560463769616811*^9, 
  3.560470554133403*^9, 3.560471593540604*^9, 3.560471625989388*^9, 
  3.56047168431164*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxdVHlQ01cQBofKIV7Bgkc8obQGPEEpHrMK1BIOp0ptdFBqoRQP0gxGFCiG
tIKK6AwER9Ey0KAo1gOQElASliQkASQQcickJGrFtioDAipKoMI0vz+6M292
Zuft7vu+b/ctjWfsTJzi4OBA+3AmvDZvI03G4kKARcTdNq0L79G7efTu6/At
u4jVlqZA13L3Z4k/1UCC61DHQT85KvtD57iE3YdIjg+V49OKGQ+YbOoXfMhl
xLkGfSnDsfEJQ2izyS4H6MXomdDHDbopBIWidXd5dhNajjs3XqOIIGWiDU+A
LyhfLYo+LYaLOZ5rtlbwUGZyvJAe3QzdkZ+l5GA1hk/2kcDRw2+8Qo6VI2ms
Uxa2XQJFE2FqGdZp1jonP5KAg69NEBW+C18Y2qg624f77rkxj+tPgW1Ws2jG
UwnYcQ0mBQXKZ0jBc3XBpcTHNUC6mrNvrPdDvi3tYs3GOiCBc/qJOAnYcdj7
j/o1sOqnCuHABm7/3O3NhK85eqe/9JwYzJW/crP5UgjsG39eNUcEk2nUNlgu
7zu5KFMI/IEgz1DJQ6IuXCl05m7ugLTSMXNedAOktLfkniZ3QVEWI+Tn5Lr/
8pUQ7bq09XpLNawcqT1vtagIHHMz6StSvDQQy6I4qysug9uAU6LWXwuKrR0c
XQkLJ+ml6wie+LFbufRQPTT9ldsRybqL+zuHRbFDeuD0Ti8Iy6hFj6FLHFOm
gdBF6Sh285cbwCnpQhSVIsas9to93YeMUMkUy9NJEtTef9S7KddIzIHxKc0j
udoI/6RljXr0taNG82fEmTtGYFK1EU1nOpHB2WaSlxqBMVm/C4tt4Q/2rTJC
ztuWzeuD1Tigyro1u98AkRvJ7AMH1Uj925/EtxigfhKvFq2pUw7skerBmDTX
J9ysw7Gq38MLGHqgN74uWnPYQODlpNU+391nxORV3rKZe7Xg6DBhJvw88/Zt
7WINDBYal4/QzJhd781fyFUBaZ5AS3LpQTvf+i1KNyeyBZeoXsdc3KIA91B3
9pJCC84Up/u4JMshY0EeaaHZgnZ9FwdYBfwZVkxvZ795taEFUrsXt2lWWVHA
az0ozxUCeepKP/cAK7EXjmXbYigrrGiRlqW66vgQmB82L8LJiqJR3uG4hko4
yfQ6YRZbiD1siK0KMZy1YPIR5tTIBRdg+7t7SjbFgtc+eTIsbWYieXzHp16l
PWjX2XfCcXpw87C/OCftKkpLHqkfWswYN/1WsfBqFX6X8CYxQ2TCgWiDZuD2
A2yKd5p1JM6Edt2HSt5VMEJNuInGnX2luRHt/L3tUqx+GdWEK/Uyc3mYEctD
/nDquSPB8Zjj5+bJ9Gifg96PWoaVQzqsENmke2kP0a5f4Y1x+bFf5Pj9x2d4
2eEanH8ygf7KW4FfewuS1j1TIjEXSaz6xnVKwtvjdU/8bpCPK9ElZtTQulOB
2oQUx5fzVbiTPSr0CJYjU7mMQhaqiHcIPLzqqoPUuOjm+7PfVDbjshGprvM3
NVIW8vIC14vRwfPHKLe7agI3433wtMJ8NcYfSgjGkhpMLZDe/GGXGkllIzRB
ZA3KlvsOlu1QEzzvfz/kwWSqMF66P/BUVj4WD94vdn6rxMezHL3X7skn5vz/
/+u/V0P4pw==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.5, 0, 0.5], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87}]},
      RowBox[{
        RowBox[{
          RowBox[{"0.004686393818729945`", "\[VeryThinSpace]"}], "-", 
          RowBox[{"0.017268512928123994`", " ", "x1"}], "-", 
          RowBox[{"0.05402666467428378`", " ", 
            SuperscriptBox["x1", "2"]}], "-", 
          RowBox[{"0.018211930272488058`", " ", 
            SuperscriptBox["x1", "3"]}], "-", 
          RowBox[{"0.04288367434711196`", " ", 
            SuperscriptBox["x1", "4"]}], "-", 
          RowBox[{"0.020785725544382294`", " ", 
            SuperscriptBox["x1", "5"]}], "-", 
          RowBox[{"0.03381512108366967`", " ", 
            SuperscriptBox["x1", "6"]}], "+", 
          RowBox[{"0.006419565612289005`", " ", "x2"}], "-", 
          RowBox[{"0.013275614657397608`", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"0.007610399191308554`", " ", 
            SuperscriptBox["x1", "2"], " ", "x2"}], "-", 
          RowBox[{"0.0023858654464389327`", " ", 
            SuperscriptBox["x1", "3"], " ", "x2"}], "-", 
          RowBox[{"0.0046720534985891455`", " ", 
            SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
          RowBox[{"0.0010831882653128603`", " ", 
            SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
          RowBox[{"0.03727153103610352`", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.00885309965691589`", " ", "x1", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.01393200071403749`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.0035498050869903464`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.006941938423802738`", " ", 
            SuperscriptBox["x1", "4"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"0.022245711272531478`", " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.0035483285730602116`", " ", "x1", " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.006248971708272024`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.00039450385931261676`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"0.04072376148630121`", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.005003955872916698`", " ", "x1", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.007885961265377397`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"0.03153152560454222`", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"0.0015768566452031532`", " ", "x1", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"0.040588521868169275`", " ", 
            SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
     Annotation[#, 
      0.004686393818729945 - 0.017268512928123994` $CellContext`x1 - 
       0.05402666467428378 $CellContext`x1^2 - 
       0.018211930272488058` $CellContext`x1^3 - 
       0.04288367434711196 $CellContext`x1^4 - 
       0.020785725544382294` $CellContext`x1^5 - 
       0.03381512108366967 $CellContext`x1^6 + 
       0.006419565612289005 $CellContext`x2 - 
       0.013275614657397608` $CellContext`x1 $CellContext`x2 - 
       0.007610399191308554 $CellContext`x1^2 $CellContext`x2 - 
       0.0023858654464389327` $CellContext`x1^3 $CellContext`x2 - 
       0.0046720534985891455` $CellContext`x1^4 $CellContext`x2 - 
       0.0010831882653128603` $CellContext`x1^5 $CellContext`x2 - 
       0.03727153103610352 $CellContext`x2^2 - 
       0.00885309965691589 $CellContext`x1 $CellContext`x2^2 - 
       0.01393200071403749 $CellContext`x1^2 $CellContext`x2^2 - 
       0.0035498050869903464` $CellContext`x1^3 $CellContext`x2^2 - 
       0.006941938423802738 $CellContext`x1^4 $CellContext`x2^2 - 
       0.022245711272531478` $CellContext`x2^3 - 
       0.0035483285730602116` $CellContext`x1 $CellContext`x2^3 - 
       0.006248971708272024 $CellContext`x1^2 $CellContext`x2^3 - 
       0.00039450385931261676` $CellContext`x1^3 $CellContext`x2^3 - 
       0.04072376148630121 $CellContext`x2^4 - 
       0.005003955872916698 $CellContext`x1 $CellContext`x2^4 - 
       0.007885961265377397 $CellContext`x1^2 $CellContext`x2^4 - 
       0.03153152560454222 $CellContext`x2^5 - 
       0.0015768566452031532` $CellContext`x1 $CellContext`x2^5 - 
       0.040588521868169275` $CellContext`x2^6 == 0, "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5604609393816767`*^9, 3.560463769616811*^9, 
  3.560470554133403*^9, 3.560471593540604*^9, 3.560471625989388*^9, 
  3.5604716843242064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotDecisionBoundaryLogitModel1", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]fit", "=", "\[Beta]FitLogitModel1"}], "}"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Beta]fit", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], ".", 
           "nonLinearFeatures"}], "}"}], "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "1"}], ",", "1.25"}], "}"}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", " ", "Blue"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5604485397462807`*^9, 3.5604486133434*^9}, {
   3.5604487479543877`*^9, 3.560448754504222*^9}, 3.5604487899617863`*^9, {
   3.560457032004807*^9, 3.5604570529858017`*^9}, {3.560459080785722*^9, 
   3.560459106723893*^9}, {3.5604592043951597`*^9, 3.560459209265709*^9}, {
   3.560460931633381*^9, 3.560460934946306*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxle3k8VP/3vyWFVKSFoiQpRakkqRyhorSoRAuloiSSKGsqoiSRRGmRhKJI
2ePY931fxpi5szCTLe2UfvORue/H4/vzz30c997XPa+zP8/rzKIT5/dZCwkI
CHQKCwj877polxj74AMuUNLsO9Ps25F6xsop6hUXxE71qDVebkOPxOVXvrzj
wo57Skb3lNqwJcCmRyyLC088zdyvJLeierzb2M9iLmT87/XOFtTSX/r7dSUX
Imppcs9UWvDYlw0rnzVwQdnofws04+H1o68cWrjg2BFZZ8dqwpgpKevM2rhw
/3/LGzXhhTd7Tl9u5QL78LOagbeNKJK2734Jj/4frwICjfimVOSnZDMXYh2/
zqCaNiAnwHN2bj0Xzv/v82n1ePOz7iU67/uDDwdL3UTq0XvaTKZaKX9/dbha
cYX17XwuDDBXKuo212JIbZOCTCb/+zX4wDwpUPsNFyo2O0cV21Vhl1+OpU88
j9/x9SuR8qVku1YMF35Pjdw9sqQSXQQiVjrw5LdzXD7l2Lhzm9YeXy64uiaI
+L0owZ5Ngf5FPvz9l2COSEP5fh69cs2OP798S/Dv//68ucB5KbY3floJesoN
x/+x5e+3CKVVImrjTLlwZ+a0J3PnFuBbRymroj1c6BrfTz42jhW0LtnNBbUU
N+3dsXkYLVjSvnwbFw7W+D3zvYFYZqb0vGM9Fy6M85+D7SLtv85ockFf3HvT
4rPZuCNny35bDS6UW/oGjA1koVHPtaRuRS4sG+c3A1u/aU+6yaPlRR9kXjqU
hnMzpwn0LeTxKyWw5FVIKuZInbmsIcUF6jg/77GgLDikkkd7UwtEyrLeoUWZ
ZvEHCS48/rJdPCs2Cc9lBcqOCXFh+fj6idjo2KwpOYkLJnOHlRaJvkbxnL8d
l8Y40C4b1JTmFoPf1y+xWf6TAxHj+olGl01FZid+cSBW66NPh20UmoYZHrj/
lQM/v8S8aVQKRfPLb3pchjgwdVx+wThrc0Vb9GcO2C8z9k13CkDlMZ2r2wY4
oNUmmO+daQWft2tuvfiJA2fG13cCy4QzN49xObDpZ4/5tAI3yM4Jqgjt5QCM
6/chPDvDUQzgcODsIKNiYe8jsFLanf6Dd39MKDmpWigWDDvfNqv3cCBl3B9i
AY8o35bm3d+yO2C04mUcNEbkNmry6M1DrpsFVJPhm5BLZRibA4rj8kgGCnWR
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
5NEn5wS83fwl9f+rx/4fYIas7g==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwl11OwGIYSANAb27Zt27Ztq7HV2LZt27btNLadtPE7mfdxZvd7Z1aJGrev
3C5QQEBAoSABAX9iYKQBQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNY
xCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zk
Jg95yUd+ClDwTw0oTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b/qIt7WhPBzrSic50oSvd6E4PetKL
3vShL3/Tj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCaz
mM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vY
zR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAm/3CL
29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhX/7jK9/4zg9+
8ovf/Gn+QAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNf9GWP8O7PR3oSCc604WudKM7PehJL3rTh778
TT/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc
4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvNn
8QciMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bfiLtrSjPR3oSCc604WudKM7PehJL3rTh778TT/6M4CB
DGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUs
YjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxzi
MEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc4z4PeMgj
HvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvPn6A9EYIIQ
lGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCU
ZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAWD/P8H+h8k
wYyu
        "]], LineBox[CompressedData["
1:eJwNw4dWSAEAANDn9CX9ioYGSUpIGlISpSWlPVFIVJQRTRqKhtkSSbTs/Ix7
z7mhmQUJ+XuCIOhxb0gQhBluhJHuM8poY4x1vweM86DxHjLBwyaa5BGTPeox
j5viCVM9aZrpZpjpKbM8bbY5njHXs+Z5zvPmW+AFCy2y2BJLvWiZlyy3wstW
WmW1NdZaZ70NNtpksy1e8arXbLXN697wpu3essPb3rHTLru96z177PW+D3zo
I/t87BP7HXDQIYcd8anPHHXMcSd87qRTvvCl084465yvfO0b3/rO98674KJL
LvvBFT/6yVU/u+YX1/3qNzfcdMttd/zuD3/6y9/+8a+7/vM/Dg5Z1Q==
        "]]},
      RowBox[{
        RowBox[{
          RowBox[{"38.230847208490964`", "\[VeryThinSpace]"}], "+", 
          RowBox[{"55.59583281946198`", " ", "x1"}], "-", 
          RowBox[{"369.43018922756477`", " ", 
            SuperscriptBox["x1", "2"]}], "-", 
          RowBox[{"366.0086760474572`", " ", 
            SuperscriptBox["x1", "3"]}], "+", 
          RowBox[{"1182.701810623724`", " ", 
            SuperscriptBox["x1", "4"]}], "+", 
          RowBox[{"573.2232154510732`", " ", 
            SuperscriptBox["x1", "5"]}], "-", 
          RowBox[{"1257.9131480911767`", " ", 
            SuperscriptBox["x1", "6"]}], "+", 
          RowBox[{"98.1466657162587`", " ", "x2"}], "-", 
          RowBox[{"177.12043697661238`", " ", "x1", " ", "x2"}], "-", 
          RowBox[{"842.2108498398533`", " ", 
            SuperscriptBox["x1", "2"], " ", "x2"}], "+", 
          RowBox[{"1279.3433863459327`", " ", 
            SuperscriptBox["x1", "3"], " ", "x2"}], "+", 
          RowBox[{"1629.751184944591`", " ", 
            SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
          RowBox[{"2260.005286939617`", " ", 
            SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
          RowBox[{"194.2605974729822`", " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"719.448245694719`", " ", "x1", " ", 
            SuperscriptBox["x2", "2"]}], "+", 
          RowBox[{"1907.9002174111672`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "2"]}], "+", 
          RowBox[{"2553.60412301735`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"4142.795943036802`", " ", 
            SuperscriptBox["x1", "4"], " ", 
            SuperscriptBox["x2", "2"]}], "-", 
          RowBox[{"511.89458923579`", " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"914.3190647533198`", " ", "x1", " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"2919.066939566614`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "3"]}], "-", 
          RowBox[{"4290.592791223578`", " ", 
            SuperscriptBox["x1", "3"], " ", 
            SuperscriptBox["x2", "3"]}], "+", 
          RowBox[{"514.2802308516873`", " ", 
            SuperscriptBox["x2", "4"]}], "+", 
          RowBox[{"1780.6083031400738`", " ", "x1", " ", 
            SuperscriptBox["x2", "4"]}], "-", 
          RowBox[{"4229.651203014624`", " ", 
            SuperscriptBox["x1", "2"], " ", 
            SuperscriptBox["x2", "4"]}], "+", 
          RowBox[{"785.3150491203105`", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"2055.548452374884`", " ", "x1", " ", 
            SuperscriptBox["x2", "5"]}], "-", 
          RowBox[{"750.3814590578343`", " ", 
            SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
     Annotation[#, 
      38.230847208490964` + 55.59583281946198 $CellContext`x1 - 
       369.43018922756477` $CellContext`x1^2 - 
       366.0086760474572 $CellContext`x1^3 + 
       1182.701810623724 $CellContext`x1^4 + 
       573.2232154510732 $CellContext`x1^5 - 
       1257.9131480911767` $CellContext`x1^6 + 
       98.1466657162587 $CellContext`x2 - 
       177.12043697661238` $CellContext`x1 $CellContext`x2 - 
       842.2108498398533 $CellContext`x1^2 $CellContext`x2 + 
       1279.3433863459327` $CellContext`x1^3 $CellContext`x2 + 
       1629.751184944591 $CellContext`x1^4 $CellContext`x2 - 
       2260.005286939617 $CellContext`x1^5 $CellContext`x2 - 
       194.2605974729822 $CellContext`x2^2 - 
       719.448245694719 $CellContext`x1 $CellContext`x2^2 + 
       1907.9002174111672` $CellContext`x1^2 $CellContext`x2^2 + 
       2553.60412301735 $CellContext`x1^3 $CellContext`x2^2 - 
       4142.795943036802 $CellContext`x1^4 $CellContext`x2^2 - 
       511.89458923579 $CellContext`x2^3 + 
       914.3190647533198 $CellContext`x1 $CellContext`x2^3 + 
       2919.066939566614 $CellContext`x1^2 $CellContext`x2^3 - 
       4290.592791223578 $CellContext`x1^3 $CellContext`x2^3 + 
       514.2802308516873 $CellContext`x2^4 + 
       1780.6083031400738` $CellContext`x1 $CellContext`x2^4 - 
       4229.651203014624 $CellContext`x1^2 $CellContext`x2^4 + 
       785.3150491203105 $CellContext`x2^5 - 
       2055.548452374884 $CellContext`x1 $CellContext`x2^5 - 
       750.3814590578343 $CellContext`x2^6 == 0, "Tooltip"]& ]}],
  AspectRatio->1,
  Frame->True,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.560460937298531*^9, 3.560463771431589*^9, 
  3.560470554367285*^9, 3.5604716039158583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
   "plotTrainingData", ",", "plotDecisionBoundaryFitNMinimize1", ",", 
    "plotDecisionBoundaryFitNMinimize2", ",", 
    "plotDecisionBoundaryFitNMinimize3", ",", 
    "plotDecisionBoundaryFitNMinimize4", ",", 
    "plotDecisionBoundaryLogitModel1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.560396209834659*^9, 3.560396215018712*^9}, {
   3.5603962461404657`*^9, 3.5603962584032927`*^9}, 3.5603988848071747`*^9, 
   3.560447712608869*^9, {3.560459219588296*^9, 3.560459230755776*^9}, {
   3.560471612945953*^9, 3.560471652772374*^9}}],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
r+P5Op6v4/k6nq//f77+C00x6k0=
    "], {{
      {GrayLevel[0], PointSize[Large], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 119], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 120], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 121], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 122], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 123], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 124], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 125], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 126], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 127], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 128], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 129], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 130], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 131], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 132], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 133], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 134], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 135], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 136], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 137], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 138], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 139], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 140], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 141], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 142], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 143], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 144], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 145], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 146], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 147], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 148], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 149], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 150], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 151], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 152], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 153], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 154], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 155], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 156], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 157], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 158], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 159], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 160], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 161], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 162], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 163], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 164], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 165], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 166], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 167], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 168], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 169], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 170], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 171], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 172], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 173], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 174], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 175], InsetBox[
        StyleBox["\<\"+\"\>",
         StripOnInput->False,
         FontSize->20,
         FontWeight->Bold], 176]}, 
      {RGBColor[1, 1, 0], PointSize[Large], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 177], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 178], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 179], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 180], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 181], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 182], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 183], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 184], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 185], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 186], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 187], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 188], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 189], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 190], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 191], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 192], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 193], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 194], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 195], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 196], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 197], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 198], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 199], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 200], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 201], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 202], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 203], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 204], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 205], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 206], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 207], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 208], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 209], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 210], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 211], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 212], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 213], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 214], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 215], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 216], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 217], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 218], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 219], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 220], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 221], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 222], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 223], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 224], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 225], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 226], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 227], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 228], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 229], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 230], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 231], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 232], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 233], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 234], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 235], InsetBox[
        GraphicsBox[
         {RGBColor[1, 1, 0], PointSize[Large], EdgeForm[Thickness[Large]], 
          DiskBox[{0, 0}, Scaled[0.02]]}], 236]}, {}}, {
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[119]},
        RowBox[{"{", 
          RowBox[{"0.051267`", ",", "0.69956`"}], "}"}]],
       Annotation[#, {0.051267, 0.69956}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[120]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.092742`"}], ",", "0.68494`"}], "}"}]],
       Annotation[#, {-0.092742, 0.68494}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[121]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.21371`"}], ",", "0.69225`"}], "}"}]],
       Annotation[#, {-0.21371, 0.69225}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[122]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.375`"}], ",", "0.50219`"}], "}"}]],
       Annotation[#, {-0.375, 0.50219}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[123]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.51325`"}], ",", "0.46564`"}], "}"}]],
       Annotation[#, {-0.51325, 0.46564}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[124]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.52477`"}], ",", "0.2098`"}], "}"}]],
       Annotation[#, {-0.52477, 0.2098}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[125]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.39804`"}], ",", "0.034357`"}], "}"}]],
       Annotation[#, {-0.39804, 0.034357}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[126]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.30588`"}], ",", 
            RowBox[{"-", "0.19225`"}]}], "}"}]],
       Annotation[#, {-0.30588, -0.19225}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[127]},
        RowBox[{"{", 
          RowBox[{"0.016705`", ",", 
            RowBox[{"-", "0.40424`"}]}], "}"}]],
       Annotation[#, {0.016705, -0.40424}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[128]},
        RowBox[{"{", 
          RowBox[{"0.13191`", ",", 
            RowBox[{"-", "0.51389`"}]}], "}"}]],
       Annotation[#, {0.13191, -0.51389}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[129]},
        RowBox[{"{", 
          RowBox[{"0.38537`", ",", 
            RowBox[{"-", "0.56506`"}]}], "}"}]],
       Annotation[#, {0.38537, -0.56506}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[130]},
        RowBox[{"{", 
          RowBox[{"0.52938`", ",", 
            RowBox[{"-", "0.5212`"}]}], "}"}]],
       Annotation[#, {0.52938, -0.5212}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[131]},
        RowBox[{"{", 
          RowBox[{"0.63882`", ",", 
            RowBox[{"-", "0.24342`"}]}], "}"}]],
       Annotation[#, {0.63882, -0.24342}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[132]},
        RowBox[{"{", 
          RowBox[{"0.73675`", ",", 
            RowBox[{"-", "0.18494`"}]}], "}"}]],
       Annotation[#, {0.73675, -0.18494}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[133]},
        RowBox[{"{", 
          RowBox[{"0.54666`", ",", "0.48757`"}], "}"}]],
       Annotation[#, {0.54666, 0.48757}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[134]},
        RowBox[{"{", 
          RowBox[{"0.322`", ",", "0.5826`"}], "}"}]],
       Annotation[#, {0.322, 0.5826}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[135]},
        RowBox[{"{", 
          RowBox[{"0.16647`", ",", "0.53874`"}], "}"}]],
       Annotation[#, {0.16647, 0.53874}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[136]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.046659`"}], ",", "0.81652`"}], "}"}]],
       Annotation[#, {-0.046659, 0.81652}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[137]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.17339`"}], ",", "0.69956`"}], "}"}]],
       Annotation[#, {-0.17339, 0.69956}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[138]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.47869`"}], ",", "0.63377`"}], "}"}]],
       Annotation[#, {-0.47869, 0.63377}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[139]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.60541`"}], ",", "0.59722`"}], "}"}]],
       Annotation[#, {-0.60541, 0.59722}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[140]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.62846`"}], ",", "0.33406`"}], "}"}]],
       Annotation[#, {-0.62846, 0.33406}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[141]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.59389`"}], ",", "0.005117`"}], "}"}]],
       Annotation[#, {-0.59389, 0.005117}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[142]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.42108`"}], ",", 
            RowBox[{"-", "0.27266`"}]}], "}"}]],
       Annotation[#, {-0.42108, -0.27266}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[143]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.11578`"}], ",", 
            RowBox[{"-", "0.39693`"}]}], "}"}]],
       Annotation[#, {-0.11578, -0.39693}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[144]},
        RowBox[{"{", 
          RowBox[{"0.20104`", ",", 
            RowBox[{"-", "0.60161`"}]}], "}"}]],
       Annotation[#, {0.20104, -0.60161}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[145]},
        RowBox[{"{", 
          RowBox[{"0.46601`", ",", 
            RowBox[{"-", "0.53582`"}]}], "}"}]],
       Annotation[#, {0.46601, -0.53582}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[146]},
        RowBox[{"{", 
          RowBox[{"0.67339`", ",", 
            RowBox[{"-", "0.53582`"}]}], "}"}]],
       Annotation[#, {0.67339, -0.53582}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[147]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.13882`"}], ",", "0.54605`"}], "}"}]],
       Annotation[#, {-0.13882, 0.54605}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[148]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.29435`"}], ",", "0.77997`"}], "}"}]],
       Annotation[#, {-0.29435, 0.77997}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[149]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.26555`"}], ",", "0.96272`"}], "}"}]],
       Annotation[#, {-0.26555, 0.96272}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[150]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.16187`"}], ",", "0.8019`"}], "}"}]],
       Annotation[#, {-0.16187, 0.8019}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[151]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.17339`"}], ",", "0.64839`"}], "}"}]],
       Annotation[#, {-0.17339, 0.64839}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[152]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.28283`"}], ",", "0.47295`"}], "}"}]],
       Annotation[#, {-0.28283, 0.47295}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[153]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.36348`"}], ",", "0.31213`"}], "}"}]],
       Annotation[#, {-0.36348, 0.31213}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[154]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.30012`"}], ",", "0.027047`"}], "}"}]],
       Annotation[#, {-0.30012, 0.027047}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[155]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.23675`"}], ",", 
            RowBox[{"-", "0.21418`"}]}], "}"}]],
       Annotation[#, {-0.23675, -0.21418}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[156]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.06394`"}], ",", 
            RowBox[{"-", "0.18494`"}]}], "}"}]],
       Annotation[#, {-0.06394, -0.18494}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[157]},
        RowBox[{"{", 
          RowBox[{"0.062788`", ",", 
            RowBox[{"-", "0.16301`"}]}], "}"}]],
       Annotation[#, {0.062788, -0.16301}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[158]},
        RowBox[{"{", 
          RowBox[{"0.22984`", ",", 
            RowBox[{"-", "0.41155`"}]}], "}"}]],
       Annotation[#, {0.22984, -0.41155}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[159]},
        RowBox[{"{", 
          RowBox[{"0.2932`", ",", 
            RowBox[{"-", "0.2288`"}]}], "}"}]],
       Annotation[#, {0.2932, -0.2288}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[160]},
        RowBox[{"{", 
          RowBox[{"0.48329`", ",", 
            RowBox[{"-", "0.18494`"}]}], "}"}]],
       Annotation[#, {0.48329, -0.18494}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[161]},
        RowBox[{"{", 
          RowBox[{"0.64459`", ",", 
            RowBox[{"-", "0.14108`"}]}], "}"}]],
       Annotation[#, {0.64459, -0.14108}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[162]},
        RowBox[{"{", 
          RowBox[{"0.46025`", ",", "0.012427`"}], "}"}]],
       Annotation[#, {0.46025, 0.012427}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[163]},
        RowBox[{"{", 
          RowBox[{"0.6273`", ",", "0.15863`"}], "}"}]],
       Annotation[#, {0.6273, 0.15863}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[164]},
        RowBox[{"{", 
          RowBox[{"0.57546`", ",", "0.26827`"}], "}"}]],
       Annotation[#, {0.57546, 0.26827}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[165]},
        RowBox[{"{", 
          RowBox[{"0.72523`", ",", "0.44371`"}], "}"}]],
       Annotation[#, {0.72523, 0.44371}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[166]},
        RowBox[{"{", 
          RowBox[{"0.22408`", ",", "0.52412`"}], "}"}]],
       Annotation[#, {0.22408, 0.52412}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[167]},
        RowBox[{"{", 
          RowBox[{"0.44297`", ",", "0.67032`"}], "}"}]],
       Annotation[#, {0.44297, 0.67032}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[168]},
        RowBox[{"{", 
          RowBox[{"0.322`", ",", "0.69225`"}], "}"}]],
       Annotation[#, {0.322, 0.69225}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[169]},
        RowBox[{"{", 
          RowBox[{"0.13767`", ",", "0.57529`"}], "}"}]],
       Annotation[#, {0.13767, 0.57529}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[170]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.0063364`"}], ",", "0.39985`"}], "}"}]],
       Annotation[#, {-0.0063364, 0.39985}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[171]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.092742`"}], ",", "0.55336`"}], "}"}]],
       Annotation[#, {-0.092742, 0.55336}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[172]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.20795`"}], ",", "0.35599`"}], "}"}]],
       Annotation[#, {-0.20795, 0.35599}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[173]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.20795`"}], ",", "0.17325`"}], "}"}]],
       Annotation[#, {-0.20795, 0.17325}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[174]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.43836`"}], ",", "0.21711`"}], "}"}]],
       Annotation[#, {-0.43836, 0.21711}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[175]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.21947`"}], ",", 
            RowBox[{"-", "0.016813`"}]}], "}"}]],
       Annotation[#, {-0.21947, -0.016813}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[176]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.13882`"}], ",", 
            RowBox[{"-", "0.27266`"}]}], "}"}]],
       Annotation[#, {-0.13882, -0.27266}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[177]},
        RowBox[{"{", 
          RowBox[{"0.18376`", ",", "0.93348`"}], "}"}]],
       Annotation[#, {0.18376, 0.93348}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[178]},
        RowBox[{"{", 
          RowBox[{"0.22408`", ",", "0.77997`"}], "}"}]],
       Annotation[#, {0.22408, 0.77997}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[179]},
        RowBox[{"{", 
          RowBox[{"0.29896`", ",", "0.61915`"}], "}"}]],
       Annotation[#, {0.29896, 0.61915}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[180]},
        RowBox[{"{", 
          RowBox[{"0.50634`", ",", "0.75804`"}], "}"}]],
       Annotation[#, {0.50634, 0.75804}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[181]},
        RowBox[{"{", 
          RowBox[{"0.61578`", ",", "0.7288`"}], "}"}]],
       Annotation[#, {0.61578, 0.7288}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[182]},
        RowBox[{"{", 
          RowBox[{"0.60426`", ",", "0.59722`"}], "}"}]],
       Annotation[#, {0.60426, 0.59722}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[183]},
        RowBox[{"{", 
          RowBox[{"0.76555`", ",", "0.50219`"}], "}"}]],
       Annotation[#, {0.76555, 0.50219}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[184]},
        RowBox[{"{", 
          RowBox[{"0.92684`", ",", "0.3633`"}], "}"}]],
       Annotation[#, {0.92684, 0.3633}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[185]},
        RowBox[{"{", 
          RowBox[{"0.82316`", ",", "0.27558`"}], "}"}]],
       Annotation[#, {0.82316, 0.27558}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[186]},
        RowBox[{"{", 
          RowBox[{"0.96141`", ",", "0.085526`"}], "}"}]],
       Annotation[#, {0.96141, 0.085526}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[187]},
        RowBox[{"{", 
          RowBox[{"0.93836`", ",", "0.012427`"}], "}"}]],
       Annotation[#, {0.93836, 0.012427}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[188]},
        RowBox[{"{", 
          RowBox[{"0.86348`", ",", 
            RowBox[{"-", "0.082602`"}]}], "}"}]],
       Annotation[#, {0.86348, -0.082602}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[189]},
        RowBox[{"{", 
          RowBox[{"0.89804`", ",", 
            RowBox[{"-", "0.20687`"}]}], "}"}]],
       Annotation[#, {0.89804, -0.20687}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[190]},
        RowBox[{"{", 
          RowBox[{"0.85196`", ",", 
            RowBox[{"-", "0.36769`"}]}], "}"}]],
       Annotation[#, {0.85196, -0.36769}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[191]},
        RowBox[{"{", 
          RowBox[{"0.82892`", ",", 
            RowBox[{"-", "0.5212`"}]}], "}"}]],
       Annotation[#, {0.82892, -0.5212}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[192]},
        RowBox[{"{", 
          RowBox[{"0.79435`", ",", 
            RowBox[{"-", "0.55775`"}]}], "}"}]],
       Annotation[#, {0.79435, -0.55775}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[193]},
        RowBox[{"{", 
          RowBox[{"0.59274`", ",", 
            RowBox[{"-", "0.7405`"}]}], "}"}]],
       Annotation[#, {0.59274, -0.7405}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[194]},
        RowBox[{"{", 
          RowBox[{"0.51786`", ",", 
            RowBox[{"-", "0.5943`"}]}], "}"}]],
       Annotation[#, {0.51786, -0.5943}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[195]},
        RowBox[{"{", 
          RowBox[{"0.46601`", ",", 
            RowBox[{"-", "0.41886`"}]}], "}"}]],
       Annotation[#, {0.46601, -0.41886}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[196]},
        RowBox[{"{", 
          RowBox[{"0.35081`", ",", 
            RowBox[{"-", "0.57968`"}]}], "}"}]],
       Annotation[#, {0.35081, -0.57968}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[197]},
        RowBox[{"{", 
          RowBox[{"0.28744`", ",", 
            RowBox[{"-", "0.76974`"}]}], "}"}]],
       Annotation[#, {0.28744, -0.76974}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[198]},
        RowBox[{"{", 
          RowBox[{"0.085829`", ",", 
            RowBox[{"-", "0.75512`"}]}], "}"}]],
       Annotation[#, {0.085829, -0.75512}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[199]},
        RowBox[{"{", 
          RowBox[{"0.14919`", ",", 
            RowBox[{"-", "0.57968`"}]}], "}"}]],
       Annotation[#, {0.14919, -0.57968}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[200]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.13306`"}], ",", 
            RowBox[{"-", "0.4481`"}]}], "}"}]],
       Annotation[#, {-0.13306, -0.4481}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[201]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.40956`"}], ",", 
            RowBox[{"-", "0.41155`"}]}], "}"}]],
       Annotation[#, {-0.40956, -0.41155}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[202]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.39228`"}], ",", 
            RowBox[{"-", "0.25804`"}]}], "}"}]],
       Annotation[#, {-0.39228, -0.25804}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[203]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.74366`"}], ",", 
            RowBox[{"-", "0.25804`"}]}], "}"}]],
       Annotation[#, {-0.74366, -0.25804}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[204]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.69758`"}], ",", "0.041667`"}], "}"}]],
       Annotation[#, {-0.69758, 0.041667}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[205]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.75518`"}], ",", "0.2902`"}], "}"}]],
       Annotation[#, {-0.75518, 0.2902}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[206]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.69758`"}], ",", "0.68494`"}], "}"}]],
       Annotation[#, {-0.69758, 0.68494}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[207]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.4038`"}], ",", "0.70687`"}], "}"}]],
       Annotation[#, {-0.4038, 0.70687}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[208]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.38076`"}], ",", "0.91886`"}], "}"}]],
       Annotation[#, {-0.38076, 0.91886}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[209]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.50749`"}], ",", "0.90424`"}], "}"}]],
       Annotation[#, {-0.50749, 0.90424}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[210]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.54781`"}], ",", "0.70687`"}], "}"}]],
       Annotation[#, {-0.54781, 0.70687}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[211]},
        RowBox[{"{", 
          RowBox[{"0.10311`", ",", "0.77997`"}], "}"}]],
       Annotation[#, {0.10311, 0.77997}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[212]},
        RowBox[{"{", 
          RowBox[{"0.057028`", ",", "0.91886`"}], "}"}]],
       Annotation[#, {0.057028, 0.91886}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[213]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.10426`"}], ",", "0.99196`"}], "}"}]],
       Annotation[#, {-0.10426, 0.99196}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[214]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.081221`"}], ",", "1.1089`"}], "}"}]],
       Annotation[#, {-0.081221, 1.1089}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[215]},
        RowBox[{"{", 
          RowBox[{"0.28744`", ",", "1.087`"}], "}"}]],
       Annotation[#, {0.28744, 1.087}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[216]},
        RowBox[{"{", 
          RowBox[{"0.39689`", ",", "0.82383`"}], "}"}]],
       Annotation[#, {0.39689, 0.82383}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[217]},
        RowBox[{"{", 
          RowBox[{"0.63882`", ",", "0.88962`"}], "}"}]],
       Annotation[#, {0.63882, 0.88962}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[218]},
        RowBox[{"{", 
          RowBox[{"0.82316`", ",", "0.66301`"}], "}"}]],
       Annotation[#, {0.82316, 0.66301}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[219]},
        RowBox[{"{", 
          RowBox[{"0.67339`", ",", "0.64108`"}], "}"}]],
       Annotation[#, {0.67339, 0.64108}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[220]},
        RowBox[{"{", 
          RowBox[{"1.0709`", ",", "0.10015`"}], "}"}]],
       Annotation[#, {1.0709, 0.10015}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[221]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.046659`"}], ",", 
            RowBox[{"-", "0.57968`"}]}], "}"}]],
       Annotation[#, {-0.046659, -0.57968}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[222]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.23675`"}], ",", 
            RowBox[{"-", "0.63816`"}]}], "}"}]],
       Annotation[#, {-0.23675, -0.63816}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[223]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.15035`"}], ",", 
            RowBox[{"-", "0.36769`"}]}], "}"}]],
       Annotation[#, {-0.15035, -0.36769}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[224]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.49021`"}], ",", 
            RowBox[{"-", "0.3019`"}]}], "}"}]],
       Annotation[#, {-0.49021, -0.3019}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[225]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.46717`"}], ",", 
            RowBox[{"-", "0.13377`"}]}], "}"}]],
       Annotation[#, {-0.46717, -0.13377}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[226]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.28859`"}], ",", 
            RowBox[{"-", "0.060673`"}]}], "}"}]],
       Annotation[#, {-0.28859, -0.060673}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[227]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.61118`"}], ",", 
            RowBox[{"-", "0.067982`"}]}], "}"}]],
       Annotation[#, {-0.61118, -0.067982}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[228]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.66302`"}], ",", 
            RowBox[{"-", "0.21418`"}]}], "}"}]],
       Annotation[#, {-0.66302, -0.21418}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[229]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.59965`"}], ",", 
            RowBox[{"-", "0.41886`"}]}], "}"}]],
       Annotation[#, {-0.59965, -0.41886}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[230]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.72638`"}], ",", 
            RowBox[{"-", "0.082602`"}]}], "}"}]],
       Annotation[#, {-0.72638, -0.082602}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[231]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.83007`"}], ",", "0.31213`"}], "}"}]],
       Annotation[#, {-0.83007, 0.31213}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[232]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.72062`"}], ",", "0.53874`"}], "}"}]],
       Annotation[#, {-0.72062, 0.53874}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[233]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.59389`"}], ",", "0.49488`"}], "}"}]],
       Annotation[#, {-0.59389, 0.49488}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[234]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.48445`"}], ",", "0.99927`"}], "}"}]],
       Annotation[#, {-0.48445, 0.99927}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[235]},
        RowBox[{"{", 
          RowBox[{
            RowBox[{"-", "0.0063364`"}], ",", "0.99927`"}], "}"}]],
       Annotation[#, {-0.0063364, 0.99927}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[236]},
        RowBox[{"{", 
          RowBox[{"0.63265`", ",", 
            RowBox[{"-", "0.030612`"}]}], "}"}]],
       Annotation[#, {0.63265, -0.030612}, "Tooltip"]& ]}}], 
   GraphicsComplexBox[CompressedData["
1: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
U7CzbVGmmkUOcvPzqj3rk2hvEAN4DgSdr6QgF+dlXrwalRlNQVZGZ9hgSi4m
J6rsuPCS8/40zpvSzwMK+msMmEvH5eFFwa+CnTac+1ZHtLM35/+LkxoU9FIi
j/seK8Ai/Wb6KnkKWqTfIKknF+DX/Bzjl1IU5OK+Gv3lnctJZIzi20Q9oViE
3HrDjTTA0/OgGLX2XZfU8SXj/WMapI1PizH0sq/WZh8yErhPKV+M9wYZPUrq
r9v0FONQvGouawcZXdSDUufSSvDyWffuHFo3cnHgOoH3dwq7u3FLHqdYUilD
bj3k9HJZrLhGGbYXjJgKaHZj8r2e+NkXy7F4h+W6lA3dqMpeYMrrUo7ceov6
TafqtVcF0oS1f1xz7EIujpydIf7drKwTzQR11A1SK7E4f8O9dyGd0/utQm79
17RrpfZ77ypUjdy43mJWJ1avXl7/qqQK20nVSqm5JOTiTm49eSBj02c3x2rc
LSXGVNtJwqV7rU/cr6pGbn0aJj7L7/32Gvz9MbrxUFrHNJ81uO+b58hR1w40
Ptj9bkllzb/9mnXgcr0MhtxkDe4vnB9+nNaOv6tEQjR31CK3Xs5LNBJqOFyL
i/f33t4W3I4Pld4Pzz9Wi7PqHDcIXGxHLs41Cbe1+RPfhkemrrXIrd8d74w9
+V1aiyEvxQRsKltRuq0yfoZ4HQryVM0JLWrFAHnp0FKxOuTihfsCLkKvBOuw
u1JZ1uNRC86QztYtWVKHE0vM1B84tqDKas0hlK1DLh6x96sef/OoFjdKf/X2
KGlGSzFT4XDPWiRf8msNLmom+OM+P+l8vOSBRC2uNDvrZvynGS/9PTG//2k1
np657/vsGS2EvLXNTrmbLWnBO/owU7+oCvWe79ybdaIFn8nf9XPNrpz23xYk
0/bFq2+pxMEuO6329y2E/j3emXV/rmvBlq/yb8TmVKBEi+BOvl8t0/GgnNiv
jFCvkHdfGbJmq5mM67fiQy8ty1MOZdgzsmCZv0UrYa8vhHyfWaS3YlrI3qzJ
iRL8WM0X85Ajv8a8/YObG0tQM/bU/FUr2wh/mPNpbX/7rjb0WTd3t+/2YkIf
veVF42vyizDWdznLoKANI5KtF636XIj7JKVFO8baCH9sT2v/vmpXO7Zn6EkG
Ligg7OFSoOi1tug8pG/Z3NyV346ll52+ZN/Nw7id1ve7ytqJ+MD60Vthy27H
3htCy/wF8zBJlB3qot2B90K9DLQ78T/7+9mYJbMZ8cZJ6f7BVx1EvFqVkNwt
m92BIqFP+q0+ZxH2HfGR4ug2mYFfIiN65I+TiPg4dsP9kmMSCWNiTn50hRTc
PyTNaiGT8NsjjVsssWS0XlPoHLKwk4jHXP8jj465WsgnoPr7kuqFHzpRdan3
rBH9WHyQ90P8b1UnEe+dM3ut8qW68HmH7nypoEiMXuyS8ud8F566v4Xf9UUI
Sh9dt9HCvYvILyov7y9t9urCBvdJy8dNH4l4UZaYXW/T8wFLQrVLnQe6cFEG
Y8unhFdYuvtKiNz8biKfvdk8ZjFh0o2vfjoVK4V4oGz9QgfeB934QXhw2PbZ
Tpwr3bjrfkQ3kT+58Uv7rFOgS9IDEKn8kNQpSMYN/XlyqX9fwe32kptnOfiO
m5/7FnzOzFpJRgnb86si5D6Af87bp+a7yES+F790emi5ARklh0qFvlp8hicf
fLt/niMT9cOmrTPuvblORkH73Z5neZNBbDz7d6QrmahP7njUfHnMef6KatVq
FEmFvy07iy+YkYl6Z1zhYlbFJjIGMrty5m7MJvg3hHYeD7McaMuzpZ1z7Mbb
RloJvYdygA4rRpSXd6OgQlaRa2k2gXdVVtWR9vhlQRXz0IqcZV3E+vzpJefi
wzpxfBHl1BZOPcXV92HlpTKbV6aBn39AYlAlieB30zKy84WzJHx6QiNIYUkS
gfe19pq9aDdJAKVU7Z9X4juI/Qcar5xts70Du8mR1gq9X4j+QrXQvHVHvSLA
qfHSqGFUOyFPNbvkW77b2nFGxbvH/mc+gCYjtGSwpI3QB9c/17fdFxWZ9AXX
BWz17wvaMPuE/3h4lhcwy7f4x9FbCX2fNd1Z/cu3Ff8WGtmOy1kR8cSfL6jn
25N7qJ1ubG0yuxW7u0Lvnk57jJoxC1MNJ1oI+5prfr59zeMWtD1d0HfEOwCV
JF6cjb3dggsVr03KuLzB1TdgaOfyFsKepSXWD/Dyt6C35h+d4rshRDwVGNh1
IVA3DG8J6FipGTQT/nKi7ot74O8mZD88y+joj0W3sz4bAuuaMGPqvTjk9vNO
8UQkvzdKQImN/vNsXZvQ2+ru+y2Cidho+Lgh8kwT4a9ayaPOegJN6ClIf5f9
MRlvyiXssBppxCcxcwKipVNQYYNESMTLRiIerH/+ITPlciN+/DtU5quTjtz+
pcelloGbhhk4+WHdXq+xBhSuMjI+cj4L63Ya1JjnNxDx59rarH0bnBvw0KuI
0EgvRG5/VSrEpe2VdB7+Pa8esXioHlvutyoN783DI+yepNXUeiL++RronY+P
qEeU7Z59eGk+Plo+z0vQrX46P+SjbJiO81qHetxp8IBp3pWPTekrWkgy9UT8
NUmYSDo8Uoc10feefnMtRG5/WMja6E33xiI8vWmG5k+XOhTjV0m9LVaM7Kce
Sy/sqiPi/9RVsg5D/aUn768rwW9PTa6+GK1F43FLc74PJXh286MT2+7WouYT
1s57Y6X4+NttpWHXWiLffP+5vhJdatFDOlY5dH0ZkUdJ8uzEzwZlGK4rfWTN
3xo8kfhV5E17OVFnmPCFrN7hUoGmuW2sOXY1RD7UD/hq0yVWgwpGJ3VfuVei
V82SHTbx1f+nHqpGfofAv9qpVaj5SWwbbWE1cX21yZW07Od/zxUPqI8GP6hC
KzNz1fBZNcgjpD07Xq0K5Q/Wr50oqMGdpSbDJ2IqCb5tba+SLU0r8difqrnX
cmoJvg63uekKHa3DH+fV2qquVOAGOZeQRr869FP3SDh0pIKQ++R6qZyL3eUY
FXu/yFeuHg3niXt2vCvHocVfhG4512N5QeD97avLCTtxF3zMFmwoQ5mMRKMt
RxsIuf7wbixu5mtEJq8s5duPUrQ01+tqXN+I0vcrw5uppYSd9tiNn47yKcXi
1K4ZC180Ypd/uuS4TCk6Vpo/cBdtQjq9xuukfwnhRwoJg2Zz1Uow/IZ2bgyl
ibCDLIVzP/aZNmPnvMNfX40XEX47a4NG6cKFRbj13vc3E+daUFBvjfjyWYVE
HOHaof2CM0uer2pFJ/J5NG3Kx7mKcltPt7bixbOJYaTKPKKu4Nr9yGaf5Cf+
beg661LX96O5uO3OJofJ1Zw4KOl2+8ujnP/qiGk/q8oMbmygtuNqvnHvLqdM
jHtgVMzj0IE+m873nJtMI/K+Rfn+2Rdy03D/cofx+8L/5f3OK5mjE1Ik3Cy3
VjqRLwVbZeLEIIyEYrezjhykJGPJpcuJWl9IRBw554YyGsqdmMB6FRLETCDq
gAtOHraRhnE42/XIfYHy//J+wbKM1rMruzDuyjfDle6RRB7f5PDsQG9TKF6T
3PqWQvsv799/dG6r3oJurK6V1bq99SWBKxrHy6oXhPriYdHSXbFj/+X5eQE1
gfZ8ZJxd6sTnu9sdDevOpyupk/GO6q/PL2Iv490d7L2RWmQi7lPd0hy22ZPx
4fuFplutb8C6SMEfEu6cPMv3O6HkjTfRpz02Jd8n0KS8lM4OJqO/d+TXV+tf
wm2l/TPb0v+rA3ziT4mubSSjj5XX0xHPt//6rHQy7tD7evbz4w/wuM9HX/0H
GfV7qWuS1cJhwaH5DFhDIfLa4cNODo/UKPjs/urnOXYRwMV9H41j9yxkR4Pr
upzft20pRN78MRpp3XWLgiE9xzQvWCZAr9vtjQ8+UlA9i35yrnMy1CnJNo3W
U4i83GKhLlnSTEEbC2V567pkcP0tcmtxKwVnRv36+FIghegz+0zJJw3uZUsY
z5rg4FbloKsfL6fDHOmC7YqzqERdwPQ1/Xl5CRU3+Hz8aCWW9S/vqlDx5uRJ
3sWS2aB3MVZDeTMVvS84rf+inwMJ+/Z7q+tTib5O2cxat1PHODg7dtaNz8/z
iL71ou4WIS/zfPB6E+N96QmV6Butcs4+sfMFFdG89PZ1wQLovfPktcg7KtGH
8tjf6gVIRZ/bdR0qh4ph0xG3M32tVBxpLI4rCyyGLz69bVWdVKKv9b39wvOo
fioKJmk87bxcCvJvZ+TVjXL2IzKc3NtQBusNxQ7umkkj+mT7Z9qphwnTUGF+
6O624HIIaxJdrCBGQ7j2aZ1wYyXYm5hGpMvRiL6bX2XwjyQOvcB+G/v3hiqi
7550y9N7wYEaaHx/smvzGhrRx6urGpS0UqHh/AKhrdtf18CxV8Kyo2tpWLt3
5hMpVi1Y9X+4PUuVRvQJ7yandW9ZR8NChWs7wufXwZowio015/62Z0/2DUM9
jJnftlujRCP6kPw9m2/6raLhJf/5Qa+N62FLpXBNBYfezAE8SyLqCf7ylEOi
l7s1wAL+aNE/82lE39NTQNVw21wafi2Ppy9JaYDTdXNZEZI0VHUrMlr5vBFm
+i/0G/xLJfqqP2q94o+MUFFfof+b4skmuKWxeHUylUr0aSX+bLKIraDiTF99
2+Z3zWB587lEcBaV6PPOXDzBKxtMxXfijxrgUwtYfRFz1wmiYsmyYPvR562E
vQCzVzIpuhVsBAIO2l+nEn3lCzxrG9e4UfG59gIHt5JWcNh34G/cVSoaVtP3
x8e0geI5pwjTo1SiT/0qX15eT4+KgUdptX+utcOGw09f39pJxc0LKIPOue3Q
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
1Gcc+lNu783jI8n/Xz32/wAcQokv
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[1, 1, 0], LineBox[CompressedData["
1:eJwl11OwGIYSANAb27Zt27Ztq7HV2LZt27btNLadtPE7mfdxZvd7Z1aJGrev
3C5QQEBAoSABAX9iYKQBQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNY
xCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zk
Jg95yUd+ClDwTw0oTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b/qIt7WhPBzrSic50oSvd6E4PetKL
3vShL3/Tj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCaz
mM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vY
zR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAm/3CL
29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhX/7jK9/4zg9+
8ovf/Gn+QAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNf9GWP8O7PR3oSCc604WudKM7PehJL3rTh778
TT/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc
4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvNn
8QciMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bfiLtrSjPR3oSCc604WudKM7PehJL3rTh778TT/6M4CB
DGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUs
YjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxzi
MEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc4z4PeMgj
HvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvPn6A9EYIIQ
lGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCU
ZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAWD/P8H+h8k
wYyu
         "]], LineBox[CompressedData["
1:eJwNw4dWSAEAANDn9CX9ioYGSUpIGlISpSWlPVFIVJQRTRqKhtkSSbTs/Ix7
z7mhmQUJ+XuCIOhxb0gQhBluhJHuM8poY4x1vweM86DxHjLBwyaa5BGTPeox
j5viCVM9aZrpZpjpKbM8bbY5njHXs+Z5zvPmW+AFCy2y2BJLvWiZlyy3wstW
WmW1NdZaZ70NNtpksy1e8arXbLXN697wpu3essPb3rHTLru96z177PW+D3zo
I/t87BP7HXDQIYcd8anPHHXMcSd87qRTvvCl084465yvfO0b3/rO98674KJL
LvvBFT/6yVU/u+YX1/3qNzfcdMttd/zuD3/6y9/+8a+7/vM/Dg5Z1Q==
         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"38.23036468734516`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"55.59543065086716`", " ", "x1"}], "-", 
           RowBox[{"369.424742998777`", " ", 
             SuperscriptBox["x1", "2"]}], "-", 
           RowBox[{"366.0052570882129`", " ", 
             SuperscriptBox["x1", "3"]}], "+", 
           RowBox[{"1182.6842352587944`", " ", 
             SuperscriptBox["x1", "4"]}], "+", 
           RowBox[{"573.2171174738475`", " ", 
             SuperscriptBox["x1", "5"]}], "-", 
           RowBox[{"1257.8956480748088`", " ", 
             SuperscriptBox["x1", "6"]}], "+", 
           RowBox[{"98.14628289346021`", " ", "x2"}], "-", 
           RowBox[{"177.11681699170055`", " ", "x1", " ", "x2"}], "-", 
           RowBox[{"842.2052479123489`", " ", 
             SuperscriptBox["x1", "2"], " ", "x2"}], "+", 
           RowBox[{"1279.3224145913498`", " ", 
             SuperscriptBox["x1", "3"], " ", "x2"}], "+", 
           RowBox[{"1629.7384730921174`", " ", 
             SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
           RowBox[{"2259.976153272608`", " ", 
             SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
           RowBox[{"194.25786561726866`", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"719.4449193631826`", " ", "x1", " ", 
             SuperscriptBox["x2", "2"]}], "+", 
           RowBox[{"1907.8747685687401`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "2"]}], "+", 
           RowBox[{"2553.5908222914413`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"4142.751186322558`", " ", 
             SuperscriptBox["x1", "4"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"511.8938948548222`", " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"914.3060410646514`", " ", "x1", " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"2919.0577884969184`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"4290.554371855803`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"514.2754403208446`", " ", 
             SuperscriptBox["x2", "4"]}], "+", 
           RowBox[{"1780.605228221617`", " ", "x1", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"4229.623845218967`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "4"]}], "+", 
           RowBox[{"785.3156633025543`", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"2055.537909045051`", " ", "x1", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"750.3797799024617`", " ", 
             SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
      Annotation[#, 
       38.23036468734516 + 55.59543065086716 $CellContext`x1 - 
        369.424742998777 $CellContext`x1^2 - 
        366.0052570882129 $CellContext`x1^3 + 
        1182.6842352587944` $CellContext`x1^4 + 
        573.2171174738475 $CellContext`x1^5 - 
        1257.8956480748088` $CellContext`x1^6 + 
        98.14628289346021 $CellContext`x2 - 
        177.11681699170055` $CellContext`x1 $CellContext`x2 - 
        842.2052479123489 $CellContext`x1^2 $CellContext`x2 + 
        1279.3224145913498` $CellContext`x1^3 $CellContext`x2 + 
        1629.7384730921174` $CellContext`x1^4 $CellContext`x2 - 
        2259.976153272608 $CellContext`x1^5 $CellContext`x2 - 
        194.25786561726866` $CellContext`x2^2 - 
        719.4449193631826 $CellContext`x1 $CellContext`x2^2 + 
        1907.8747685687401` $CellContext`x1^2 $CellContext`x2^2 + 
        2553.5908222914413` $CellContext`x1^3 $CellContext`x2^2 - 
        4142.751186322558 $CellContext`x1^4 $CellContext`x2^2 - 
        511.8938948548222 $CellContext`x2^3 + 
        914.3060410646514 $CellContext`x1 $CellContext`x2^3 + 
        2919.0577884969184` $CellContext`x1^2 $CellContext`x2^3 - 
        4290.554371855803 $CellContext`x1^3 $CellContext`x2^3 + 
        514.2754403208446 $CellContext`x2^4 + 
        1780.605228221617 $CellContext`x1 $CellContext`x2^4 - 
        4229.623845218967 $CellContext`x1^2 $CellContext`x2^4 + 
        785.3156633025543 $CellContext`x2^5 - 
        2055.537909045051 $CellContext`x1 $CellContext`x2^5 - 
        750.3797799024617 $CellContext`x2^6 == 0, "Tooltip"]& ]}], 
   GraphicsComplexBox[CompressedData["
1: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
6L29Xn7EMYg44rSpfJKO/v//iv8CNY3kqA==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[1, 0.5, 0], LineBox[CompressedData["
1:eJwl1EWUEAQUBdApYAKQlEbpkO5GWmlGQqWHzkGU7u4S6W6kyyClu7vBAhSU
7rxzWNz3N2/7frqo6MiOgQEBAXFFzA0imBBiEZs4hBJGOBExfeIRnw9IQEIS
kZgkJOVDkpGcFKQkFalJQ1o+4mPSkZ4MZCQTmclCVrKRnU/IQU5ykZs85CUf
+SlAQQpRmCIUpRjFKUFJSlGaTylDWcpRngpUpBKf8TmVqUJVqlGdGtSkFpF8
QW3qUJd6fMlXfE19GtCQRjSmCU2JohnNaUFLWtGaNrSlHe3pQEei6cQ3dOZb
vqMLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCbwPRP5
gUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS/mRZSxnBStZxWrWsJZ1rGcD
P/Ezv/ArG9nEZrawlW38xnZ2sJNd7GYPe9nHfg5wkEMc5ghHOcZxTnCSU5zm
DGc5x3kucJFLXOYKV7nGdX7nD/7kL/7mBje5xT/8y23u8B//c5d73OcBD3nE
Y57wlGc85wUvecVr3vCWmPEHEkQwIcQiNnEIJYxwIgLf/4t3DZeBnA==
         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"1.1421349413949629`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"0.6013206992316362`", " ", "x1"}], "-", 
           RowBox[{"1.871746021918109`", " ", 
             SuperscriptBox["x1", "2"]}], "+", 
           RowBox[{"0.1266829508604525`", " ", 
             SuperscriptBox["x1", "3"]}], "-", 
           RowBox[{"1.4238598804082194`", " ", 
             SuperscriptBox["x1", "4"]}], "-", 
           RowBox[{"0.24310143794161462`", " ", 
             SuperscriptBox["x1", "5"]}], "-", 
           RowBox[{"1.036180802027848`", " ", 
             SuperscriptBox["x1", "6"]}], "+", 
           RowBox[{"1.167183306967721`", " ", "x2"}], "-", 
           RowBox[{"0.9157338885044931`", " ", "x1", " ", "x2"}], "-", 
           RowBox[{"0.3687311715903987`", " ", 
             SuperscriptBox["x1", "2"], " ", "x2"}], "-", 
           RowBox[{"0.04855641474308441`", " ", 
             SuperscriptBox["x1", "3"], " ", "x2"}], "-", 
           RowBox[{"0.20707426137339366`", " ", 
             SuperscriptBox["x1", "4"], " ", "x2"}], "+", 
           RowBox[{"0.029235077367497576`", " ", 
             SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
           RowBox[{"1.2695293411108353`", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.3451842152419499`", " ", "x1", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.6064196845410812`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.04318486337910803`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.2926221944435167`", " ", 
             SuperscriptBox["x1", "4"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.1737758215527054`", " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.26931836012072896`", " ", "x1", " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.2802808737261971`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"0.017366811487270956`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"1.1631598974973163`", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.2869562470985799`", " ", "x1", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.3289723611146497`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.46910538786929556`", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"0.1379595080654664`", " ", "x1", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"0.9319895961536784`", " ", 
             SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
      Annotation[#, 
       1.1421349413949629` + 0.6013206992316362 $CellContext`x1 - 
        1.871746021918109 $CellContext`x1^2 + 
        0.1266829508604525 $CellContext`x1^3 - 
        1.4238598804082194` $CellContext`x1^4 - 
        0.24310143794161462` $CellContext`x1^5 - 
        1.036180802027848 $CellContext`x1^6 + 
        1.167183306967721 $CellContext`x2 - 
        0.9157338885044931 $CellContext`x1 $CellContext`x2 - 
        0.3687311715903987 $CellContext`x1^2 $CellContext`x2 - 
        0.04855641474308441 $CellContext`x1^3 $CellContext`x2 - 
        0.20707426137339366` $CellContext`x1^4 $CellContext`x2 + 
        0.029235077367497576` $CellContext`x1^5 $CellContext`x2 - 
        1.2695293411108353` $CellContext`x2^2 - 
        0.3451842152419499 $CellContext`x1 $CellContext`x2^2 - 
        0.6064196845410812 $CellContext`x1^2 $CellContext`x2^2 - 
        0.04318486337910803 $CellContext`x1^3 $CellContext`x2^2 - 
        0.2926221944435167 $CellContext`x1^4 $CellContext`x2^2 - 
        0.1737758215527054 $CellContext`x2^3 - 
        0.26931836012072896` $CellContext`x1 $CellContext`x2^3 - 
        0.2802808737261971 $CellContext`x1^2 $CellContext`x2^3 + 
        0.017366811487270956` $CellContext`x1^3 $CellContext`x2^3 - 
        1.1631598974973163` $CellContext`x2^4 - 
        0.2869562470985799 $CellContext`x1 $CellContext`x2^4 - 
        0.3289723611146497 $CellContext`x1^2 $CellContext`x2^4 - 
        0.46910538786929556` $CellContext`x2^5 - 
        0.1379595080654664 $CellContext`x1 $CellContext`x2^5 - 
        0.9319895961536784 $CellContext`x2^6 == 0, "Tooltip"]& ]}], 
   GraphicsComplexBox[CompressedData["
1:eJxdWHk4ldsXRukailA0SYZUSnE1UFhFhLiVpCvkFmlAppJIqZRQmZqkUipK
kpAhaiENppDpcJzp+875nKJSqEvip3Od0/P8vn/285397bX3Wnu973rXUd/p
a79LQkxMTFZcTOzXGLnZPnR9zzvUl/xnofgSDvrS833o+Q24fX3U3aehHNQo
kY7eLlWHyYnVS41lCfSQHn7POFmDEUs//YO2BK5P0LJO0KpEv9CbSk5JBHbL
ZyvfW1iONoLfSbTPO3nEdT6ip+5wdLk9if4C+89Q7hKrSNeZxO8rdXtWBBej
06vmQk9vEgeHLaMswx5gj++FPU0FJF75ZcY6FU0fzfaXryBxO5OAPfejcUaS
9ZejTBIXyklJTLC+AHlSJ/rEekjM8fm1QRp8OnDii283idrad8vkex6DQXjX
LkYfiVUD3GttzCKY3Bs5tYBP4vDIrwfh0/W2oCX1JO4lLIMehpcD1yY/7dno
fuMl87QaqTeg2x51RzuMRIFb1lWgIzfdc+tuEjd9W+R1bF41PD3tOjLfhUQ9
PdmLax3egtB/gbs+dXCG8UNWTZ7ErLhOKPRrgL/f9Kq5FBJj9t7BLKs8x+fn
CNRykl+mf7UJxIPLvssOcbCuMLpPu6cJLJRyt1TxOHgq6RwnRbEZCgV+csbs
t8Lt7PBojgIH7yj8calnsBWivzHFKRobCw7vefjuPg3m/tomgY1igqcdJBRC
5H2+srCnsl16VXY7KCv5LI4wY42dhw4nCmSulN9iIn2yxalURzpoC9Yz8X76
Z5PXPDo8EIwMvMxfkXh4dwdcEKxjoGBI6ICsL/zdrYoMnDlS2JEtyYCBJ9qF
uwM7UCk06Lm4EwPEBefoQMHx6QxocqneaW9Gx2Iv+cUBCkwIbPvAZXW3Y9KW
EfHCAibE9CZoxLe3oatrRKbaABM6BAvbUGnbiHKvFAvSj1rdV7FvQyuBAyz4
WpjBvKvehhL2ks/977PG7oOGjz59vPf+AwvUqu4ov7zViuccon++nMMei2cL
Vmh9yrq1nQ3NdLH0Zk4zrn/61Ur7Chv2xczYn1vXhKktrwaCcthj/jbhkYnF
MsuRDXN2Sq18MrlpzB82RIyTGcwOb0RVY32T3K9skBD424hPbhe1MZU5sH9d
YO4z3XfodrvX8vs8DghxV+Pz0dl8EwfM6QmaetX1OMlNxvjDbg78e+DE5hiT
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
jhiwca9die/cj7/9+P//J/4H9KHPQg==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwl1FV4EAQUBeCNbTCGdCqNdJekdKh0d44G2SgJBekuCenubqW7wyAFlG6Q
Linh38fDf+7LeT03bXhkjYjAgICAWCLqRiOIYEKITgxCiUlYVJdPiE0c4hKP
+CQgIYlITBKSkoxP+YzkpCAlqUhNGtKSjs9JTwYykonMZCEr2chODnKSi9zk
IS/5yM8XFKAghShMEYryJcUoTglKUorSlKEs5SjPV3zNN1SgIpWoTBWqUo3q
1KAmtahNHepSj/o0oCGNaEwTmtKM5oTTgpa0ojVtaEs72tOBb+lIBJF0ojNd
6Eo3vqM7PehJL77nB3rThx/pSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMtPjGM8
E5jIz0xiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrW
s4Ff+JWNbGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjF+43f+4E+Oc4KT
nOI0Z/iLs5zjPH/zDxe4yCUuc4WrXOM6N7jJLW5zh7vc41/u84CHPOIxT3jK
M57zgpf8xyte84a3vON/3hM1/kCiEUQwIUQnBqHEJCzw46/4AALagY4=
         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"0.2147136905780186`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.007594246346729309`", " ", "x1"}], "-", 
           RowBox[{"0.40128039915300645`", " ", 
             SuperscriptBox["x1", "2"]}], "-", 
           RowBox[{"0.0666800072202526`", " ", 
             SuperscriptBox["x1", "3"]}], "-", 
           RowBox[{"0.31766630908068666`", " ", 
             SuperscriptBox["x1", "4"]}], "-", 
           RowBox[{"0.11186993879493658`", " ", 
             SuperscriptBox["x1", "5"]}], "-", 
           RowBox[{"0.24308855743105082`", " ", 
             SuperscriptBox["x1", "6"]}], "+", 
           RowBox[{"0.17609634594466822`", " ", "x2"}], "-", 
           RowBox[{"0.11744852256595001`", " ", "x1", " ", "x2"}], "-", 
           RowBox[{"0.05584262932779163`", " ", 
             SuperscriptBox["x1", "2"], " ", "x2"}], "-", 
           RowBox[{"0.014680696479255576`", " ", 
             SuperscriptBox["x1", "3"], " ", "x2"}], "-", 
           RowBox[{"0.03627430873533777`", " ", 
             SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
           RowBox[{"0.0036420692731302965`", " ", 
             SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
           RowBox[{"0.23187720410424695`", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.06214433464397819`", " ", "x1", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.10912918480896443`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.021144852902208997`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.05525124047506288`", " ", 
             SuperscriptBox["x1", "4"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.09712320664318726`", " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.030142920585869693`", " ", "x1", " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.047536428491034226`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.0010144514567487516`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.26765332191792174`", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.04037688641836404`", " ", "x1", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.06093902129217504`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.18120232890071689`", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"0.012938518456826077`", " ", "x1", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"0.26289806204294314`", " ", 
             SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
      Annotation[#, 
       0.2147136905780186 - 0.007594246346729309 $CellContext`x1 - 
        0.40128039915300645` $CellContext`x1^2 - 
        0.0666800072202526 $CellContext`x1^3 - 
        0.31766630908068666` $CellContext`x1^4 - 
        0.11186993879493658` $CellContext`x1^5 - 
        0.24308855743105082` $CellContext`x1^6 + 
        0.17609634594466822` $CellContext`x2 - 
        0.11744852256595001` $CellContext`x1 $CellContext`x2 - 
        0.05584262932779163 $CellContext`x1^2 $CellContext`x2 - 
        0.014680696479255576` $CellContext`x1^3 $CellContext`x2 - 
        0.03627430873533777 $CellContext`x1^4 $CellContext`x2 - 
        0.0036420692731302965` $CellContext`x1^5 $CellContext`x2 - 
        0.23187720410424695` $CellContext`x2^2 - 
        0.06214433464397819 $CellContext`x1 $CellContext`x2^2 - 
        0.10912918480896443` $CellContext`x1^2 $CellContext`x2^2 - 
        0.021144852902208997` $CellContext`x1^3 $CellContext`x2^2 - 
        0.05525124047506288 $CellContext`x1^4 $CellContext`x2^2 - 
        0.09712320664318726 $CellContext`x2^3 - 
        0.030142920585869693` $CellContext`x1 $CellContext`x2^3 - 
        0.047536428491034226` $CellContext`x1^2 $CellContext`x2^3 - 
        0.0010144514567487516` $CellContext`x1^3 $CellContext`x2^3 - 
        0.26765332191792174` $CellContext`x2^4 - 
        0.04037688641836404 $CellContext`x1 $CellContext`x2^4 - 
        0.06093902129217504 $CellContext`x1^2 $CellContext`x2^4 - 
        0.18120232890071689` $CellContext`x2^5 - 
        0.012938518456826077` $CellContext`x1 $CellContext`x2^5 - 
        0.26289806204294314` $CellContext`x2^6 == 0, "Tooltip"]& ]}], 
   GraphicsComplexBox[CompressedData["
1:eJxdVHlQ01cQBofKIV7Bgkc8obQGPEEpHrMK1BIOp0ptdFBqoRQP0gxGFCiG
tIKK6AwER9Ey0KAo1gOQElASliQkASQQcickJGrFtioDAipKoMI0vz+6M292
Zuft7vu+b/ctjWfsTJzi4OBA+3AmvDZvI03G4kKARcTdNq0L79G7efTu6/At
u4jVlqZA13L3Z4k/1UCC61DHQT85KvtD57iE3YdIjg+V49OKGQ+YbOoXfMhl
xLkGfSnDsfEJQ2izyS4H6MXomdDHDbopBIWidXd5dhNajjs3XqOIIGWiDU+A
LyhfLYo+LYaLOZ5rtlbwUGZyvJAe3QzdkZ+l5GA1hk/2kcDRw2+8Qo6VI2ms
Uxa2XQJFE2FqGdZp1jonP5KAg69NEBW+C18Y2qg624f77rkxj+tPgW1Ws2jG
UwnYcQ0mBQXKZ0jBc3XBpcTHNUC6mrNvrPdDvi3tYs3GOiCBc/qJOAnYcdj7
j/o1sOqnCuHABm7/3O3NhK85eqe/9JwYzJW/crP5UgjsG39eNUcEk2nUNlgu
7zu5KFMI/IEgz1DJQ6IuXCl05m7ugLTSMXNedAOktLfkniZ3QVEWI+Tn5Lr/
8pUQ7bq09XpLNawcqT1vtagIHHMz6StSvDQQy6I4qysug9uAU6LWXwuKrR0c
XQkLJ+ml6wie+LFbufRQPTT9ldsRybqL+zuHRbFDeuD0Ti8Iy6hFj6FLHFOm
gdBF6Sh285cbwCnpQhSVIsas9to93YeMUMkUy9NJEtTef9S7KddIzIHxKc0j
udoI/6RljXr0taNG82fEmTtGYFK1EU1nOpHB2WaSlxqBMVm/C4tt4Q/2rTJC
ztuWzeuD1Tigyro1u98AkRvJ7AMH1Uj925/EtxigfhKvFq2pUw7skerBmDTX
J9ysw7Gq38MLGHqgN74uWnPYQODlpNU+391nxORV3rKZe7Xg6DBhJvw88/Zt
7WINDBYal4/QzJhd781fyFUBaZ5AS3LpQTvf+i1KNyeyBZeoXsdc3KIA91B3
9pJCC84Up/u4JMshY0EeaaHZgnZ9FwdYBfwZVkxvZ795taEFUrsXt2lWWVHA
az0ozxUCeepKP/cAK7EXjmXbYigrrGiRlqW66vgQmB82L8LJiqJR3uG4hko4
yfQ6YRZbiD1siK0KMZy1YPIR5tTIBRdg+7t7SjbFgtc+eTIsbWYieXzHp16l
PWjX2XfCcXpw87C/OCftKkpLHqkfWswYN/1WsfBqFX6X8CYxQ2TCgWiDZuD2
A2yKd5p1JM6Edt2HSt5VMEJNuInGnX2luRHt/L3tUqx+GdWEK/Uyc3mYEctD
/nDquSPB8Zjj5+bJ9Gifg96PWoaVQzqsENmke2kP0a5f4Y1x+bFf5Pj9x2d4
2eEanH8ygf7KW4FfewuS1j1TIjEXSaz6xnVKwtvjdU/8bpCPK9ElZtTQulOB
2oQUx5fzVbiTPSr0CJYjU7mMQhaqiHcIPLzqqoPUuOjm+7PfVDbjshGprvM3
NVIW8vIC14vRwfPHKLe7agI3433wtMJ8NcYfSgjGkhpMLZDe/GGXGkllIzRB
ZA3KlvsOlu1QEzzvfz/kwWSqMF66P/BUVj4WD94vdn6rxMezHL3X7skn5vz/
/+u/V0P4pw==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.5, 0, 0.5], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87}]},
       RowBox[{
         RowBox[{
           RowBox[{"0.004686393818729945`", "\[VeryThinSpace]"}], "-", 
           RowBox[{"0.017268512928123994`", " ", "x1"}], "-", 
           RowBox[{"0.05402666467428378`", " ", 
             SuperscriptBox["x1", "2"]}], "-", 
           RowBox[{"0.018211930272488058`", " ", 
             SuperscriptBox["x1", "3"]}], "-", 
           RowBox[{"0.04288367434711196`", " ", 
             SuperscriptBox["x1", "4"]}], "-", 
           RowBox[{"0.020785725544382294`", " ", 
             SuperscriptBox["x1", "5"]}], "-", 
           RowBox[{"0.03381512108366967`", " ", 
             SuperscriptBox["x1", "6"]}], "+", 
           RowBox[{"0.006419565612289005`", " ", "x2"}], "-", 
           RowBox[{"0.013275614657397608`", " ", "x1", " ", "x2"}], "-", 
           RowBox[{"0.007610399191308554`", " ", 
             SuperscriptBox["x1", "2"], " ", "x2"}], "-", 
           RowBox[{"0.0023858654464389327`", " ", 
             SuperscriptBox["x1", "3"], " ", "x2"}], "-", 
           RowBox[{"0.0046720534985891455`", " ", 
             SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
           RowBox[{"0.0010831882653128603`", " ", 
             SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
           RowBox[{"0.03727153103610352`", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.00885309965691589`", " ", "x1", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.01393200071403749`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.0035498050869903464`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.006941938423802738`", " ", 
             SuperscriptBox["x1", "4"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"0.022245711272531478`", " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.0035483285730602116`", " ", "x1", " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.006248971708272024`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.00039450385931261676`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"0.04072376148630121`", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.005003955872916698`", " ", "x1", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.007885961265377397`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"0.03153152560454222`", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"0.0015768566452031532`", " ", "x1", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"0.040588521868169275`", " ", 
             SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
      Annotation[#, 
       0.004686393818729945 - 0.017268512928123994` $CellContext`x1 - 
        0.05402666467428378 $CellContext`x1^2 - 
        0.018211930272488058` $CellContext`x1^3 - 
        0.04288367434711196 $CellContext`x1^4 - 
        0.020785725544382294` $CellContext`x1^5 - 
        0.03381512108366967 $CellContext`x1^6 + 
        0.006419565612289005 $CellContext`x2 - 
        0.013275614657397608` $CellContext`x1 $CellContext`x2 - 
        0.007610399191308554 $CellContext`x1^2 $CellContext`x2 - 
        0.0023858654464389327` $CellContext`x1^3 $CellContext`x2 - 
        0.0046720534985891455` $CellContext`x1^4 $CellContext`x2 - 
        0.0010831882653128603` $CellContext`x1^5 $CellContext`x2 - 
        0.03727153103610352 $CellContext`x2^2 - 
        0.00885309965691589 $CellContext`x1 $CellContext`x2^2 - 
        0.01393200071403749 $CellContext`x1^2 $CellContext`x2^2 - 
        0.0035498050869903464` $CellContext`x1^3 $CellContext`x2^2 - 
        0.006941938423802738 $CellContext`x1^4 $CellContext`x2^2 - 
        0.022245711272531478` $CellContext`x2^3 - 
        0.0035483285730602116` $CellContext`x1 $CellContext`x2^3 - 
        0.006248971708272024 $CellContext`x1^2 $CellContext`x2^3 - 
        0.00039450385931261676` $CellContext`x1^3 $CellContext`x2^3 - 
        0.04072376148630121 $CellContext`x2^4 - 
        0.005003955872916698 $CellContext`x1 $CellContext`x2^4 - 
        0.007885961265377397 $CellContext`x1^2 $CellContext`x2^4 - 
        0.03153152560454222 $CellContext`x2^5 - 
        0.0015768566452031532` $CellContext`x1 $CellContext`x2^5 - 
        0.040588521868169275` $CellContext`x2^6 == 0, "Tooltip"]& ]}], 
   GraphicsComplexBox[CompressedData["
1:eJxle3k8VP/3vyWFVKSFoiQpRakkqRyhorSoRAuloiSSKGsqoiSRRGmRhKJI
2ePY931fxpi5szCTLe2UfvORue/H4/vzz30c997XPa+zP8/rzKIT5/dZCwkI
CHQKCwj877polxj74AMuUNLsO9Ps25F6xsop6hUXxE71qDVebkOPxOVXvrzj
wo57Skb3lNqwJcCmRyyLC088zdyvJLeierzb2M9iLmT87/XOFtTSX/r7dSUX
Imppcs9UWvDYlw0rnzVwQdnofws04+H1o68cWrjg2BFZZ8dqwpgpKevM2rhw
/3/LGzXhhTd7Tl9u5QL78LOagbeNKJK2734Jj/4frwICjfimVOSnZDMXYh2/
zqCaNiAnwHN2bj0Xzv/v82n1ePOz7iU67/uDDwdL3UTq0XvaTKZaKX9/dbha
cYX17XwuDDBXKuo212JIbZOCTCb/+zX4wDwpUPsNFyo2O0cV21Vhl1+OpU88
j9/x9SuR8qVku1YMF35Pjdw9sqQSXQQiVjrw5LdzXD7l2Lhzm9YeXy64uiaI
+L0owZ5Ngf5FPvz9l2COSEP5fh69cs2OP798S/Dv//68ucB5KbY3floJesoN
x/+x5e+3CKVVImrjTLlwZ+a0J3PnFuBbRymroj1c6BrfTz42jhW0LtnNBbUU
N+3dsXkYLVjSvnwbFw7W+D3zvYFYZqb0vGM9Fy6M85+D7SLtv85ockFf3HvT
4rPZuCNny35bDS6UW/oGjA1koVHPtaRuRS4sG+c3A1u/aU+6yaPlRR9kXjqU
hnMzpwn0LeTxKyWw5FVIKuZInbmsIcUF6jg/77GgLDikkkd7UwtEyrLeoUWZ
ZvEHCS48/rJdPCs2Cc9lBcqOCXFh+fj6idjo2KwpOYkLJnOHlRaJvkbxnL8d
l8Y40C4b1JTmFoPf1y+xWf6TAxHj+olGl01FZid+cSBW66NPh20UmoYZHrj/
lQM/v8S8aVQKRfPLb3pchjgwdVx+wThrc0Vb9GcO2C8z9k13CkDlMZ2r2wY4
oNUmmO+daQWft2tuvfiJA2fG13cCy4QzN49xObDpZ4/5tAI3yM4Jqgjt5QCM
6/chPDvDUQzgcODsIKNiYe8jsFLanf6Dd39MKDmpWigWDDvfNqv3cCBl3B9i
AY8o35bm3d+yO2C04mUcNEbkNmry6M1DrpsFVJPhm5BLZRibA4rj8kgGCnWR
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
5NEn5wS83fwl9f+rx/4fYIas7g==
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwl11OwGIYSANAb27Zt27Ztq7HV2LZt27btNLadtPE7mfdxZvd7Z1aJGrev
3C5QQEBAoSABAX9iYKQBQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNY
xCYOcYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zk
Jg95yUd+ClDwTw0oTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWo
TR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b/qIt7WhPBzrSic50oSvd6E4PetKL
3vShL3/Tj/4MYCCDGMwQhjKM4YxgJKMYzRjGMo7xTGAik5jMFKYyjenMYCaz
mM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN7exgJ7vY
zR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAm/3CL
29zhLve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhX/7jK9/4zg9+
8ovf/Gn+QAQmCEEJRnBCEJJQhCYMYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJ
R3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC1nJRnZykJNc5CYPeclH
fgpQkEIUpghFKUZxSlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9
GtCQRjSmCU1pRnNa0JJWtKYNf9GWP8O7PR3oSCc604WudKM7PehJL3rTh778
TT/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jL
POazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+
9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc
4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvNn
8QciMEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CE
JCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU1oSjOa04KWtKI1bfiLtrSjPR3oSCc604WudKM7PehJL3rTh778TT/6M4CB
DGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUs
YjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9nOAgxzi
MEc4yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm/zDLW5zh7vc4z4PeMgj
HvOEpzzjOS94ySte84a3vOM9H/jIJz7zhX/5j6984zs/+MkvfvPn6A9EYIIQ
lGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCU
ZCQnBSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAWD/P8H+h8k
wYyu
         "]], LineBox[CompressedData["
1:eJwNw4dWSAEAANDn9CX9ioYGSUpIGlISpSWlPVFIVJQRTRqKhtkSSbTs/Ix7
z7mhmQUJ+XuCIOhxb0gQhBluhJHuM8poY4x1vweM86DxHjLBwyaa5BGTPeox
j5viCVM9aZrpZpjpKbM8bbY5njHXs+Z5zvPmW+AFCy2y2BJLvWiZlyy3wstW
WmW1NdZaZ70NNtpksy1e8arXbLXN697wpu3essPb3rHTLru96z177PW+D3zo
I/t87BP7HXDQIYcd8anPHHXMcSd87qRTvvCl084465yvfO0b3/rO98674KJL
LvvBFT/6yVU/u+YX1/3qNzfcdMttd/zuD3/6y9/+8a+7/vM/Dg5Z1Q==
         "]]},
       RowBox[{
         RowBox[{
           RowBox[{"38.230847208490964`", "\[VeryThinSpace]"}], "+", 
           RowBox[{"55.59583281946198`", " ", "x1"}], "-", 
           RowBox[{"369.43018922756477`", " ", 
             SuperscriptBox["x1", "2"]}], "-", 
           RowBox[{"366.0086760474572`", " ", 
             SuperscriptBox["x1", "3"]}], "+", 
           RowBox[{"1182.701810623724`", " ", 
             SuperscriptBox["x1", "4"]}], "+", 
           RowBox[{"573.2232154510732`", " ", 
             SuperscriptBox["x1", "5"]}], "-", 
           RowBox[{"1257.9131480911767`", " ", 
             SuperscriptBox["x1", "6"]}], "+", 
           RowBox[{"98.1466657162587`", " ", "x2"}], "-", 
           RowBox[{"177.12043697661238`", " ", "x1", " ", "x2"}], "-", 
           RowBox[{"842.2108498398533`", " ", 
             SuperscriptBox["x1", "2"], " ", "x2"}], "+", 
           RowBox[{"1279.3433863459327`", " ", 
             SuperscriptBox["x1", "3"], " ", "x2"}], "+", 
           RowBox[{"1629.751184944591`", " ", 
             SuperscriptBox["x1", "4"], " ", "x2"}], "-", 
           RowBox[{"2260.005286939617`", " ", 
             SuperscriptBox["x1", "5"], " ", "x2"}], "-", 
           RowBox[{"194.2605974729822`", " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"719.448245694719`", " ", "x1", " ", 
             SuperscriptBox["x2", "2"]}], "+", 
           RowBox[{"1907.9002174111672`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "2"]}], "+", 
           RowBox[{"2553.60412301735`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"4142.795943036802`", " ", 
             SuperscriptBox["x1", "4"], " ", 
             SuperscriptBox["x2", "2"]}], "-", 
           RowBox[{"511.89458923579`", " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"914.3190647533198`", " ", "x1", " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"2919.066939566614`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "3"]}], "-", 
           RowBox[{"4290.592791223578`", " ", 
             SuperscriptBox["x1", "3"], " ", 
             SuperscriptBox["x2", "3"]}], "+", 
           RowBox[{"514.2802308516873`", " ", 
             SuperscriptBox["x2", "4"]}], "+", 
           RowBox[{"1780.6083031400738`", " ", "x1", " ", 
             SuperscriptBox["x2", "4"]}], "-", 
           RowBox[{"4229.651203014624`", " ", 
             SuperscriptBox["x1", "2"], " ", 
             SuperscriptBox["x2", "4"]}], "+", 
           RowBox[{"785.3150491203105`", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"2055.548452374884`", " ", "x1", " ", 
             SuperscriptBox["x2", "5"]}], "-", 
           RowBox[{"750.3814590578343`", " ", 
             SuperscriptBox["x2", "6"]}]}], "\[Equal]", "0"}]],
      Annotation[#, 
       38.230847208490964` + 55.59583281946198 $CellContext`x1 - 
        369.43018922756477` $CellContext`x1^2 - 
        366.0086760474572 $CellContext`x1^3 + 
        1182.701810623724 $CellContext`x1^4 + 
        573.2232154510732 $CellContext`x1^5 - 
        1257.9131480911767` $CellContext`x1^6 + 
        98.1466657162587 $CellContext`x2 - 
        177.12043697661238` $CellContext`x1 $CellContext`x2 - 
        842.2108498398533 $CellContext`x1^2 $CellContext`x2 + 
        1279.3433863459327` $CellContext`x1^3 $CellContext`x2 + 
        1629.751184944591 $CellContext`x1^4 $CellContext`x2 - 
        2260.005286939617 $CellContext`x1^5 $CellContext`x2 - 
        194.2605974729822 $CellContext`x2^2 - 
        719.448245694719 $CellContext`x1 $CellContext`x2^2 + 
        1907.9002174111672` $CellContext`x1^2 $CellContext`x2^2 + 
        2553.60412301735 $CellContext`x1^3 $CellContext`x2^2 - 
        4142.795943036802 $CellContext`x1^4 $CellContext`x2^2 - 
        511.89458923579 $CellContext`x2^3 + 
        914.3190647533198 $CellContext`x1 $CellContext`x2^3 + 
        2919.066939566614 $CellContext`x1^2 $CellContext`x2^3 - 
        4290.592791223578 $CellContext`x1^3 $CellContext`x2^3 + 
        514.2802308516873 $CellContext`x2^4 + 
        1780.6083031400738` $CellContext`x1 $CellContext`x2^4 - 
        4229.651203014624 $CellContext`x1^2 $CellContext`x2^4 + 
        785.3150491203105 $CellContext`x2^5 - 
        2055.548452374884 $CellContext`x1 $CellContext`x2^5 - 
        750.3814590578343 $CellContext`x2^6 == 0, "Tooltip"]& ]}]},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"x1\"", TraditionalForm], 
    FormBox["\"x2\"", TraditionalForm]},
  GridLines->Automatic,
  ImageSize->500,
  PlotRange->{{-1, 1.25}, {-1, 1.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5604609455895433`*^9, 3.560463771816102*^9, 
  3.560470554969873*^9, 3.5604716070000887`*^9, 3.560471653806015*^9, 
  3.560471690196169*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in function LogitModelFit in this case find a \
decision boundary with a hole.  In terms of topology, the region contained \
within the blue boundary is not a ",
 StyleBox[ButtonBox["simply connected space",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Simply_connected_space"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Simply_connected_space"],
  FontSlant->"Italic"],
 ".\n\nThe decision boundary found by LogitModelFit and the one with \
\[Lambda]=0 and NMinimize are almost same."
}], "Text",
 CellChangeTimes->{{3.56045926913127*^9, 3.560459300616375*^9}, {
   3.56045940633101*^9, 3.560459413757352*^9}, 3.560460089318686*^9, {
   3.560462534541655*^9, 3.5604626102574463`*^9}, {3.560471747198188*^9, 
   3.560471780683125*^9}},
 Background->RGBColor[1, 0.925, 0.925]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction", "Subsection",
 CellChangeTimes->{{3.5603991611676483`*^9, 3.560399163574177*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"Rule", ",", 
   RowBox[{"{", 
    RowBox[{"\[Chi]", ",", "nonLinearFeatures"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.560461065760516*^9, 3.560461070434761*^9}, 
   3.560461105722879*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Chi]0", "\[Rule]", "1"}], ",", 
   RowBox[{"\[Chi]1", "\[Rule]", "x1"}], ",", 
   RowBox[{"\[Chi]2", "\[Rule]", "x2"}], ",", 
   RowBox[{"\[Chi]3", "\[Rule]", 
    SuperscriptBox["x1", "2"]}], ",", 
   RowBox[{"\[Chi]4", "\[Rule]", 
    RowBox[{"x1", " ", "x2"}]}], ",", 
   RowBox[{"\[Chi]5", "\[Rule]", 
    SuperscriptBox["x2", "2"]}], ",", 
   RowBox[{"\[Chi]6", "\[Rule]", 
    SuperscriptBox["x1", "3"]}], ",", 
   RowBox[{"\[Chi]7", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "2"], " ", "x2"}]}], ",", 
   RowBox[{"\[Chi]8", "\[Rule]", 
    RowBox[{"x1", " ", 
     SuperscriptBox["x2", "2"]}]}], ",", 
   RowBox[{"\[Chi]9", "\[Rule]", 
    SuperscriptBox["x2", "3"]}], ",", 
   RowBox[{"\[Chi]10", "\[Rule]", 
    SuperscriptBox["x1", "4"]}], ",", 
   RowBox[{"\[Chi]11", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "3"], " ", "x2"}]}], ",", 
   RowBox[{"\[Chi]12", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["x2", "2"]}]}], ",", 
   RowBox[{"\[Chi]13", "\[Rule]", 
    RowBox[{"x1", " ", 
     SuperscriptBox["x2", "3"]}]}], ",", 
   RowBox[{"\[Chi]14", "\[Rule]", 
    SuperscriptBox["x2", "4"]}], ",", 
   RowBox[{"\[Chi]15", "\[Rule]", 
    SuperscriptBox["x1", "5"]}], ",", 
   RowBox[{"\[Chi]16", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "4"], " ", "x2"}]}], ",", 
   RowBox[{"\[Chi]17", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["x2", "2"]}]}], ",", 
   RowBox[{"\[Chi]18", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["x2", "3"]}]}], ",", 
   RowBox[{"\[Chi]19", "\[Rule]", 
    RowBox[{"x1", " ", 
     SuperscriptBox["x2", "4"]}]}], ",", 
   RowBox[{"\[Chi]20", "\[Rule]", 
    SuperscriptBox["x2", "5"]}], ",", 
   RowBox[{"\[Chi]21", "\[Rule]", 
    SuperscriptBox["x1", "6"]}], ",", 
   RowBox[{"\[Chi]22", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "5"], " ", "x2"}]}], ",", 
   RowBox[{"\[Chi]23", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "4"], " ", 
     SuperscriptBox["x2", "2"]}]}], ",", 
   RowBox[{"\[Chi]24", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["x2", "3"]}]}], ",", 
   RowBox[{"\[Chi]25", "\[Rule]", 
    RowBox[{
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["x2", "4"]}]}], ",", 
   RowBox[{"\[Chi]26", "\[Rule]", 
    RowBox[{"x1", " ", 
     SuperscriptBox["x2", "5"]}]}], ",", 
   RowBox[{"\[Chi]27", "\[Rule]", 
    SuperscriptBox["x2", "6"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.560461070922324*^9, 3.560461106153584*^9, 
  3.5604637718432827`*^9, 3.560470555277494*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictedProb", "[", 
   RowBox[{"xx1_", ",", "xx2_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]1", ",", "\[Beta]2", ",", "sol"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sol", "=", 
      RowBox[{"ReplaceAll", "[", 
       RowBox[{
        RowBox[{"MapThread", "[", 
         RowBox[{"Rule", ",", 
          RowBox[{"{", 
           RowBox[{"\[Chi]", ",", "nonLinearFeatures"}], "}"}]}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", " ", "xx1"}], ",", 
          RowBox[{"x2", "\[Rule]", " ", "xx2"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Normal", "[", "logitModel1", "]"}], "/.", "sol"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5604277568707542`*^9, 3.560427905843457*^9}, {
   3.560430117666955*^9, 3.560430120638379*^9}, {3.560460991770432*^9, 
   3.560460997394149*^9}, 3.560461043097824*^9, {3.5604610848191032`*^9, 
   3.560461187443948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.560461265750677*^9, 3.560461267839904*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.051267`", ",", "0.69956`", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.560461268255598*^9, 3.560461299699573*^9, 
  3.560463771958947*^9, 3.56047055544664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.560461324983008*^9, 3.560461325356024*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.051267`", ",", "0.69956`"}], "}"}]], "Output",
 CellChangeTimes->{{3.560461320216064*^9, 3.5604613257908154`*^9}, 
   3.5604637720301743`*^9, 3.560470555530347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedProb", "@@", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560427714942388*^9, 3.560427732310598*^9}, {
   3.560427843257237*^9, 3.560427846343747*^9}, 3.560430124653967*^9, {
   3.56043033734347*^9, 3.560430339343094*^9}, {3.560431899362463*^9, 
   3.5604318999698353`*^9}, {3.560461259679619*^9, 3.560461261019264*^9}, {
   3.560461304994533*^9, 3.5604613295328608`*^9}}],

Cell[BoxData["0.881876410720814`"], "Output",
 CellChangeTimes->{
  3.560461118970722*^9, 3.560461189472595*^9, {3.560461313449769*^9, 
   3.560461329923922*^9}, 3.5604637721915293`*^9, 3.560470555615658*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prediction accuracy", "Subsection",
 CellChangeTimes->{{3.560429826880619*^9, 3.5604298299508743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"predict", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"predictedProb", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "\[GreaterEqual]", " ", "0.5"}], ",", 
    "1", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560430127462318*^9, 3.560430146189047*^9}, {
  3.560430345071875*^9, 3.5604303506338787`*^9}, {3.560431901715722*^9, 
  3.5604319020507717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"predict", "@@", "#"}], "&"}], ",", "featureData"}], "]"}], 
      "-", "y"}], ",", "0"}], "]"}], "/", 
   RowBox[{"Length", "[", "y", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.560427912839872*^9, 3.560427942056789*^9}, {
  3.560428064067721*^9, 3.56042813919593*^9}, {3.5604301524948473`*^9, 
  3.560430192941256*^9}, {3.56043192588513*^9, 3.5604319434827843`*^9}, {
  3.5604613632606363`*^9, 3.56046139184379*^9}}],

Cell[BoxData["0.8898305084745762`"], "Output",
 CellChangeTimes->{{3.560461370591488*^9, 3.5604613929980392`*^9}, 
   3.560463772786557*^9, 3.560470556181024*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function reference"
}], "Section",
 CellChangeTimes->{{3.560384578687779*^9, 3.560384582202077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LogitModelFit"}]], "Input",
 CellChangeTimes->{{3.5603845847049913`*^9, 3.56038458578137*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"LogitModelFit\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) constructs \
a binomial logistic regression model of the form \!\(\*RowBox[{\\\"1\\\", \
\\\"/\\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"+\\\", SuperscriptBox[\\\
\"\[ExponentialE]\\\", RowBox[{\\\"-\\\", RowBox[{\\\"(\\\", \
RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"0\\\"], \\\"+\\\", \
RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"1\\\"], SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"1\\\"]}], \\\" \\\", \\\"+\\\", \
RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"2\\\"], SubscriptBox[StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"2\\\"]}], \\\" \\\", \\\"+\\\", \\\"\[Ellipsis]\\\"}], \
\\\")\\\"}]}]]}], \\\")\\\"}]}]\) that fits the \
\!\(\*SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\) for successive \!\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\) values \
1, 2, \!\(\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\).\\n\!\(\*RowBox[{\\\"LogitModelFit\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"11\\\", \\\
\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"12\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"21\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"22\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\) constructs a binomial logistic regression model of the \
form \!\(\*RowBox[{\\\"1\\\", \\\"/\\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"1\\\", \\\"+\\\", SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", RowBox[{\\\"(\\\", RowBox[{SubscriptBox[\\\"\[Beta]\\\", \
\\\"0\\\"], \\\"+\\\", RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"1\\\"], \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"1\\\"]}], \\\" \\\", \
\\\"+\\\", RowBox[{SubscriptBox[\\\"\[Beta]\\\", \\\"2\\\"], \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"2\\\"]}], \\\" \\\", \
\\\"+\\\", \\\"\[Ellipsis]\\\"}], \\\")\\\"}]}]]}], \\\")\\\"}]}]\) where the \
\!\(\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\) depend on the variables \!\(\*SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"k\\\", \
\\\"TI\\\"]]\).\\n\!\(\*RowBox[{\\\"LogitModelFit\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\) constructs a \
binomial logistic regression model from the design matrix \
\!\(\*StyleBox[\\\"m\\\", \\\"TI\\\"]\) and response vector \!\(\*StyleBox[\\\
\"v\\\", \\\"TI\\\"]\).\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/LogitModelFit"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.560470557342461*^9},
 CellTags->"Info3560452556-5335873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IncludeConstantBasis"}]], "Input",
 CellChangeTimes->{{3.5603873829047003`*^9, 3.5603873833227987`*^9}, 
   3.5603874527638083`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"IncludeConstantBasis is an option for LinearModelFit and \
other fitting functions that specifies whether a constant term should be \
included if not explicitly given in the list of basis functions.\"\>", "MSG"],
   "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/IncludeConstantBasis"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.560470557981633*^9},
 CellTags->"Info3560452557-5335873"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"IncludeConstantBasis is an option for LinearModelFit and \
other fitting functions that specifies whether a constant term should be \
included if not explicitly given in the list of basis functions.\"\>", "MSG"],
   "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/IncludeConstantBasis"]}]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.5603873841782217`*^9, 3.560387452765646*^9},
 CellTags->"Info3560369383-9177665"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ArrayPlot"}]], "Input",
 CellChangeTimes->{{3.560387521964642*^9, 3.5603875234926558`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ArrayPlot\\\", \\\"[\\\", \
StyleBox[\\\"array\\\", \\\"TI\\\"], \\\"]\\\"}]\) generates a plot in which \
the values in an array are shown in a discrete array of squares. \"\>", "MSG"],
   "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ArrayPlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.560470558609647*^9},
 CellTags->"Info3560452558-5335873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NMinimize"}]], "Input",
 CellChangeTimes->{{3.560438330229314*^9, 3.56043833046591*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"NMinimize\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\
\"}]\) minimizes \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) numerically with \
respect to \!\(\*StyleBox[\\\"x\\\", \
\\\"TI\\\"]\).\\n\!\(\*RowBox[{\\\"NMinimize\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\) minimizes \!\(\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\) numerically with respect to \!\(\*StyleBox[\\\"x\\\", \
\\\"TI\\\"]\), \!\(\*StyleBox[\\\"y\\\", \\\"TI\\\"]\), \!\(\*StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]\). \\n\!\(\*RowBox[{\\\"NMinimize\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"f\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"cons\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) minimizes \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) numerically subject to the \
constraints \!\(\*StyleBox[\\\"cons\\\", \\\"TI\\\"]\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NMinimize"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.56047055914135*^9},
 CellTags->"Info3560452558-5335873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ContourPlot"}]], "Input",
 CellChangeTimes->{{3.560459161869232*^9, 3.560459162200302*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates \
a contour plot of \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) as a function of \!\
\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\) and \!\(\*StyleBox[\\\"y\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"==\\\", StyleBox[\\\"g\\\
\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots \
contour lines for which \!\(\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"=\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}]\). \
\\n\!\(\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots \
several contour lines. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ContourPlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.56047056009111*^9},
 CellTags->"Info3560452559-5335873"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1866, 1156},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 26, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3560452556-5335873"->{
  Cell[1010906, 19796, 4456, 68, 123, "Print",
   CellTags->"Info3560452556-5335873"]},
 "Info3560452557-5335873"->{
  Cell[1015585, 19876, 526, 12, 50, "Print",
   CellTags->"Info3560452557-5335873"]},
 "Info3560369383-9177665"->{
  Cell[1016114, 19890, 600, 14, 50, "Print",
   CellTags->"Info3560369383-9177665"]},
 "Info3560452558-5335873"->{
  Cell[1016886, 19914, 507, 12, 50, "Print",
   CellTags->"Info3560452558-5335873"],
  Cell[1017550, 19935, 1624, 28, 88, "Print",
   CellTags->"Info3560452558-5335873"]},
 "Info3560452559-5335873"->{
  Cell[1019334, 19972, 3163, 51, 88, "Print",
   CellTags->"Info3560452559-5335873"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3560452556-5335873", 1022977, 20042},
 {"Info3560452557-5335873", 1023094, 20045},
 {"Info3560369383-9177665", 1023209, 20048},
 {"Info3560452558-5335873", 1023324, 20051},
 {"Info3560452559-5335873", 1023525, 20056}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 302, 4, 95, "Title"],
Cell[CellGroupData[{
Cell[749, 23, 101, 1, 83, "Section"],
Cell[853, 26, 329, 10, 33, "Input"],
Cell[CellGroupData[{
Cell[1207, 40, 365, 11, 33, "Input"],
Cell[1575, 53, 1064, 32, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2676, 90, 263, 7, 33, "Input"],
Cell[2942, 99, 11805, 200, 306, "Output"]
}, Open  ]],
Cell[14762, 302, 135, 3, 33, "Input"],
Cell[14900, 307, 1985, 50, 110, "Input"],
Cell[CellGroupData[{
Cell[16910, 361, 1469, 33, 33, "Input"],
Cell[18382, 396, 108845, 1814, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127264, 2215, 1633, 48, 53, "Input"],
Cell[128900, 2265, 108569, 1807, 460, "Output"],
Cell[237472, 4074, 257872, 4263, 460, 107093, 1789, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495393, 8343, 118, 1, 83, "Section"],
Cell[CellGroupData[{
Cell[495536, 8348, 102, 1, 42, "Subsection"],
Cell[495641, 8351, 156, 2, 52, "Text"],
Cell[495800, 8355, 586, 16, 53, "Input"],
Cell[496389, 8373, 196, 3, 52, "Text"],
Cell[496588, 8378, 372, 10, 53, "Input"],
Cell[496963, 8390, 276, 8, 33, "Input"],
Cell[497242, 8400, 702, 17, 53, "Input"],
Cell[CellGroupData[{
Cell[497969, 8421, 128, 2, 33, "Input"],
Cell[498100, 8425, 187, 4, 33, "Output"]
}, Open  ]],
Cell[498302, 8432, 250, 4, 52, "Text"],
Cell[CellGroupData[{
Cell[498577, 8440, 455, 11, 33, "Input"],
Cell[499035, 8453, 2489, 45, 65, "Output"]
}, Open  ]],
Cell[501539, 8501, 334, 7, 52, "Text"],
Cell[501876, 8510, 619, 19, 53, "Input"],
Cell[502498, 8531, 238, 5, 52, "Text"],
Cell[CellGroupData[{
Cell[502761, 8540, 2136, 51, 129, "Input"],
Cell[504900, 8593, 15801, 411, 636, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[520750, 9010, 105, 1, 42, "Subsection"],
Cell[520858, 9013, 303, 6, 52, "Text"],
Cell[521164, 9021, 364, 9, 33, "Input"],
Cell[521531, 9032, 374, 7, 52, "Text"],
Cell[521908, 9041, 777, 24, 59, "Input"],
Cell[522688, 9067, 292, 6, 52, "Text"],
Cell[CellGroupData[{
Cell[523005, 9077, 751, 18, 53, "Input"],
Cell[523759, 9097, 168, 3, 33, "Output"]
}, Open  ]],
Cell[523942, 9103, 293, 4, 52, "Text"],
Cell[CellGroupData[{
Cell[524260, 9111, 221, 6, 33, "Input"],
Cell[524484, 9119, 112, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524645, 9126, 161, 4, 42, "Subsection"],
Cell[CellGroupData[{
Cell[524831, 9134, 104, 1, 30, "Subsubsection"],
Cell[524938, 9137, 533, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[525496, 9151, 488, 13, 33, "Input"],
Cell[525987, 9166, 637, 12, 26, "Message"]
}, Open  ]],
Cell[526639, 9181, 308, 8, 53, "Input"],
Cell[CellGroupData[{
Cell[526972, 9193, 592, 16, 33, "Input"],
Cell[527567, 9211, 165, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527769, 9219, 99, 1, 33, "Input"],
Cell[527871, 9222, 411, 10, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528331, 9238, 157, 2, 30, "Subsubsection"],
Cell[528491, 9242, 533, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[529049, 9256, 823, 19, 33, "Input"],
Cell[529875, 9277, 654, 12, 26, "Message"],
Cell[530532, 9291, 340, 8, 33, "Output"]
}, Open  ]],
Cell[530887, 9302, 308, 8, 53, "Input"],
Cell[CellGroupData[{
Cell[531220, 9314, 806, 21, 33, "Input"],
Cell[532029, 9337, 545, 10, 26, "Message"],
Cell[532577, 9349, 167, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532781, 9357, 94, 1, 33, "Input"],
Cell[532878, 9360, 337, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533252, 9373, 99, 1, 33, "Input"],
Cell[533354, 9376, 339, 8, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533742, 9390, 107, 1, 30, "Subsubsection"],
Cell[533852, 9393, 413, 9, 33, "Input"],
Cell[CellGroupData[{
Cell[534290, 9406, 406, 10, 33, "Input"],
Cell[534699, 9418, 2572, 46, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537308, 9469, 1052, 19, 33, "Input"],
Cell[538363, 9490, 333, 10, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[538733, 9505, 204, 3, 33, "Input"],
Cell[538940, 9510, 364, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[539341, 9523, 208, 4, 33, "Input"],
Cell[539552, 9529, 228, 5, 33, "Output"]
}, Open  ]],
Cell[539795, 9537, 436, 6, 52, "Text"],
Cell[540234, 9545, 462, 9, 33, "Input"],
Cell[CellGroupData[{
Cell[540721, 9558, 406, 10, 33, "Input"],
Cell[541130, 9570, 2552, 46, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543719, 9621, 473, 12, 33, "Input"],
Cell[544195, 9635, 518, 14, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544750, 9654, 202, 3, 33, "Input"],
Cell[544955, 9659, 352, 7, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545344, 9671, 175, 3, 33, "Input"],
Cell[545522, 9676, 225, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545784, 9686, 83, 1, 33, "Input"],
Cell[545870, 9689, 3840, 67, 129, "Output"]
}, Open  ]],
Cell[549725, 9759, 687, 12, 52, "Text"],
Cell[CellGroupData[{
Cell[550437, 9775, 526, 11, 33, "Input"],
Cell[550966, 9788, 516, 14, 71, "Output"]
}, Open  ]],
Cell[551497, 9805, 488, 7, 52, "Text"],
Cell[CellGroupData[{
Cell[552010, 9816, 162, 3, 33, "Input"],
Cell[552175, 9821, 1932, 37, 290, "Output"]
}, Open  ]],
Cell[554122, 9861, 578, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[554725, 9875, 441, 11, 33, "Input"],
Cell[555169, 9888, 335, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555541, 9901, 328, 8, 33, "Input"],
Cell[555872, 9911, 111, 1, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556044, 9919, 105, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[556174, 9924, 187, 6, 33, "Input"],
Cell[556364, 9932, 281, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556682, 9944, 405, 11, 33, "Input"],
Cell[557090, 9957, 353, 9, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557480, 9971, 179, 4, 33, "Input"],
Cell[557662, 9977, 261, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557960, 9987, 349, 9, 33, "Input"],
Cell[558312, 9998, 2100, 40, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560449, 10043, 286, 6, 33, "Input"],
Cell[560738, 10051, 17881, 440, 636, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[578668, 10497, 100, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[578793, 10502, 64, 1, 33, "Input"],
Cell[578860, 10505, 350, 7, 56, "Output"]
}, Open  ]],
Cell[579225, 10515, 871, 24, 110, "Input"],
Cell[CellGroupData[{
Cell[580121, 10543, 330, 6, 33, "Input"],
Cell[580454, 10551, 109, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580612, 10558, 109, 1, 42, "Subsection"],
Cell[580724, 10561, 466, 12, 33, "Input"],
Cell[CellGroupData[{
Cell[581215, 10577, 537, 14, 33, "Input"],
Cell[581755, 10593, 98, 1, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[581914, 10601, 149, 2, 83, "Section"],
Cell[CellGroupData[{
Cell[582088, 10607, 157, 2, 42, "Subsection"],
Cell[582248, 10611, 156, 2, 52, "Text"],
Cell[582407, 10615, 398, 10, 33, "Input"],
Cell[582808, 10627, 196, 3, 52, "Text"],
Cell[583007, 10632, 263, 6, 33, "Input"],
Cell[583273, 10640, 332, 9, 33, "Input"],
Cell[583608, 10651, 785, 18, 53, "Input"],
Cell[CellGroupData[{
Cell[584418, 10673, 153, 3, 33, "Input"],
Cell[584574, 10678, 206, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584817, 10688, 122, 2, 33, "Input"],
Cell[584942, 10692, 123, 2, 33, "Output"]
}, Open  ]],
Cell[585080, 10697, 250, 4, 52, "Text"],
Cell[CellGroupData[{
Cell[585355, 10705, 479, 11, 33, "Input"],
Cell[585837, 10718, 2492, 45, 58, "Output"]
}, Open  ]],
Cell[588344, 10766, 334, 7, 52, "Text"],
Cell[588681, 10775, 874, 23, 53, "Input"],
Cell[CellGroupData[{
Cell[589580, 10802, 472, 10, 53, "Input"],
Cell[590055, 10814, 198, 5, 33, "Output"],
Cell[590256, 10821, 196, 5, 33, "Output"]
}, Open  ]],
Cell[590467, 10829, 238, 5, 52, "Text"],
Cell[CellGroupData[{
Cell[590730, 10838, 2854, 69, 148, "Input"],
Cell[593587, 10909, 45811, 1282, 630, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[639447, 12197, 173, 3, 42, "Subsection"],
Cell[639623, 12202, 1002, 29, 33, "Input"],
Cell[CellGroupData[{
Cell[640650, 12235, 1077, 24, 33, "Input"],
Cell[641730, 12261, 1593, 49, 42, "Output"]
}, Open  ]],
Cell[643338, 12313, 631, 18, 33, "Input"],
Cell[CellGroupData[{
Cell[643994, 12335, 410, 10, 33, "Input"],
Cell[644407, 12347, 29772, 492, 376, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[674228, 12845, 105, 1, 42, "Subsection"],
Cell[674336, 12848, 303, 6, 52, "Text"],
Cell[674642, 12856, 364, 9, 33, "Input"],
Cell[675009, 12867, 374, 7, 52, "Text"],
Cell[675386, 12876, 777, 24, 59, "Input"],
Cell[676166, 12902, 301, 4, 52, "Text"],
Cell[676470, 12908, 1077, 30, 59, "Input"],
Cell[677550, 12940, 357, 7, 52, "Text"],
Cell[CellGroupData[{
Cell[677932, 12951, 784, 18, 53, "Input"],
Cell[678719, 12971, 668, 12, 33, "Output"]
}, Open  ]],
Cell[679402, 12986, 372, 7, 52, "Text"],
Cell[CellGroupData[{
Cell[679799, 12997, 311, 8, 33, "Input"],
Cell[680113, 13007, 436, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680586, 13020, 278, 5, 33, "Input"],
Cell[680867, 13027, 137, 2, 33, "Output"]
}, Open  ]],
Cell[681019, 13032, 147, 3, 33, "Input"],
Cell[CellGroupData[{
Cell[681191, 13039, 224, 5, 33, "Input"],
Cell[681418, 13046, 136, 2, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[681603, 13054, 239, 4, 42, "Subsection"],
Cell[CellGroupData[{
Cell[681867, 13062, 104, 1, 30, "Subsubsection"],
Cell[681974, 13065, 1083, 16, 71, "Text"],
Cell[CellGroupData[{
Cell[683082, 13085, 1037, 22, 33, "Input"],
Cell[684122, 13109, 195, 4, 33, "Output"]
}, Open  ]],
Cell[684332, 13116, 456, 6, 52, "Text"],
Cell[684791, 13124, 406, 10, 53, "Input"],
Cell[CellGroupData[{
Cell[685222, 13138, 2058, 53, 91, "Input"],
Cell[687283, 13193, 216, 4, 33, "Output"],
Cell[687502, 13199, 213, 4, 33, "Output"],
Cell[687718, 13205, 215, 4, 33, "Output"],
Cell[687936, 13211, 215, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688188, 13220, 92, 1, 33, "Input"],
Cell[688283, 13223, 2578, 55, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690898, 13283, 1334, 34, 224, "Input"],
Cell[692235, 13319, 159, 2, 33, "Output"],
Cell[692397, 13323, 2264, 46, 72, "Output"],
Cell[694664, 13371, 159, 2, 33, "Output"],
Cell[694826, 13375, 2453, 54, 72, "Output"],
Cell[697282, 13431, 159, 2, 33, "Output"],
Cell[697444, 13435, 2560, 58, 72, "Output"],
Cell[700007, 13495, 159, 2, 33, "Output"],
Cell[700169, 13499, 2582, 58, 72, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[702800, 13563, 157, 2, 30, "Subsubsection"],
Cell[702960, 13567, 641, 10, 52, "Text"],
Cell[CellGroupData[{
Cell[703626, 13581, 1052, 23, 33, "Input"],
Cell[704681, 13606, 743, 14, 47, "Message"],
Cell[705427, 13622, 2391, 48, 72, "Output"]
}, Open  ]],
Cell[707833, 13673, 308, 8, 53, "Input"],
Cell[CellGroupData[{
Cell[708166, 13685, 903, 23, 33, "Input"],
Cell[709072, 13710, 580, 11, 26, "Message"],
Cell[709655, 13723, 215, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709907, 13732, 94, 1, 33, "Input"],
Cell[710004, 13735, 2550, 54, 72, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[712603, 13795, 229, 3, 30, "Subsubsection"],
Cell[712835, 13800, 195, 4, 52, "Text"],
Cell[713033, 13806, 525, 10, 33, "Input"],
Cell[CellGroupData[{
Cell[713583, 13820, 273, 4, 53, "Input"],
Cell[713859, 13826, 1195, 23, 53, "Output"],
Cell[715057, 13851, 141, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715235, 13858, 442, 11, 33, "Input"],
Cell[715680, 13871, 29802, 493, 388, "Output"]
}, Open  ]],
Cell[745497, 14367, 163, 4, 52, "Text"],
Cell[CellGroupData[{
Cell[745685, 14375, 609, 15, 53, "Input"],
Cell[746297, 14392, 688, 11, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747022, 14408, 1481, 25, 53, "Input"],
Cell[748506, 14435, 290, 6, 33, "Output"],
Cell[748799, 14443, 546, 15, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749382, 14463, 257, 4, 33, "Input"],
Cell[749642, 14469, 1997, 36, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[751676, 14510, 539, 12, 33, "Input"],
Cell[752218, 14524, 2276, 46, 72, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[754543, 14576, 135, 1, 30, "Subsubsection"],
Cell[754681, 14579, 436, 6, 52, "Text"],
Cell[755120, 14587, 713, 15, 33, "Input"],
Cell[CellGroupData[{
Cell[755858, 14606, 209, 5, 33, "Input"],
Cell[756070, 14613, 140, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[756247, 14620, 440, 11, 33, "Input"],
Cell[756690, 14633, 29788, 492, 376, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786515, 15130, 898, 20, 33, "Input"],
Cell[787416, 15152, 520, 15, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[787973, 15172, 304, 5, 33, "Input"],
Cell[788280, 15179, 1927, 36, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790244, 15220, 539, 12, 33, "Input"],
Cell[790786, 15234, 2238, 46, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793061, 15285, 209, 4, 33, "Input"],
Cell[793273, 15291, 2029, 39, 279, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[795351, 15336, 122, 1, 30, "Subsubsection"],
Cell[795476, 15339, 687, 12, 52, "Text"],
Cell[CellGroupData[{
Cell[796188, 15355, 902, 19, 53, "Input"],
Cell[797093, 15376, 495, 15, 71, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[797649, 15398, 105, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[797779, 15403, 3701, 100, 91, "Input"],
Cell[801483, 15505, 24259, 422, 455, "Output"],
Cell[825745, 15929, 10432, 193, 455, "Output"],
Cell[836180, 16124, 10491, 193, 455, "Output"],
Cell[846674, 16319, 7159, 137, 455, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853870, 16461, 1199, 29, 33, "Input"],
Cell[855072, 16492, 24198, 421, 455, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[879307, 16918, 607, 12, 53, "Input"],
Cell[879917, 16932, 122407, 2600, 630, "Output"]
}, Open  ]],
Cell[1002339, 19535, 912, 19, 90, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003288, 19559, 100, 1, 42, "Subsection"],
Cell[CellGroupData[{
Cell[1003413, 19564, 250, 6, 33, "Input"],
Cell[1003666, 19572, 2689, 77, 69, "Output"]
}, Open  ]],
Cell[1006370, 19652, 1117, 29, 110, "Input"],
Cell[CellGroupData[{
Cell[1007512, 19685, 146, 3, 33, "Input"],
Cell[1007661, 19690, 208, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007906, 19699, 221, 6, 33, "Input"],
Cell[1008130, 19707, 206, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008373, 19716, 532, 11, 33, "Input"],
Cell[1008908, 19729, 208, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009165, 19738, 109, 1, 42, "Subsection"],
Cell[1009277, 19741, 466, 12, 33, "Input"],
Cell[CellGroupData[{
Cell[1009768, 19757, 593, 15, 33, "Input"],
Cell[1010364, 19774, 162, 2, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010587, 19783, 168, 5, 83, "Section"],
Cell[CellGroupData[{
Cell[1010780, 19792, 123, 2, 33, "Input"],
Cell[1010906, 19796, 4456, 68, 123, "Print",
 CellTags->"Info3560452556-5335873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1015399, 19869, 161, 3, 33, "Input"],
Cell[CellGroupData[{
Cell[1015585, 19876, 526, 12, 50, "Print",
 CellTags->"Info3560452557-5335873"],
Cell[1016114, 19890, 600, 14, 50, "Print",
 CellTags->"Info3560369383-9177665"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016763, 19910, 120, 2, 33, "Input"],
Cell[1016886, 19914, 507, 12, 50, "Print",
 CellTags->"Info3560452558-5335873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017430, 19931, 117, 2, 33, "Input"],
Cell[1017550, 19935, 1624, 28, 88, "Print",
 CellTags->"Info3560452558-5335873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019211, 19968, 120, 2, 33, "Input"],
Cell[1019334, 19972, 3163, 51, 88, "Print",
 CellTags->"Info3560452559-5335873"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

